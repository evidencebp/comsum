repo_name,commit,message,Is_Core_Adaptive,Is_Adaptive,Justification,Certain,Comment,Sampling
kennethreitz/pipenv,02fc52b8da7dc76d429504864704d59ea29426fb,"Leverage pip to access installed packages

- Use `get_installed_distributions` from pip
- This cascades to `pkg_resources.working_set` which relies on
  `sys.path` to uncover packages
- Consequently I implemented `temp_path()` as a contextmanager in the
  style of `temp_environ()`
- This requires us to know the environment's `sys.path`, so
  `load_path(python)` will do a `json.dumps` of `sys.path` to stdout
  which then gets loaded and returned
- Allows us to avoid trying to hack around `pip freeze` output to parse
  out names from comments etc
- Provides other potential uses

Signed-off-by: Dan Ryan <2591e5f46f28d303f9dc027d475a5c60d8dea17a@danryan.co>
",TRUE,TRUE,implemented,,,12_may_2021_mp_not_adaptive_commits_batch_1
KDE/libkscreen,e020fe7235aabdf9898b0269f3156905c392decf,"Refactor the backend loading code

Untangle the large plugin loading logic in the BackendManager static
into  separate bits. This makes the code clearer and easier to auto-test.

- listBackends() compiles a list of backends from the plugin paths
- preferredBackend() picks the backend, in this priority:
	- if KSCREEN_BACKEND is set in the environment, this is the only
	  used method to find the backend plugin
	- if platform is X11, the XRandR backend is picked
        - if platform is wayland, KWayland backend is picked
        - if neither is the case, QScreen backend is picked

It does introduce a slight behavioral change: The mechanism was based on
falling through, so it would consider another backend if the logically
picked on fails to load. This is undesired behavior, however, since the
backendloader may be able to load the plugin, but that doesn't mean that
the plugin actually work.

Parsing of the KSCREEN_BACKEND variable is kept case-insensitive.
",TRUE,FALSE,introduce,FALSE,part of refactor,12_may_2021_mp_not_adaptive_commits_batch_1
wireapp/wire-ios,e36223c86f7b400a59375543edccb6919dfca56e,"ZIOS-9870: iPad - Impossible to register with email from settings (#2010)

* Switched default flag for displaying landing page

* removed staging flag

* Displaying landing page by default only if there are no active accounts

* Disabled email verification when going back from TermsOfUse view controller

* Fixed layout of TermsOfUseViewController
",TRUE,TRUE,removed,,,12_may_2021_mp_not_adaptive_commits_batch_1
WoltLab/WCF,ce16b422386fcafb0516396018aa713167b3602e,"Fix calculation of nextExec of cronjobs

To properly calculate nextExec we must not specify the TIME_NOW parameter,
because if the cronjob is run on the scheduled time the nextExec() will
return the current time.

Not passing the TIME_NOW parameter adds at least 120 seconds of delay to
prevent this issue.

This bug was introduced in commit 485f8e1888824b862823de983e019afcb9bca7ce.
When moving the update of the execution time the calls were not correctly
moved and the explicit passing of TIME_NOW was added.
",TRUE,FALSE,"fix calculation, bug was introduced",,,12_may_2021_mp_not_adaptive_commits_batch_1
gnuradio/volk,e1d13224afaa25edefaeb1d883fcfd8d7a2a670b,"volk: adding copyright notice to all volk kernels.

Note I just set these all to 2014, though some kernels are from earlier. We'd need to go through the history to know for certain.
",TRUE,FALSE,adding copyright,,,12_may_2021_mp_not_adaptive_commits_batch_1
coreboot/coreboot,c7e5d798420bb00f2c1853ca6abc11a7ee027886,"exynos5250: add missing address-of operator in UART driver

This adds a missing address-of operator. This was a subtle bug that
didn't seem to cause problems at first since the serial console
appeared to work. However it caused an imprecise external abort which
became apparent later on when aborts were unmasked in the kernel via
the CPSR_A bit.

(credit goes to Gabe Black for finding this)
Signed-off-by: Gabe Black <5c8aa1266c03186393d9e7b3b4e3b14239af8201@chromium.org>
Signed-off-by: David Hendricks <3b0deacc4b5357f519084f1ea34bd42bf5d34545@chromium.org>
Change-Id: I80a33b147d92d559fa8fefbe7d5642235deb9aea
Reviewed-on: http://review.coreboot.org/3038
Tested-by: build bot (Jenkins)
Reviewed-by: Ronald G. Minnich <f569d0af9a3481c4007b95c7180d6c41009f2513@gmail.com>
",TRUE,FALSE,add missing,,the is a bug fix,12_may_2021_mp_not_adaptive_commits_batch_1
enhavo/EnhavoAppBundle,4cbd7476bb586518ee5a9d310bcf9609aa63721e,"Sliderbugfixes (#908)

* fix [SliderBundle] Can't create Slider without code #904

* fix [Vue warn]: Error in render: ""Entry with name ""create-action"" does not exist in registry""

* fix [SliderBundle] Can't add Slide to Slider #906",TRUE,FALSE,"can't add, can't create",,,12_may_2021_mp_not_adaptive_commits_batch_1
MarkUsProject/Markus,516b30a68a7a53302b35dded06426e23fbe0f7e2,"Merge branch 'master' of https://github.com/MarkUsProject/Markus

* 'master' of https://github.com/MarkUsProject/Markus:
  - updated the functional test for refreshing assignment stat caching to be more resilient - improved the comments for the test to aid future developers
  - added more descriptive comments to the functional caching test - removed assignment_stat_test which is not necessary
  - added functional test for grade distribution caching
  - changed AssignmentStats to AssignmentStat - fixed everything that broke due to this
  - changed the refresh function to refresh_grade_distribution - removed unnecessary fixture
  -added caching for assignment statistics (just grade distribution for now)
",TRUE,TRUE,added caching,,,12_may_2021_mp_not_adaptive_commits_batch_1
tensorflow/probability,7c687b245b34397c13563a714ad9bf0290b419e3,"sharded_jit cleanup (#3075)

* Add sharding utilities to xla_bridge
* Change partitions argument to in_parts and out_parts
* Add unit tests
* Reuse more pxla functionality
* Remove stale translation rule
* Fail on non-TPU platforms
* Add docstring
* And more!",TRUE,TRUE,add unit tests,,,12_may_2021_mp_not_adaptive_commits_batch_1
rakudo/rakudo,70453688ec3a1dfa9e7c0ff287601a481b4b996a,"[distro]

Fix svn properties on newly added file.
It's ok to do this when the file is added. =-)



git-svn-id: ebc29296f9ec9cd27706eb0497c26fede0e190b2@27754 d31e2699-5ff4-0310-a27c-f18f2fbe73fe
",TRUE,FALSE,when the file is added,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,817eacca2fb088900fd92165fe0ab8877da095ab,"Web Audio: add warning about autoplay policy coming back in M70.

Bug: 848507
Change-Id: I33f2a8d55bd63b294ac8cd0144ff362eea588093
Reviewed-on: https://chromium-review.googlesource.com/1081613
Commit-Queue: Mounir Lamouri <819781fbd87cc666157c6af562f895bbac1cef59@chromium.org>
Reviewed-by: François Beaufort <d46131b785c18589d75c23b23c31a0369522c6f9@gmail.com>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#563756}",TRUE,FALSE,add warning,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,29f7ac0a99a7096e4acfaefc8e1f19e57c756d4a,"[iOS] Wait until the view controller is presented before dismiss

Chrome can be started with the 2 following events:
+ Open the sign-in upgrade promo
+ Open an URL (from an external app)

The opening the URL interrupts the sign-in promo, while its view
controller is not fully presented yet.

This patch prevent from the coordinator from dismissing its view
controller before it is fully on the screen.

Fixed: 1126170
Change-Id: I03287c9f830f650c10aa2476d6d693af3783c553
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2593107
Commit-Queue: Jérôme Lebel <f0ae2b815c4fd879539d7411cba93dd8c792b2f0@chromium.org>
Auto-Submit: Jérôme Lebel <f0ae2b815c4fd879539d7411cba93dd8c792b2f0@chromium.org>
Reviewed-by: Nohemi Fernandez <78d213a83b5bb7229a2a4d3ecc39b60c3473f0a5@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#837147}
",TRUE,FALSE,presented,,,12_may_2021_mp_not_adaptive_commits_batch_1
systemd/systemd,dd0f79523f04ea07575af0cdfc218b16e9010110,"Add new meson configure option for controlling systemd-analyze support

Enables building systemd without systemd-analyze, which in
return saves approx. 4 MB of space upon installing systemd.

Signed-off-by: Jakov Smolic <d7de33b854c7ca8b4c2b996b8e18cb8d82743062@sartura.hr>
Signed-off-by: Luka Perkov <fe6d8aafe911b69ec3eecb89e7941038c0d25a22@sartura.hr>
",TRUE,TRUE,add,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,86891cd21a09c09dbc0907dca1540a5194661b77,"Check for null WebContents in ContentSettingImageView::AnimationEnded.

While location bar user input in progress, GetContentSettingWebContents
will return nullptr, but ContentSettingImageView::AnimationEnded is
still invoked.

Add a check in the latter to make sure we are not checking on a null
WebContent if the promo should be shown.

Bug: 1054074
Change-Id: I261bceb410478360f6af2d84ddf5e01f5c9e6cc3
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2064968
Reviewed-by: Dana Fried <a17398dafd0dbb668a6a5fb625583979d4773fc4@chromium.org>
Commit-Queue: Balazs Engedy <00c50698141689108ff274ce7dee1b641f70b337@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#743025}
",TRUE,TRUE,"check, add a check",,,12_may_2021_mp_not_adaptive_commits_batch_1
koreader/koreader,592e54aa024a7fbef6b78783ed2231e83291daa3,"Pocketbook: Fix silly rotation bug on PB740 (#6734)

 It detects B288, disables hwrot...
.... and there wasn't the isAlwaysPortrait enabled to serve as an alternative. ",TRUE,FALSE,wasn't enabled,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,eb614d94395293da7beecaa29555acb8966a2796,"arm64: dts: renesas: r8a77990: ebisu: Enable watchdog timer

Add a device node for the Watchdog Timer (WDT) controller on the
R8A77990 SoC, and enable the watchdog on the Ebisu board.

Signed-off-by: Takeshi Kihara <fbc9f9a901acd6ddbdd6b05c7107f20decd72612@renesas.com>
[geert: Squashed 2 commits]
Signed-off-by: Geert Uytterhoeven <a1ff81395f7e6bf5b509fe9aab06bf3419493e1d@glider.be>
Signed-off-by: Simon Horman <9662bddcc379be37df16f02a449c344b4718c1a1@verge.net.au>
",TRUE,TRUE,"add, enable",,,12_may_2021_mp_not_adaptive_commits_batch_1
WoWAnalyzer/WoWAnalyzer,cc7e6c0a5dc92a37f57f8f1d4ca5d0b574b906af,"[Shadowlands][Prepatch][Mage] Base mage changes for Shadowlands

This adds the overall mage changes that are shared across specs, towards #3657

- Added Alter Time, Polymorph Mawrat, and Focus Magic to all mage Spellbooks
- Moved Mirror Images to baseline and updated the mage talents with Focus Magic
- Updated Shimmer's recharge timer to 25 seconds
",TRUE,TRUE,adds,,,12_may_2021_mp_not_adaptive_commits_batch_1
citusdata/citus,399b5738b012675f1c5d729b652d2d24bf19cacd,"Fix Join Problem With VARCHAR Partition Columns

This change fixes the problem with joins with VARCHAR columns. Prior to
this change, when we tried to do large table joins on varchar columns, we got
an error of the form:
ERROR: cannot perform local joins that involve expressions
DETAIL: local joins can be performed between columns only.

This is because we have a check in CheckJoinBetweenColumns() which requires the
join clause to have only 'Var' nodes (i.e. columns). Postgres adds a relabel t
ype cast to cast the varchar to text; hence the type of the node is not T_Var
and the join fails.

The fix involves calling strip_implicit_coercions() to the left and right
arguments so that RELABELTYPE is stripped to VAR.

Fixes #76.
",TRUE,FALSE,this change,,,12_may_2021_mp_not_adaptive_commits_batch_1
gem/oq-engine,5c2f7fd8b4904ab8f2ad7a5d4c66d12bfdde6747,"update doc config copyright string


Former-commit-id: 1a5e9d566e56fa0ab109edd2fc9d9351cb489896 [formerly f490967fadb89e6117af92e4115af11d3042e126]
Former-commit-id: 9237e99f92e3a0eddce697f180e0b4ef4f4274ee",TRUE,FALSE,update doc,,,12_may_2021_mp_not_adaptive_commits_batch_1
openlawlibrary/pygls,dee06cd2695a0d98ef793818f369a01a282d8216,"Dynamically register/unregister client capability (#67)

* Add missing LSP features and types

* Support dynamically (un)registering capabilities

* Extend JSON server example with new features

",TRUE,FALSE,add missing,,,12_may_2021_mp_not_adaptive_commits_batch_1
LMSCloud/Koha-LMSCloud,ac390bd228c6ea7eab7c8b694a378a837f8da464,"Bug 20760: Fill authorised values in svc framework

To test:
 1 - Map a marc field to an authorised value in the default framework -
say 300$c -> CCODE
 2 - Open the advanced cataloguing editor
 3 - Create a new field 300$c - note there is no dropdown
 4 - browse to: /cgi-bin/koha/svc/cataloguing/framework?callback=define
 5 - Note the many instance of
Koha::Schema::ResultSet::AuthorisedValueCategory->HASH...
 6 - Apply patch
 7 - Restart memcached and plack
 8 - reload/recreate record in rancor
 9 - Note that 300$c is now a dropdown as expected
10 - repeate 4
11 - note the authorised values look correct in response

Signed-off-by: Nick Clemens <75ef9faee755c70589550b513ad881e5a603182c@bywatersolutions.com>
Signed-off-by: Martin Renvoize <e328553c8782de72a55cb4ac905938926e626fa1@ptfs-europe.com>

Signed-off-by: Nick Clemens <75ef9faee755c70589550b513ad881e5a603182c@bywatersolutions.com>
Signed-off-by: Martin Renvoize <e328553c8782de72a55cb4ac905938926e626fa1@ptfs-europe.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
CTSRD-CHERI/u-boot,8b0592b89e0f9f81c9e150c81d96f8a43e4d6101,"disable imls command if no flash is defined

Default CONFIG_CMD_IMLS must be disabled when CONFIG_SYS_NO_FLASH is defined

Signed-off-by: Valeriy Glushkov <f66fc2ddb88f0772e0c47c9beb6bb0405137ec53@lstec.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
colinsc/koha,426a055a07a6b8c019d71831f1cf7aca512ee592,"Bug 22581: Show and play musical inscripts

This patch adds musical inscripts to OPAC's detail page

To test:
1. run previous patch test plan
2. apply this patch
3. edit a the marc structure of a MARC bibliographic framework, and in tag 031 enable the following subfiels to be visible in editor: 2, g, n, o, p, u
4. search the catalog for a record that belongs to that framework, and edit tag 031 with the following:
   * 2:pe
   * g:G-2
   * n:xFCGD
   * o:3/8
   * p:'6B/{8B+(6B''E'B})({AFD})/{6.E3G},8B-/({6'EGF})({FAG})({GEB})/4F6-
   * u:http://nonexistent.org/url/of/a/midi
5. save and click in opac view
CHECK => even though you add a 031 tag there is no musical inscript shown in opac view
6. in admin module enable OPACShowMusicalInscripts preference
7. refresh opac view
SUCCESS => it takes a few seconds to load, but you see a link that says 'Audio file' pointing to the URL you placed in 'u' subfield, and below you see the musical inscript
8. in admin module enable OPACPlayMusicalInscripts preference
9. refresh opac view
SUCCESS => You see a play button below the musical inscript, and when you click, the song is played
10. sign off

Sponsored-by: Biblioteca Provincial Fr. Mamerto Esquiú (Provincia Franciscana de la Asunción)
Co-authored-by: Owen Leonard <9116c67f61a8025cb8cf35425d522a2ad0f46d71@myacpl.org>
Signed-off-by: Martin Renvoize <e328553c8782de72a55cb4ac905938926e626fa1@ptfs-europe.com>
Signed-off-by: Katrin Fischer <9b69ec3a4d06e697f94de4e5bc733b1bd1394784@web.de>
Signed-off-by: Martin Renvoize <e328553c8782de72a55cb4ac905938926e626fa1@ptfs-europe.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,6861fa525cd261302ed9a6f0e4ec420c682d2a8c,"[css-tables] Don't use internal layout structure when iterating all rows

Instead use basic firstChild and nextSibling. This avoids a crash when
the internal layout structure is dirty.

Add DCHECK to discourage future mistakes.

BUG=627839

Review-Url: https://codereview.chromium.org/2146163005
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#405555}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
SAP/openui5,eaa9d2b68c6cd7374eed093c047f12c48132952f,"[INTERNAL] SPC/PC Demo app - UX improvements

1. in the SPC view:
* the button that leads back to Team calendar (PC view) is removed
* dropdown with team members and Team Calendar added instead (as in PC view)
* currently selected team member name removed from Title
2. Calendars now can be displayed in small resolutions
3. Case of all the Appointments are edited - Capital case only on first sentence letter
4. Replaced [+] button with [Create] button
5. Caption of both views is the same - ""Team calendar""
6. The whole app is refactored with DynamicPage in order to skip page changes.

Change-Id: I0cf86cde3cec2cc3be299f143c8e4353bd97731a
JIRA: BGSOFUIBALKAN-5331
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
xfce-mirror/xfce4-settings,52b1e578b8b1fccde3da112d7b8451614738062c,"I18n: Update translation uk (95%).

382 translated messages, 20 untranslated messages.

Transifex (https://www.transifex.com/xfce/public/).
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,b6292452c1fbeefc4b9b5b9c274d1d57b9da6a9c,"2010-06-25  Fran Diéguez  <fran.dieguez@mabishu.com>

        Reviewed by Darin Adler.

        Add Galician translation to webkitgtk
        https://bugs.webkit.org/show_bug.cgi?id=39547

        * gl.po: Added.

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@61841 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
fogbeam/zeppelin_mirror,78e2e912b6f9014e9a83c929cde339dcb8459bdc,"[ZEPPELIN-2211] Too many WARN logs: ""Couldn't get interpreter editor setting""

### What is this PR for?

every time we insert invalid backend magic (e.g `sparc`), `InterpreterSettingManager` throws WARN log.

I changed the log level to debug because

- WARN level should not be used for this kind of situation.
- This log doesn't provide any useful information for user.  So info level is not proper as well.

I attached a screenshot.

### What type of PR is it?
[Improvement]

### Todos

NONE

### What is the Jira issue?

[ZEPPELIN-2211](https://issues.apache.org/jira/browse/ZEPPELIN-2211)

### How should this be tested?

- Insert invalid magic in your paragraph. For example `sparc` or `marcdown`

### Screenshots (if appropriate)

![interpreter_setting_manager](https://cloud.githubusercontent.com/assets/4968473/24235266/cbecbbf4-0fdf-11e7-9fcc-f1a95a5e82ab.gif)

### Questions:
* Does the licenses files need update? - NO
* Is there breaking changes for older versions? - NO
* Does this needs documentation? - NO

Author: 1ambda <1amb4a@gmail.com>

Closes #2179 from 1ambda/ZEPPELIN-2211/change-log-level-ISM-NPE and squashes the following commits:

e333c1c [1ambda] fix: Change log level to debug from warn
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tsl0922/ttyd,f6361caa50b921d376df3808365ea815f237e64a,"Do not try to reuse for lws_serve_http_file, fixes #43

Following documentation it s important to not try to reuse when lws_serve_http_file
return 0 nor to try to reuse the socket.

This fix the issue on openbsd 6.0 ( my current test is with upgraded libwebsocket 2.0.3 instead of 2.0.2 but it shouldnt matter
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,02b2c6f22f804473316a98fbbbb80887a5b9343f,"[LayoutNG] Fix list marker positioning when the first child is block

This patch fixes list marker positioning when the first child of
the list item is block-level, and the child does not produce a
baseline. Before this patch, list marker is positioned at the
synthesized baseline. This is not well-defined, but 3 browsers
positions the list marker at the first child that has a baseline.
This is filed to CSS WG at
https://github.com/w3c/csswg-drafts/issues/2417.

By doing so, a new case appears where there are no children that
has a baseline. This case is also not well-defined and non-
interoperable. Blink/Edge/WebKit creates an empty line box in
this case, but this isn't easy as we have to insert an empty
line box before the children we have already laid out. This
patch follows Gecko behavior to position the list marker at the
top of the list item.

Also, whether list marker should affect block size or not is not
defined and not interoperable. For now, this patch includes the
list marker block size into list item's block size because it
looks more reasonable to me, and Blink/Edge/WebKit do so. This
is filed as:
https://github.com/w3c/csswg-drafts/issues/2418

SetListMarkerPosition() is a left over in the last patch and
therefore this patch removed it.

Some tests turn to good, though they need to rebaseline due to
list marker image differences.

Bug: 725277
Cq-Include-Trybots: master.tryserver.chromium.linux:linux_layout_tests_layout_ng
Change-Id: If47ab7daea214c0593a917a0c8f505274dae5ca2
Reviewed-on: https://chromium-review.googlesource.com/952843
Commit-Queue: Koji Ishii <cb141bc04912f7082317b2d75e22ecde40953ac2@chromium.org>
Reviewed-by: Emil A Eklund <47276811e82c3c1e3c3d070a264b422bcbfdc550@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#541864}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
exponentjs/exponent,464de304b1e6f6f01b8454ef2b4c6591ac59fb55,"[tools] Add manifest merging for copied versioned unimodules  (#5491)

* add manifest merging to unimodules versioning script

* several fixes

* [tools] Add android-manifest-merger from https://github.com/Bresiu/android-manifest-merger

* [tools] Remove mergerer

* Easier sed

* [tools] Remove file after use
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,eb8d7baae21584a7b27e79c2deca3eee72376ff0,"bridge: skip fdb add if the port shouldn't learn

Check in fdb_add_entry() if the source port should learn, similar
check is used in br_fdb_update.
Note that new fdb entries which are added manually or
as local ones are still permitted.
This patch has been tested by running traffic via a bridge port and
switching the port's state, also by manually adding/removing entries
from the bridge's fdb.

Signed-off-by: Wilson Kok <9937d6c4e279711f30d620c8f4a144fb654ea717@cumulusnetworks.com>
Signed-off-by: Nikolay Aleksandrov <262b42b771725e3ebec40395f2b058e593df7462@cumulusnetworks.com>
Signed-off-by: David S. Miller <fe08d3c717adf2ae63592e4c9aec6e3e404d8e3e@davemloft.net>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,db10e556518eb9d21ee92ff944530d84349684f4,"eCryptfs: Sanitize write counts of /dev/ecryptfs

A malicious count value specified when writing to /dev/ecryptfs may
result in a a very large kernel memory allocation.

This patch peeks at the specified packet payload size, adds that to the
size of the packet headers and compares the result with the write count
value. The resulting maximum memory allocation size is approximately 532
bytes.

Signed-off-by: Tyler Hicks <93eeee00a2beb1fbd6106ad8f59025f171ca91c6@canonical.com>
Reported-by: Sasha Levin <611d453c03d02ce713e72b62ff6a901ea7e9cd77@gmail.com>
Cc: <4fbacc2fa0ffdbb11bf1ad6925b886ebd08dd15f@vger.kernel.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,5693a8522953e3511d31fd915716628b202d56f7,"Don't deduct min-width from the available width for empty cells

If a column has cells, even if they are empty cells, then their full width needs
to be included in the width available for distribution to columns in the table.

This was an oversight when I introduced zero-width empty cells.

BUG=534830

Review URL: https://codereview.chromium.org/1368243002

Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#352253}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
bestpractical/rt,98a57c46547bbaa577ef4e3f21d7b1c02dc0a5fe,"We now default to case sensitive searches, rather than case-insensitive ones.
(This should speed up Pg a LOT. We'll be adding in case-insensitive searching
for the 13 attributes that matter:


Watcher->Email
User->name
User->email
User->gecos
Ticket->Subject
Queue->name
KeywordSelect->name
Keyword->Name
ObjectKeyword->Name
Attachment->Subject
Attachment->Content
Attachment->Headers
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
ganeti/ganeti,88aa7f66f0e5c638aa8b8bbb8d33e8414d1aff7d,"Fix for multiple VGs - PlainToDrbd and replace-disks

Converting an instance from 'plain' to 'drbd'.  The old code would
create the drbd volumes in the default VG and then the renames would
fail.  This fix pulls the plain VG names from the existing volumes and
places it into the new disk template.

Running 'replace-disks' has a similar issue with the new disks going
into the wrong VG and then the rename failing.

Their might be a similar issue with 'recreate-disks', but I actually
have no idea what recreate-disks does, so did not look into it.

Signed-off-by: Iustin Pop <acf83a5274f31a43af6b914614365999469c1a31@google.com>
Reviewed-by: Iustin Pop <acf83a5274f31a43af6b914614365999469c1a31@google.com>
Reviewed-by: Michael Hanselmann <68b67885ff74281219b4a4be33cc20fd45078d7c@google.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
laravel/framework,c6bf81aade54f35c6ee03e683c9c725e39dfc522,"Re-add app property to Manager

Otherwise this would be a too big change for packages. I've added a deprecation note. We'll keep this around for a few major versions and then remove it in a future version.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
daverigby/kv_engine,59253c54ad8b4f607d45c38629fa3870115b3338,"MB-24246: Combine 'writeLock' & 'highSeqnosLock' into one in BasicLinkedList

Functionally 'writeLock' and 'highSeqnosLock' both result in the
serialization of the BasicLinkedList write and other list operations.
Hence this commit combines the 2 locks into one lock.

As a consequence this commit ensures that the writeLock is held on
the BasicLinkedList until the sequence number for the newly added,
updated and soft-deleted is generated. While this is strictly not
needed in new add, it is necessary in update and soft delete as
explained below.

(a) New Add :
   A1, B2, C3 and we are trying to add D4
   A1, B2, C3, D? added but no seqno yet.
   Now we don't really care if range read starts here as it can read
   only A1, B2, C3 in the snapshot.

   But to maintain uniformity (hence simpler code) with update
   and soft-delete we grab writeLock such that we append to list
   + update highSeqno as an atomic operation.

(b) Update (and Soft-delete):
   A1, B2, C3 and we are trying to update B to B4
   A1, B2, C3, B? added but no seqno yet and/or no B2_stale yet
   Now we cannot start the range read here because we do not wait
   for range read to finish to mark the item stale (note that we
   are planning to not send stale(duplicate) items in a snapshot).

   This was already in case (b) using highSeqnosLock, this commit
   uses just writeLock for the same.

The commit also adds documentation regarding the desired heirarchy of
the lock acquisition in BasicLinkedList.

Change-Id: I10a80f55a763d1496adec24fa12bc75d83ea1573
Reviewed-on: http://review.couchbase.org/77958
Reviewed-by: Dave Rigby <a09264da4832c7ff1d3bf1608a19f4b870f93750@couchbase.com>
Tested-by: Build Bot <80754af91bfb6d1073585b046fe0a474ce868509@couchbase.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
netty/netty,54339c08ac8dbba2ad72216293ad6d2eaa931314,"Only try to calculate direct memory offset when sun.misc.Unsafe is present

Motivation:

We should only try to calculate the direct memory offset when sun.misc.Unsafe is present as otherwise it will fail with an NPE as PlatformDependent.directBufferAddress(...) will throw it.
This problem was introduced by 66b9be3a469a2cdcc5d18a8b94c679940ce002a9.

Modifications:

Use offset of 0 if no sun.misc.Unsafe is present.

Result:

PooledByteBufAllocator also works again when no sun.misc.Unsafe is present.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
kubernetes/kubernetes,6bea0e469bcfe4967cbf2656a998d60e0b684747,"Support DryRun in cli-runtime REST Helper.

- Move TestSupportsDryRun to cli-runtime
- Move TestDryRunVerifier to cli-runtime
- Add OpenAPI schema for testdata to cli-runtime
- Use Helper.DryRun and DryRunVerifier for Apply
- Add WithOptions methods to Helper
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,45918e1a8bfcabc1cb4570b8df276655020eac45,"[PATCH] dup_mmap: update comment on new vma

Remove part of comment on linking new vma in dup_mmap: since anon_vma rmap
came in, try_to_unmap_one knows the vma without needing find_vma.  But add
a comment to note that here vma is inserted without mmap_sem.

Signed-off-by: Hugh Dickins <a6c5230a10c458028ff1bd5985dd47c394028d47@veritas.com>
Signed-off-by: Andrew Morton <5c1e68b099950c134891f0b6e179498a8ebe9cf9@osdl.org>
Signed-off-by: Linus Torvalds <69652caca27c8b940640ad396ab71f93cacec34f@osdl.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,3e47e73a0af6e3a1187b2bba21d715464768943b,"perfetto: Don't return pointers from InterningIndex

It's possible that the InterningIndex is modified after calling
LookupOrAdd (e.g. by adding another entry), in which case the returned
InterningIndexEntry pointer would become invalid.

Return the entry by value instead and directly mark it as emitted when
it is looked up.

Bug: 928738, 968176
Change-Id: I3604bb8217a224060aee704f6bb37355bc405bc1
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1636132
Reviewed-by: oysteine <8d7f732fa4b6826c6c0eeb84e0f59560c57cc941@chromium.org>
Commit-Queue: Eric Seckler <d661906de75c240343b01bf83bdad954d5d7d8b2@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#665138}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
kdave/btrfs-progs,3ca706a6ee813300b30e1603076b3e356c0deb93,"btrfs-progs: Update the usage strings of some cmds

Update the usage strings of some cmds to keep the them consistent with
the source.

Also some minor changes are done to fit the man page syntax.

Signed-off-by: Qu Wenruo <f41a7033a6382ce00d6b717e37d942dbe3c9a107@cn.fujitsu.com>
Signed-off-by: David Sterba <a2ce9d316ca04d17b520237d2846a218b8284e52@suse.cz>
Signed-off-by: Chris Mason <a169954b4cb1a46cee25f659d3bddfebe02b5fba@fusionio.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
CTSRD-CHERI/u-boot,a4474ff8629be5f28aefb8a9f48d4411d62fb0d2,"TI DaVinci: Adding Copyright for DM365 EVM

Forgot to add Copyright while submitting the patch.
This patch adds the copyright.

Signed-off-by: Sandeep Paulraj <6de3c446777fc4f97162840abbd07b57207b01cc@ti.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,39b986a6c73434d122967dc86efb295ab9a28437,"ide: sanitize struct ide_port_ops documentation (take 2)

v2:
Add missing '@'-s.  (Noticed by Randy Dunlap)

Cc: Randy Dunlap <e1d10faa7e2a0c027bf1ff1d20e7fd10154be7ea@oracle.com>
Signed-off-by: Bartlomiej Zolnierkiewicz <248de9df611a028e5eceb9d893a2ed6c24c89ef4@gmail.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
MariaDB/server,05eeb46a1874e2e1ccf6a54022ca5f4ba409a62a,"fixes #5801 perf framework has been improved in a few ways:
- minimum key/val size is up to 8 bytes. now perf tests and stress tests have a consistent mechanism for generating keys and values, reducing headache.
- perf tests use a ""main"" function that generates tables based on the provided key/val size and compressibility, while stress (correctness) tests use a main function that generates tables with a provided (default in all cases, I think) key/val size and fully zero'd values, so the table is in the ""correct"" zero-sum state. previously this was causing perf tests to generate zer-valued rows always, no matter what row size you wanted or how much compressibility was requested, which clearly skewed performance results (ie: your 100 byte rows are only 8 bytes)
- renamed legacy NULL pointers to nullptr
- moved some ""special"" operations to the perf/stress tests that use them instead of the global header, to keep things more tidy.



git-svn-id: b5c078ec0b4d3a50497e9dd3081db18a5b4f16e5@51258 c7de825b-a66e-492c-adef-691d508d4ae1

",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
sonata-project/SonataPageBundle,1b4ae5c4ce9af14ebd0d12fbc2587219281a4766,"Add documentation for JMS Serialiser and DatagridBundle

`SonataPageBundle` uses `Pager` class from `DatagridBundle`. In order to have correct serialized output this config should be added to `config.yml` (copied from [config](https://github.com/sonata-project/sandbox/blob/2.3/app/config/config.yml) of Sonata Project sandbox)",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
libvirt/libvirt,523c6908f8c21cede0121a8fdac9ad76c01d4d1c,"storage: Introduce virStoragePoolSaveConfig

https://bugzilla.redhat.com/show_bug.cgi?id=1160926

Introduce the ability to save a configuration of a persistent configuration
that may be changed by storage pool backend activity, such as start or stop
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tinymce/tinymce,f18f9694cfaf2543789672adaa436b661fe2a03d,"Merge pull request #71 in TINYMCE/bridge from remove_readywhen to master

* commit '0f2ea88b1798caee8331bd14e03ac00571ad2749':
  Removed `readyWhen` from the Dialog API, as it was never implemented.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/tomcat-native,d5d88f366fa77d4819ded91f18ca4545f9882138,"Use default port 8023 instead of 23 in echo
server example.

Examples and tests should not assume a
privileged user runs them.


git-svn-id: 9aee25b0727c23acc0dec90e5217993066ef893c@1441886 13f79535-47bb-0310-9956-ffa450edef68
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
alisw/AliPhysics,05ab14c4834db329bd8479e489f6eb6902b6e5d5,"EMCal CorrFW: Begin move to event manager

Needed to provide proper event access to the embedded event the
correction is only on the embedded event. If all input events are
embedded then this is used as a proxy for passing the embedded event
instead.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
the-blue-alliance/the-blue-alliance,364dbab2c057d3ca86c73fe392015a2a8befadfc,"Tweaks to Team Details.

Adds links to FRC Megaphone. Fixes #484
Make some headers smaller to be more phone friendly.
Remove unused robot photo code.
Add icon to Hashtags.

Tested by visiting /team/177 locally, seeing changes.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/flink,04e6758abbadf39a12848a925e6e087e060bbe3a,"[FLINK-5800] [checkpointing] Create CheckpointSteamFactory only once per operator

Previously, the factory was created once per checkpoint, and its repeated initialization logic
(like ensuring existence of base paths) caused heavy load on some filesystems at very large scale.

This closes #3312
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
prometheus/prometheus,840872a6f8ff172e56efb755124e99854965c1d7,"Fix remote storage config not updating correctly (#5555)

* Update remote write and remote read separately
* Add external labels to the remote write conf hash
* Add unit tests for remote storage lifecycle

Signed-off-by: Chris Marchbanks <0ad0b538c51a24737b83a297dff91636ee98d89e@gmail.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,5b4de2f8b51b0268b7eb778fa160fc0a88ec6e72,"arm64: dts: sdm845: Add qspi opps and power-domains

Add the power domain supporting performance state and the corresponding
OPP tables for the qspi device on sdm845

Reviewed-by: Matthias Kaehlcke <df22eae001bf82a113742cff559755b8fc65d45a@chromium.org>
Signed-off-by: Rajendra Nayak <4802c9324e296bd4f067f90ad87878b5665d33d2@codeaurora.org>
Link: https://lore.kernel.org/r/1593769293-6354-3-git-send-email-4802c9324e296bd4f067f90ad87878b5665d33d2@codeaurora.org
Signed-off-by: Bjorn Andersson <6e6fda072d932515099508d6d220572c68e9add5@linaro.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
DistanceDevelopment/mrds,28f6012afa91d8aafa66f2d2e52cb0cd2ff06e64,"Combination of 25 commits...

cleanup and add documentation for:
  * gof.ds
  * print.ddf.gof
  * prob.se
  * summary.ds
  * DeltaMethod
  * det.tables
  * plot.det.tables
  * plot.trial
  * plot.trail.fi
  * plot.ds
  * NCovered
  * plot_cond
  * plot.io
  * plot.io.fi
  * plot.rem
  * plot.rem.fi
  * plot_uncond
  * ddf.gof

Other stuff:
 * modernised how version and build number are reported
 * added tests for trial.fi with golf tee data
 * moved solvecov into a separate file
 * moved average.line.cond into a separate file
 * doc update
 * removed calcp and references to it, since it's no longer used
 * new ""new"" argument to plot.ds
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
wbx-github/uclibc-ng,2a2b1d2a3e97b4353eec5a40c0de4b932340b3fc,"posix_fadvise: handle 2 variants for SYSCALL_ALIGN_64BIT

arm/powerpc/xtensa pass @advice as 2nd arg to syscall (vs. canonical 4th)

Current code however does this for UCLIBC_SYSCALL_ALIGN_64BIT which
powerpc/xtensa also happen to define.

This is not true for ARCv2 ISA and possibly other arch of future with
64-bit even register requirement, which uses the standard syscall
handler in kernel.

Fix that by providing 2 variants of SYSCALL_ALIGN_64BIT

Signed-off-by: Vineet Gupta <af669d95a4c0de051445d4cafdbb2c5c4a2838be@synopsys.com>
Cc: Baruch Siach <53ccad33e0625915318fb3bc832e5c1c413d1294@tkos.co.il>
Cc: Max Filippov <8c5ea195856807f4f02a6e0749c87ea6b7375f38@gmail.com>
Signed-off-by: Bernhard Reutner-Fischer <ce1ac9e9ad16abccd7821f371ad381197b4768ac@gmail.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
VirusTotal/yara,8f49fb94f4c89c618a439a43a2355851da97f707,"Fix regression.

#1377 removed the #include <stdbool.h> line from types.h but 7517bbdf8778c37fa494966b39623dc6c2ccfce9 added it back.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,4c19549247aacdc4b4b742feaab55373c21f3012,"ozone/drm: Fix nullptr deref in IsDeviceAtomic

DrmThread::IsDeviceAtomic currently can cause a SIGSEGV since it assumes
that |drm_device| is a valid pointer.
|drm_device| device can be nullptr if the widget has been disabled.

This patch fixes the issue checking that |drm_device| is a valid pointer
before dereferencing it.

Bug: 875882, 876385
Change-Id: I01527e9d9d294e0f98146ccd5e6d5ef70e0dfdf0
Reviewed-on: https://chromium-review.googlesource.com/1193963
Reviewed-by: Michael Spang <e1fb1a05abba8fb04acbcbe6d766da7764320db0@chromium.org>
Commit-Queue: Daniele Castagna <bf401ac9f4607f1574de95f28428a77f41d45b82@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#586717}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,a390180291dd9a2392bbab4242cde712c326efc6,"libnvdimm, pfn: fix nvdimm_namespace_add_poison() vs section alignment

When section alignment padding is in effect we need to shift / truncate
the range that is queried for poison by the 'start_pad' or 'end_trunc'
reservations.

It's easiest if we just pass in an adjusted resource range rather than
deriving it from the passed in namespace.  With the resource range
resolution pushed out to the caller we can also push the
namespace-to-region lookup to the caller and drop the implicit pmem-type
assumption about the passed in namespace object.

Cc: Vishal Verma <82b5814572006128646e71984415b621304ebed2@intel.com>
Signed-off-by: Dan Williams <24ee2bf0bd8ac766c348bf1f0639943bac1535c6@intel.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
MariaDB/server,36510232aa5ab3788de36d17202254e3789441f4,"A fix and a test case for Bug#15752 ""Lost connection to MySQL server 
when calling a SP from C API""

The bug was caused by lack of checks for misuse in mysql_real_query. 
A stored procedure always returns at least one result, which is the 
status of execution of the procedure itself.
This result, or so-called OK packet, is similar to a result
returned by INSERT/UPDATE/CREATE operations: it contains the overall
status of execution, the number of affected rows and the number of
warnings. The client test program attached to the bug did not read this 
result and ivnoked the next query. In turn, libmysql had no check for 
such scenario and mysql_real_query was simply trying to send that query 
without reading the pending response, thus messing up the communication
protocol.

The fix is to return an error from mysql_real_query when it's called
prior to retrieval of all pending results.


client/mysqlbinlog.cc:
  net_safe_read -> cli_safe_read
include/mysql.h:
  Remove a private function from the public header.
include/mysql_com.h:
  Remove a define that is never used.
include/sql_common.h:
  Add a declaration for cli_safe_read - a function that reads one packet
  from the server.
libmysql/libmysql.c:
  net_safe_read -> cli_safe_read
  Return CR_COMMANDS_OUT_OF_SYNC on attempt to execute a statement
  using a connection which has pending result sets.
sql-common/client.c:
  Actual fix for Bug#15752: if the server has pending result sets for
  the client, return CR_COMMANDS_OUT_OF_SYNC on attempt to execute
  another query. Similarly to the behaviour of mysql_use_result(),
  multiple result sets block the connection and must be fetched
  before it can be used for another query.
  This uncovered an error in the protocol: the server doesn't drop
  SERVER_MORE_RESULTS_EXISTS status flag upon an error, so in case of
  a multi-query like SELECT 1; SELECT syntax_error; SELECT 2; 
  the client has no way to know that the server won't ever come to 
  execution of the third query and won't return any result sets for it.
  For now, fix it in cli_safe_read, as a proper fix requires extension
  of the client-server protocol.
sql/protocol.cc:
  Remove a name that is never used.
sql/slave.cc:
  net_safe_read -> cli_safe_read
tests/mysql_client_test.c:
  Make 'query' a local variable to avoid name clash.
  Add a test case for Bug#15752 ""Lost connection to MySQL server when
  calling an SP from C API""
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
helm/charts,ee20ea3ab81a08b575b730371cbc25c589ef188d,"Better resource management for Artifactory (#3021)

* Better resource management for Artifactory (#1)

* Update Artifactory version
* Add resources requests and limits to all pods
* Ability to set whitelist on Nginx LoadBalancer service
* Support setting a custom artifactory service name (that will also be set in nginx config)
* Add new parameters to README
* Fix artifactory replicas reference. Hardcode database replicas to 1
* Use resource memory requests and limits in Artifactory java options
* Add readinessProbe to Artifactory
* Add readme on creating a Kubernetes Docker registry secret and passing it to helm

* Update Artifactory Chart version to 6.2.3

* Comment out the default resources and update README on how to use them

* Set Artifactory version 5.6.3

* Remove default values for Nginx resources from README
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/llvm-propeller,80396248cf4dcb9987c82fed1566180b124444dc,"[Driver] Fix codeview-column-info on macOS

macOS home directory paths begin with /Users, and clang-cl interprets
the /U portion as a macro undefine rather than a path, causing test
failures on macOS. Use a -- to explicitly treat the input file as a path
and fix the test.

This effectively reverts r326168 and adds an alternative fix.

llvm-svn: 326171
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
matrix-org/matrix-android-sdk,00879fd8d6e1c452fa01443cc3ff01b15e97f570,"Room.getSummaries / getSummary return the only the summaries for the rooms in which the user is member.

It seems that there is a server issue in which the roomstate is corrupted.
The corrupted rooms should not be provided.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,454eedb8901da895fb602998fa588cd62875d07d,"vfs: O_* bit numbers uniqueness check

The O_* bit numbers are defined in 20+ arch/*, and can silently overlap.
Add a compile time check to ensure the uniqueness as suggested by David
Miller.

Signed-off-by: Wu Fengguang <24f7fe9d205c8a9f6ade0c2894e14303ca16087f@intel.com>
Cc: David Miller <fe08d3c717adf2ae63592e4c9aec6e3e404d8e3e@davemloft.net>
Cc: Stephen Rothwell <4bf0fb350827ce8d86875e76c923a478597c3cef@canb.auug.org.au>
Cc: Al Viro <de609eb4d5d70b1d38ec6642adbfc33a2781f63c@zeniv.linux.org.uk>
Cc: Christoph Hellwig <923f7720577207a44b32e59bbfbea59d27f1ae8e@infradead.org>
Cc: Eric Paris <b0b36e3cd9ea4e5739ff430a3056fabf2fdb0376@redhat.com>
Cc: Roland Dreier <68b67cddfeb62945e9a8e54387e91ae7b86773cc@cisco.com>
Cc: Jamie Lokier <b4dde37aa2aac745c0e6c43447507eaeace3e59f@shareable.org>
Cc: Andreas Schwab <c9df6394cb541f693236245820fbe23866f1a3fe@linux-m68k.org>
Signed-off-by: Andrew Morton <5c1e68b099950c134891f0b6e179498a8ebe9cf9@linux-foundation.org>
Signed-off-by: Linus Torvalds <69652caca27c8b940640ad396ab71f93cacec34f@linux-foundation.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
dart-lang/sdk,9d88c5c47692bb8c6092ccedd9dd791ce8ab3647,"pkg/analysis_server: don't explicitly import matcher - use exports from unittest

This will avoid breaks when the test package is checked in
Also remove exec bit from root files

R=brianwilkerson@google.com

Review URL: https://codereview.chromium.org//1138523004

git-svn-id: c93d8a2297af3b929165606efe145742a534bc71@45657 260f80e4-7a28-3924-810f-c04153c831b5
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
MariaDB/server,9d670dfab57b22e7334c85fbf27d463ea6da004a,"sql_db.cc:
  mysqld crashes on CREATE TABLE in a database with corrupted db.opt file.
  Bug#4646


sql/sql_db.cc:
  mysqld crashes on CREATE TABLE in a database with corrupted db.opt file.
  Bug#4646
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
TimothyGu/libilbc,8a7dcb163ed4a0c4ecb8fede95dfd9ba9f19fa21,"Prepare to move SPS VUI rewriting out of H.264 packetizer.

- add ParseOutgoingBitstreamAndRewriteSps to SpsVuiRewriter
  which takes encoded H.264 bitstream and NAL unit boundaries,
  rewrites SPS if needed and updates the NAL unit boundaries
  accordingly
- move SPS rewriting stats updates to SpsVuiRewriter

Bug: webrtc:10559
Change-Id: I7ca21756628ee6d6abbcbd501bdb4f3df024168b
Reviewed-on: https://webrtc-review.googlesource.com/c/src/+/133174
Reviewed-by: Stefan Holmer <eb0877843acc39f8ef6f7269937dee931c372d23@webrtc.org>
Reviewed-by: Erik Språng <3ab8c90c99d6dd7822e0fad803ab0211dd287ae5@webrtc.org>
Commit-Queue: Mirta Dvornicic <c6f473f74a061e7a4ef17c2c04eac029911f2b6c@webrtc.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#27665}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,27d3a8a26ada7660116fdd6830096008c063ee96,"x86, cacheinfo: Base cache sharing info on CPUID 0x8000001d on AMD

The patch is based on a patch submitted by Hans Rosenfeld.
See http://marc.info/?l=linux-kernel&m=133908777200931

Note that  CPUID Fn8000_001D_EAX slightly differs to Intel's CPUID function 4.

Bits 14-25 contain NumSharingCache. Actual number of cores sharing
           this cache. SW to add value of one to get result.

The corresponding bits on Intel are defined as ""maximum number of threads
sharing this cache"" (with a ""plus 1"" encoding).

Thus a different method to determine which cores are sharing a cache
level has to be used.

Signed-off-by: Andreas Herrmann <39e536ca8269572d74bff7f8e46f22412f1aee88@amd.com>
Link: 545e2a20fd0ad45a7c764b51547e6741b883ac24@alberich
Signed-off-by: H. Peter Anvin <8a453bad9912ffe59bc0f0b8abe03df9be19379e@linux.intel.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
aframevr/aframe,5086d01ae567cec516922154f9cc16fda615db7d,"adding look-controls to the example

Seems a lot of people get confused on why the camera ""doesn't move"" once they add it to be able to add the reticle. Added look-controls to avoid that.",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,2291d0b6e502cb6907c2eddb3ad3e0540b56843f,"Revert of Do compositing readbacks asynchronously for layout tests. (https://codereview.chromium.org/260073006/)

Reason for revert:
Sorry to revert. This seems to have caused the following layout test to timeout/crash:
virtual/gpu/fast/canvas/canvas-overflow-hidden-animation.html

Flakiness dashboard:
http://test-results.appspot.com/dashboards/flakiness_dashboard.html#group=%40ToT%20Blink&tests=virtual%2Fgpu%2Ffast%2Fcanvas%2Fcanvas-overflow-hidden-animation.html

Example crash log:
http://build.chromium.org/p/chromium.webkit/builders/WebKit%20Linux%20(dbg)/builds/19387/steps/webkit_tests/logs/stdio

Snippet from log:
02:24:28.379 24071   ASSERTION FAILED: !m_paintStateIndex
02:24:28.379 24071   ../../third_party/WebKit/Source/platform/graphics/GraphicsContext.cpp(153) : WebCore::GraphicsContext::~GraphicsContext()
02:24:28.379 24071   1   0x7f6820ea43c4 WebCore::GraphicsContext::~GraphicsContext()
02:24:28.379 24071   2   0x7f6820eb5e7d
02:24:28.380 24071   3   0x7f6820ecd5ef
02:24:28.380 24071   4   0x7f6820ecb168 WebCore::ImageBuffer::~ImageBuffer()

I can repro the failure locally, but it does not show up when the test is run individually. All tests in virtual/gpu/fast/canvas/ must be run. I verified that reverting locally heals the test.

Original issue's description:
> Do compositing readbacks asynchronously for layout tests.
> 
> Instead of calling WebViewImpl::paint(), call compositeAndReadbackAsync
> which takes a callback and will call it once the pixels are read into
> a bitmap.
> 
> This adds new paths to WebTestProxyBase leaving the older paths around
> for now. Followup CLs can removing a bunch of this old paint()-calling
> code.
> 
> Depends on blink side: https://codereview.chromium.org/257003005/
> and https://codereview.chromium.org/252993002/
> 
> R=abarth, enne, piman
> BUG=251973
> 
> Committed: https://src.chromium.org/viewvc/chrome?view=rev&revision=267758

TBR=abarth@chromium.org,enne@chromium.org,piman@chromium.org,danakj@chromium.org
NOTREECHECKS=true
NOTRY=true
BUG=251973

Review URL: https://codereview.chromium.org/267743009

git-svn-id: de016e52bd170d2d4f2344f9bf92d50478b649e0@267785 0039d316-1c4b-4281-b951-d872f2087c98
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
xapi-project/sm,6558e5f84162a62ee154e6579b4c7c852ec7b9d6,"CA-303252 Make the multipath count a kickable socket service

Remove all trace of the daemonisation and the locking dance from
mpathcount.py so that it is a straight single process. Then create a
kickable socket service after the fashion on the USB scanner to run it
and adjust the UDEV rules to kick that service.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,6ab180d2e31baedb52fc299660c46003e2c70d76,"Converted OAuth2AccessTokenFetcher to using SimplerURLLoader.

This impacted a lot of APIs that now need to be provided with a
SharedURLLoaderFactory. Note that in many of these APIs we still need
also the net::URLRequestContextGetter as other GAIA requests still use
the networ API directly. Once all GAIA code uses the network service,
all APIs will be changed to only take the SharedURLLoaderFactory.

Many tests that simulate URL responses had to be changed and use a
TestURLLoaderFactory. In some instances, we need the
TestURLLoaderFactory for the OAuth token but still mock the URLRequests
directly for other operations.

Also:
- split up OAuth2AccessTokenFetcherImplTest.MakeGetAccessTokenBody
  into smaller tests
- exposing ways to simulate URL responses directly in
  TestURLLoaderFactory as it was required by some tests

Bug: 840396
Cq-Include-Trybots: luci.chromium.try:ios-simulator-full-configs;luci.chromium.try:linux_mojo;master.tryserver.chromium.mac:ios-simulator-cronet
Change-Id: I6d1d1081238aa5e1d8dc5f1469e4c752c93729fc
Reviewed-on: https://chromium-review.googlesource.com/1096309
Commit-Queue: John Abd-El-Malek <da3dd5c2657fecad769c041097dbd8ecd725687d@chromium.org>
Reviewed-by: Maksim Ivanov <d842bff48dff33c3df282c713bcec1d4d3a17eb8@chromium.org>
Reviewed-by: John Abd-El-Malek <da3dd5c2657fecad769c041097dbd8ecd725687d@chromium.org>
Reviewed-by: Mattias Nissler <f2124f8e21694335a48d099eb9510c5c4dda0d0b@chromium.org>
Reviewed-by: Roger Tawa <20808712484f51c42e78550a8075b17f17c08bcc@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#569408}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chummer5a/chummer5a,19950e0679f14ad911d0312d8ab416cac2f3f8bf,"Housecleaning mainly related to Martial Arts Techniques, Misc. Fixes

Application Changes:

- Added a label to view the PDF source of a martial arts technique when selecting one.
- Fixed issues with the martial arts technique selection screen not properly using translations.
- Fixed an issue where bonuses that allow a user to select a metamagic or echo but force its value did not properly work.
- Fixed an issue where characters were allowed to choose adept powers for which they were not eligible as long as the power did not require certain qualities.
- Fixed issues where clicking the source label in the cyberware/bioware selection screen would not properly open the PDF associated with the selected piece of 'ware.

New Strings:

- Message_SelectMartialArtTechnique
- MessageTitle_SelectMartialArtTechnique
- Title_SelectMartialArtTechnique
- String_Power

Removed Strings:

- Message_MartialArtAdvantageLimit
- MessageTitle_MartialArtAdvantageLimit
- Message_SelectMartialArtAdvantage
- MessageTitle_SelectMartialArtAdvantage
- Title_SelectMartialArtAdvantage
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apple/swift,c2b5703865db6ca17a8611ebba69a369ea6952a5,"API notes: rework CMake support so that we can separate the API notes sources.

Move all of the information about API notes into the ""apinotes""
subdirectory, which specifies the API notes that it provides. The
organization is such that ""apinotes"" can become its own separate
repository, and the compiler build will pick up those API notes that
are available and build them along with the overlays.

Swift SVN r20406
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
facebook/flow,376c5e68ce249a990822c8829f673ac0434a704c,"Add comment attachment logic

Summary:
Add basic logic for attaching comments to AST nodes. Just handles leading line attachment for basic cases (does not attach to types for example) but i have left in info for all attachment types i think we will need.

This logic should be good enough for looking up docblocks etc.

Reviewed By: avikchaudhuri

Differential Revision: D5718407

fbshipit-source-id: 72785988e8ac25b955765c48e9c309cc52837796
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,b1a8014471b01dd862de9f91bbbff1296afac42d,"Bluetooth: revert: ""Bluetooth: Add missing reset_resume dev_pm_ops""

Many btusb devices have 2 modes, a hid mode and a bluetooth hci mode. These
devices default to hid mode for BIOS use. This means that after having been
reset they will revert to HID mode, and are no longer usable as a HCI.

Therefor it is a very bad idea to just blindly make reset_resume point to
the regular resume handler. Note that the btusb driver has no clue how to
switch these devices from hid to hci mode, this is done in userspace through
udev rules, so the proper way to deal with this is to not have a reset-resume
handler and instead let the usb-system re-enumerate the device, and re-run
the udev rules.

I must also note, that the commit message for the commit causing this
problem has a very weak motivation for the change:

""Add missing reset_resume dev_pm_ops. Missing reset_resume results in the
following message after power management device test. This change sets
reset_resume to btusb_resume().

[ 2506.936134] btusb 1-1.5:1.0: no reset_resume for driver btusb?
[ 2506.936137] btusb 1-1.5:1.1: no reset_resume for driver btusb?""

Making a change solely to silence a warning while also changing important
behavior (normal resume handling versus re-enumeration) requires a commit
message with a proper explanation why it is safe to do so, which clearly lacks
here, and unsurprisingly it turns out to not be safe to make this change.

Reverting the commit in question fixes bt no longer working on my Dell
E6430 after a suspend/resume, and I believe it likely also fixes the
following bugs:
https://bugzilla.redhat.com/show_bug.cgi?id=988481
https://bugzilla.redhat.com/show_bug.cgi?id=1010649
https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1213239

This reverts commit 502f769662978a2fe99d0caed5e53e3006107381.

Cc: Shuah Khan <7a008e9ca14f0bd5b2b4fb5bbf85c809f40f4224@samsung.com>
Cc: Gustavo Padovan <029a69b25713d0799b81c0a39685b4c040fa1425@collabora.co.uk>
Cc: 4fbacc2fa0ffdbb11bf1ad6925b886ebd08dd15f@vger.kernel.org
Signed-off-by: Hans de Goede <9fa1be1a5b5729e4c6b404f34c9ce49ff4882fd8@redhat.com>
Signed-off-by: Gustavo Padovan <029a69b25713d0799b81c0a39685b4c040fa1425@collabora.co.uk>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
blaze/distributed,3142dda225baaf1db0b8c73f240f7fad8941fc1e,"Learn bandwidth over time (#2658)

In order to schedule tasks intelligently we need to know how long
communications will take.  To do this, we need to estimate the bandwidth
of the network.  This can vary by orders of magnitude depending on
hardwware.

Previously we asked the user to specify this in configuration.

Now we learn it over time.  Each worker keeps an exponentially weighted
moving average for all of its data communications.  It sends this
information to the scheduler as part of the heartbeats (which include
lots of other diagnostic information).  The scheduler updates its own
measurement accordingly.",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
openstack/nova,3f2a5fc23a8d6975b68391af1334934a70a0a90b,"api-ref: fix description in os-services

The services data model and API is not per-tenant, it's
per-region, so this change updates the docs to reflect that.

Change-Id: I45bc0bd5afcd05626f61be84c012e00f723f80eb
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/llvm-propeller,59b1ca2a8f746005033df4b0e8860c132ee10cdc,"This is a large rewrite of how Dwarf info for inlined functions is handled.

The DwarfWriter expects DbgScopes and DIEs to behave themselves according to
DwarfWriter's rules. However, inlined functions violate these rules. There are
two different types of DIEs associated with an inlined function: an abstract
instance, which has information about the original source code for the function
being inlined; and concrete instances, which are created for each place the
function was inlined and point back to the abstract instance.

This patch tries to stay true to this schema. It bypasses how regular DbgScopes
and DIEs are created and used when necessary. It provides special handling for
DIEs of abstract and concrete instances.

This doesn't take care of all of the problems with debug info for inlined
functions, but it's a step in the right direction. For one thing, llvm-gcc
generates wrong IR (it's missing some llvm.dbg intrinsics at the point where the
function's inlined) for this example:

#include <stdio.h>
static __inline__ __attribute__((always_inline))  int bar(int x) { return 4; }
void foo() {
  long long b = 1;
  int Y = bar(4);
  printf(""%d\n"", Y);
}

while clang generates correct IR.

llvm-svn: 71410
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
TryGhost/Ghost,1e5d201835160f8ac6653c933ab60b14010157ea,"🐛 Fixed flat member chart for GMT-X timezones

closes #12083

- fixes a parsing issue where negative offset values were incorrectly having the + sign added regardless of actual offset for sqlite databases.
- for mysql databases absolute values of offset were taken with sign applied where appropriate to stop issues where both hours and minutes could be negative which would cause both an issue with offsets that could present as -2:30 and by the look of the code also trigger extra padding to result in -2:-030 rather than the expected -2:30
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,378c41aae2ca12c384a760cb36b66d4ef66dd764,"Testexpectations: Add back a line for a flaky test

This line was commented out in http://crrev.com/122463005
And removed (incorrectly) by auto-rebaseline bot in:
http://crrev.com/134313003

BUG=331619
R=jzern@chromium.org

Review URL: https://codereview.chromium.org/137403003

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@165010 bbb929c8-8fbe-4397-9dbb-9b2b20218538
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
awslabs/s2n,252f9c0a49ca379ff057f815318e55e04b4dfe41,"Send Supported Point Formats Extension for ECC

We were omitting this extension from our Server Hello because
RFC 4426 states that the ""uncompressed"" format is assumed when the
extension isn't sent [1]. s2n only supports the uncompressed point
format. However, there are clients in the wild that do not implement
the implied behavior of the missing extension [2].

[1] https://tools.ietf.org/html/rfc4492#section-5.2
[2] https://rt.openssl.org/Ticket/Display.html?id=2240
    and https://github.com/openssl/openssl/commit/1684846f5451f1048b71bcdf40c8ed0336d1695e
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
alisw/AliPhysics,20e6455815815a0fe75f78e0f5120d135dccf8d2,"Fixing operation for trigger check

Bug introduced in dcff22e92122176edba66c02c11195b28a1cde3d:
Operator &= between bool and unsigned int produces undefined
behaviour. Instead, the unsigned int expression needs to be
casted to boolean for the operator to work.

In addition: Allow for different centrality estimators in
AliAnalysisTaskEmcalClustersRef.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
rstiller/inspector-metrics,b2ddf982dec2335eb953de1754ef0d3ba0c04874,"Add 'docs/' from commit 'c4449a5ac78203bdc697c2f8a582a45c968cd678'

git-subtree-dir: docs
git-subtree-mainline: 637b86a3afbe181afac3c91f55cec4792732aa0e
git-subtree-split: c4449a5ac78203bdc697c2f8a582a45c968cd678
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
MariaDB/server,cfc6ae2893c27bd13d34481555fe63e430cb51de,"bug#27571 

non-deterministic tests execution on some platforms.


mysql-test/suite/binlog/r/binlog_killed.result:
  results changed
mysql-test/suite/binlog/t/binlog_killed.test:
  correcting the prev test's cleanup;
  increasing time to wait by to be killed query;
  adding the masking out error due to Bug@32140 wrong error code caught when an SF() call is interruped with KILL query
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
gatsbyjs/gatsby,9024329a0576b11672079b9634d0b034260f734f,"Blog post headless CMS (#3846)

* Blog post headless CMS

A couple things I'm not sure about:

- Running sites offline paragraph. Check for accuracy pls!

- Better quote from Deane that anyone has in mind?

- Can cut down assessment of headless CMSs to omit obscure complaints...

* Edits to wording and sprinkling in GatsbyJS 

Please check paragraph about running sites offline in India! I feel like there's potential there but maybe I'm off base

* Update index.md
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
ManageIQ/integration_tests,2a2a49045b4d6ad37222e37f129581cd6ea6020f,"[1LP][RFR] Fixed KeyError and AssertionError in inline automate method (#8239)

* Fixed KeyError and AssertionError
 - Fixed Keyerror: while getting vSphere provider's small_template.
 - keyError was the reason; this test was getting skipped.
 - Fixed assertionError; while assrting flash message of data validation.

* updated with requested changes
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
lspitzner/brittany,ddd7c6b439588547d488574b5c019df029dc9d77,"Fix some rare issue and add some comments

(it is so rare i cannot reproduce anymore right now,
because the code that caused it has changed since..)
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
samba-team/samba,e37f9956c1f2416408bad048a4618f6366086b6a,"smbd: uid: Don't crash if 'force group' is added to an existing share connection.

smbd could crash if ""force group"" is added to a
share definition whilst an existing connection
to that share exists. In that case, don't change
the existing credentials for force group, only
do so for new connections.

Remove knownfail from regression test.

BUG: https://bugzilla.samba.org/show_bug.cgi?id=13690

Signed-off-by: Jeremy Allison <jra@samba.org>
Reviewed-by: Ralph Boehme <slow@samba.org>

Autobuild-User(master): Ralph Böhme <slow@samba.org>
Autobuild-Date(master): Fri Jan 25 16:31:27 CET 2019 on sn-devel-144
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
flutter/flutter,fcdbdfb476d32d1113e4dfb8d18fedf282465c3d,"Move the Icons demo into a card, and refactor it to use a Table widget. (#13257)

This is in preparation for adding a second card with a demo for animated
icons.

Table refactor is just a cleanup (that also fixes an alignment bug).",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
cea-hpc/modules,443ed6d24f18c969b109c466ab804e09ec053c36,"Introduce '--soft' option to module-hide modfile cmd

Soften level of camouflage with new option --soft of module-hide Tcl
modulefile command. Modules targeted by such hide directive are made
visible as soon as their root name is part of search query.

A '0' hiding level is applied to soft hide.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,ed3fb0c8a982d960df283046ed3ae781454095a6,"MDUserManager: ignore pref toggles for adding a profile and browsing as guest.

BUG=563722

Review-Url: https://codereview.chromium.org/2061793002
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#399758}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,57254514dd83870b60c9532005b3f6203778d4aa,"cros/drm: Add RG and YUV formats for SCANOUT_CPU_READ_WRITE

On intel, we want to be able to use SCANOUT_CPU_READ_WRITE with
GMBs videoframes (cfr ).

This CL adds YUV_420_BIPLANAR and other supported formats to
SCANOUT_CPU_READ_WRITE.

Bug: b/71837407
Change-Id: I1fcb5148ce71c2eeb90feb8ccc0b7378e9f1b0b8
Reviewed-on: https://chromium-review.googlesource.com/889846
Reviewed-by: David Reveman <1dda8fffc4cb6d511b3f0060aad9cd12fd7f75f8@chromium.org>
Commit-Queue: Daniele Castagna <bf401ac9f4607f1574de95f28428a77f41d45b82@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#532256}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
zeit/next.js,5db180b221cb36dbbb560b54811bd9047829339a,"Fix styled-components example README notes (#11548)

* Add notes to styled-components example README

* Adjust notes to styled-components example README

* Fix styled-components README notes

* Update README",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
FLOSSforScience/FLOSSforScience.github.io,aef2f594f52e05452639630767275787938e72bb,"Speak pipe integration (#13)

* Modification of the contact page

Addition of the SpeakPipe embed recorder and hyperlinks to email and twitter directly in the text.

* Added informations for SpeakPipe

I added the information about SpeakPipe to our Data Privacy page

* Use link for Twitter from config

* Remove rss feed from contacts
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
erlang/otp,91e912b49d035821301e7005955908f2040a495f,"Readline-style line edit history

Change the shell's line buffer mechanism to more
closely match readline-based shells. New behavior:

  1. Blank lines are not added to the line buffer.

  2. Pressing the down arrow on the last line causes no change.

     The previous behavior erased the line.

  3. The new line is temporarily added to the line buffer
     so the user can move to previous lines with up arrows
     and then back to the new line with down arrows.

     The previous behavior discarded the partially written
     new line.

  4. Changes made to previous lines while exploring the line
     buffer history are preserved.

     The previous behavior discarded changes made to older lines.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,a8d760668eebc98915383481cb3d9eaf74c2a615,"rtlwifi: Update copyright dates

Signed-off-by: Larry Finger <ed0f1d78b8c21b2970494a178da4bdfa8beba2a7@lwfinger.net>
Signed-off-by: John W. Linville <2a53bac7a5d324865ef46ec4c38b2c0fba1456b4@tuxdriver.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
sensu/sensu-docs,5df0371644fe991ef68111337deba28c583249d1,"Incorporate migration content from Core docs into Go upgrade doc (#2390)

* Incorporate migration content from Core docs into Go upgrade doc

* Update with double-checked links in migrate to Go section

* Propagate changes to 5.20",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
streamsets/datacollector,d8cacff6f791ae9363573f73a3b461a9600b1283,"[doc] protobuf, Elasticsearch, CM install updates

Change-Id: I7b00dd87a44511b69d2df939a48a9018c0652db5
Reviewed-on: https://review.streamsets.net/2021
Reviewed-by: Loretta Chen <86cbbfa5f4e2ea880344e8bdec2e584c20d686d8@streamsets.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
istio/istio,bd3eaea6b3d1d3d8500280a79ed487da3e614b39,"Replace jsonLogger with stdioLogger. (#148)

This establishes a basic logger that prints log entries to a standard stream, based on adapter configuration. The entries will be structured entries (JSON).

This PR introduces a couple of differences from the existing adapter package model for the purposes of comparision and review:
* a distinct config/ directory for the configuration proto (using :go_default_library and a modified bazel_to_go.py)
* builds a struct representation of the config proto for the internal aspectImpl type (rather than pass the proto itself)

Because this PR also removes the out-of-date jsonLogger, changes were made to //pkg/server to remove the existing, legacy logger connectivity.

Former-commit-id: 1e7c6733b5fb30491bf40c6b6763f6218e623bd2",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,9a3f37143f669b45c4a96ac9a37caec038fcb2f3,"arm64: dts: meson: g12a: sort sdio nodes correctly

Fix sdio node order in the soc device tree

Fixes: a1737347250e (""arm64: dts: meson: g12a: add SDIO controller"")
Signed-off-by: Jerome Brunet <112e8b3ceb2d19b85876d8b6266daec3a6b188f2@baylibre.com>
Reviewed-by: Martin Blumenstingl <d6551fe26e010d03a5698ebfdda3aed52f4942a2@googlemail.com>
Signed-off-by: Kevin Hilman <f9849b02abe18c1ece6bd40346458ed53f49d31b@baylibre.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,a1b27d06cd978a0413b08a246d3462a33dec42b8,"Introduces the image assets for app-list speech UI.

TBR=xiyuan@chromium.org, oshima@chromium.org
BUG=313904
TEST=none

Review URL: https://codereview.chromium.org/106323003

git-svn-id: de016e52bd170d2d4f2344f9bf92d50478b649e0@239267 0039d316-1c4b-4281-b951-d872f2087c98
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,d057c036672f33d43a5f7344acbb08cf3a8a0c09,"hfs: prevent btree data loss on root split

This bug is triggered whenever hfs_brec_update_parent() needs to split
the root node.  The height of the btree is not increased, which leaves
the new node orphaned and its records lost.  It is not possible for this
to happen on a valid hfs filesystem because the index nodes have fixed
length keys.

For reasons I ignore, the hfs module does have support for a number of
hfsplus features.  A corrupt btree header may report variable length
keys and trigger this bug, so it's better to fix it.

Link: f8af803ab03cbf736a56bda5006f7436acb3b65e@gmail.com
Signed-off-by: Ernesto A. Fernández <bf3776b549db627a02b1ad63f4b7f4b547b4d613@gmail.com>
Cc: Christoph Hellwig <923f7720577207a44b32e59bbfbea59d27f1ae8e@infradead.org>
Signed-off-by: Andrew Morton <5c1e68b099950c134891f0b6e179498a8ebe9cf9@linux-foundation.org>
Signed-off-by: Linus Torvalds <69652caca27c8b940640ad396ab71f93cacec34f@linux-foundation.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
metasfresh/metasfresh,b6ea934487f129daa3a96bbe3a879588e86db66b,"update ReleaseNotes.md

[#4602](https://github.com/metasfresh/metasfresh/issues/4602) Cannot complete flatrate term conditions / transition in swing
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
systemd/systemd-stable,dc653bf487bae9d1ddf794442bf4176fee173b41,"service: handle abort stops with dedicated timeout

When shooting down a service with SIGABRT the user might want to have a
much longer stop timeout than on regular stops/shutdowns. Especially in
the face of short stop timeouts the time might not be sufficient to
write huge core dumps before the service is killed.

This commit adds a dedicated (Default)TimeoutAbortSec= timer that is
used when stopping a service via SIGABRT. In all other cases the
existing TimeoutStopSec= is used. The timer value is unset by default
to skip the special handling and use TimeoutStopSec= for state
'stop-watchdog' to keep the old behaviour.

If the service is in state 'stop-watchdog' and the service should be
stopped explicitly we still go to 'stop-sigterm' and re-apply the usual
TimeoutStopSec= timeout.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
sigrokproject/libsigrok,2c33b092553c4116151aeb59f129f2f0a598741e,"asix-sigma: eliminate magic numbers in sample memory access

Add more symbolic identifiers, and rename some of the existing names for
access to SIGMA sample memory. This eliminates magic numbers and reduces
redundancy and potential for errors during maintenance.

This commit also concentrates DRAM layout related declarations in the
header file in a single location, which previously were scattered, and
separated registers from their respective bit fields.

Extend comments on the difference of events versus sample data.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
ezQuake/ezquake-source,0ca36126b68b7c3fb165c6e9bdd22195c7686f8d,"Advanced spectator/demo camera control, added at JSS's request.   Some of this stuff is experimental and not intended for general use, so it's all enclosed in #ifdef JSS_CAM.


New cvars:
cam_thirdperson - in track mode, we look at the person being tracked rather than through his eyes
cam_dist        - for use with cam_thirdperson. Use +forward/+back to adjust it smoothly
cam_lockdir     - JSS wanted this (use with thirdperson OFF)
cam_lockpos     - experimental (use with thirdperson OFF)
cam_zoomspeed, cam_zoomaccel - to control how fast you zoom in onto the target with +forward/+back in cam_thirdperson mode

New commands:
cam_pos      - show current position
cam_pos x y z   or  cam_pos ""x y z"" - set new position
cam_angles    - show angles
cam_angles pitch yaw  or  cam_angles ""pitch yaw""    - set new angles

cam_pos and cam_angles can be used to set your position and angles both during demo playback and in spectator mode.

Macros to get current values:
$cam_pos
$cam_pos_x
$cam_pos_y
$cam_pos_z
$cam_angles
$cam_angles_pitch
$cam_angles_yaw
$cam_angles_roll       -- (always zero, someone may want to make it work one day)

",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
rook/rook,b68f9a7a4102b800cc3d967527eeaca92212a83f,"ceph: fix the service monitor port name

When the cluster is external the service monitor port name should match
with the name of the external metrics one.

Signed-off-by: Sébastien Han <62d754cc350e84d3b1c32ae79f976f5348e74a40@redhat.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/cel-go,80992504d4482781d7006667fe08f480cbd35e63,"Fix an unparser error on expressions like -(1 + 2) (#262)

This covers several problematic areas where the unparser would
previously generate expressions which did not match the incoming proto.
Also add some (commented out) comprehension tests which are not yet
supported by the Go unparser.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
Azure/azure-sdk-for-net,3f953134717cd60fbf6e07084cee0bf6d5ca1536,"Minor bug fix to recovery services backup (#5202)

* Undoing an unintended removal of field

* Incorporating PR feedback

* Updating release notes

* Updating release notes

* Fixing csproj file

* Generating files using generate.ps1 file
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,8fc770d4cedbaf8d15a3c6e16b3166a6b6f8ce4a,"REGRESSION(r110595): webkit-patch suggest-reviewers doesn't work
https://bugs.webkit.org/show_bug.cgi?id=81293

Reviewed by Adam Barth.

r110595 introduced new format of the author field of ChangeLog entry:
""Adam Barth  <abarth@webkit.org> && Benjamin Poulain  <bpoulain@apple.com>""
Updte chanelog.py to support it.

* Scripts/webkitpy/common/checkout/changelog.py:
(ChangeLogEntry._split_contributor_names):
* Scripts/webkitpy/common/checkout/changelog_unittest.py:
(test_parse_authors):

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@110922 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
samvera/hyrax,e8e4729a7d75132eda5424fa59d56151e3b97dfd,"Updating documentation for PermissionGenerator

To improve the documentation, and provide a hook for documentation
I'm updating the usage of this.

Note there is a TODO that could be refactored.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,5e7f7e8ab51164259cdef0134d7a387a4631c6b3,"[ios] Adds InfobarBanner icon background.

Adds a background to the Banner icon per the latest design. Might update
some constants later on once we have mocks.

Screenshot:
https://drive.google.com/open?id=1QC-4fhRow-s8Ar1eYxhlW1vOu6vriEzQ

Bug: 961343
Change-Id: I7cee0a8b00d21dccbe58898286e13385e7d8a199
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1845877
Reviewed-by: Peter Lee <d5a22bfb414d683c522ae986cbba00d025bb0a72@chromium.org>
Reviewed-by: Chris Lu <e9487bac4eea36314283c3a945af8395b6ed0676@chromium.org>
Commit-Queue: Sergio Collazos <f0832025030dda7e79f9f55af48aed0ae68635cb@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#703735}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
DonJayamanne/pythonVSCode,ca854b88bfd4cef0d0ca3b627aaaec89f1a943fe,"Ensure the prompt to install missing packages is displayed only once (#1649)

* Ensure the prompt to install missing packages is displayed only once
* Add missing dependency
* Fixes #980",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/zookeeper,ea8536982c39fd1127a4e6e7a8229b64a5798447,"ZOOKEEPER-3392: Add admin command to display last snapshot information

Author: Brian Nixon <nixon@fb.com>

Reviewers: Enrico Olivelli <eolivelli@apache.org>, Norbert Kalmar <nkalmar@apache.org>

Closes #947 from enixon/cmd-last-snap
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
sampsyo/beets,2f5165d4e1a08a1f312ba311fa283a1c59cc5291,"avoid loading a ""phantom"" plugin

I'm not sure when this was introduced, but ""beet version"" could list a plugin
called ""plugins"" because the load_plugins function would pick up the
BeetsPlugin class itself. This was benign but confusing.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
CTSRD-CHERI/u-boot,a307760ab48b428f4c2ac8b5676b29c56eee9f82,"mx6sabresd: Simplify the Ethernet PHY configuration

As per the AR8031 datasheet:

""For a reliable power on reset, suggest to keep asserting the reset
low long enough (10ms) to ensure the clock is stable and clock-to-reset
1ms requirement is satisfied.""

So do as suggested and also add a 100us delay after deasserting the
reset line to guarantee that the PHY ID can be read correctly and the
Atheros 8031 PHY driver can be loaded automatically.

This results in a simpler code.

Signed-off-by: Fabio Estevam <679188261afeb60eb822cd934fd7b46a48ddd743@nxp.com>
Acked-by: Joe Hershberger <7eda828be74302ad8146b816f8e7737b6e7767c8@ni.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,d03a74a88374db7f2d4c37698ebabaea62f90f6e,"Add myself to OWNERS in views/ and views/touchui.

BUG=none
TEST=none

Review URL: http://codereview.chromium.org/7488058

git-svn-id: de016e52bd170d2d4f2344f9bf92d50478b649e0@94797 0039d316-1c4b-4281-b951-d872f2087c98
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
elwayman02/ember-sinon-qunit,eb1e3d041910a2c2676ae417fb3f5aa53f753281,"[skip netlify]: [Security] Bump elliptic from 6.5.2 to 6.5.3

Bumps [elliptic](https://github.com/indutny/elliptic) from 6.5.2 to 6.5.3. **This update includes a security fix.**
- [Release notes](https://github.com/indutny/elliptic/releases)
- [Commits](https://github.com/indutny/elliptic/compare/v6.5.2...v6.5.3)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,9d9259aad3b8746ae9573db675c43f61f4e90a97,"2010-05-13  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Dave Hyatt.

        Fix scrolling in composited iframes
        https://bugs.webkit.org/show_bug.cgi?id=39088
        <rdar://problem/7980099>

        When propagating compositing out of iframes, we have to update the position of the iframe content
        layers on scrolling.

        Test: compositing/iframes/scrolling-iframe.html

        * page/FrameView.cpp:
        (WebCore::FrameView::scrollPositionChanged): Call updateContentLayerScrollPosition() when scrolling.

        * rendering/RenderLayerBacking.cpp:
        (WebCore::RenderLayerBacking::updateGraphicsLayerGeometry): Renamed setRootPlatformLayerClippingBox() to updateContentLayerOffset().

        * rendering/RenderLayerCompositor.h:
        * rendering/RenderLayerCompositor.cpp: Rename m_clippingLayer to m_clipLayer to go better with m_scrollLayer.
        (WebCore::RenderLayerCompositor::updateContentLayerOffset): Renamed from setRootPlatformLayerClippingBox().
            Set the size of the clipping layer from the FrameView now, so that scrollbars are not clipped out.
            Update the scroll layer position too.
        (WebCore::RenderLayerCompositor::updateContentLayerScrollPosition): Set the position of the scroll layer
            when the ScrollView is scrolled.
        (WebCore::RenderLayerCompositor::rootPlatformLayer): m_clippingLayer rename.
        (WebCore::RenderLayerCompositor::ensureRootPlatformLayer): m_clippingLayer rename. Also create m_scrollLayer at
            the same time as the clip layer, and clean it up as necessary.
        (WebCore::RenderLayerCompositor::destroyRootPlatformLayer): m_clippingLayer rename, and clean up the m_scrollLayer too.
        (WebCore::RenderLayerCompositor::detachRootPlatformLayer): m_clippingLayer rename

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@59396 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,78f4bb367fd147a0e7e3998ba6e47109999d8814,"loop: limit 'max_part' module param to DISK_MAX_PARTS

The 'max_part' parameter controls the number of maximum partition
a loop block device can have. However if a user specifies very
large value it would exceed the limitation of device minor number
and can cause a kernel panic (or, at least, produce invalid
device nodes in some cases).

On my desktop system, following command kills the kernel. On qemu,
it triggers similar oops but the kernel was alive:

$ sudo modprobe loop max_part0000
 ------------[ cut here ]------------
 kernel BUG at /media/Linux_Data/project/linux/fs/sysfs/group.c:65!
 invalid opcode: 0000 [#1] SMP
 last sysfs file:
 CPU 0
 Modules linked in: loop(+)

 Pid: 43, comm: insmod Tainted: G        W   2.6.39-qemu+ #155 Bochs Bochs
 RIP: 0010:[<ffffffff8113ce61>]  [<ffffffff8113ce61>] internal_create_group=
+0x2a/0x170
 RSP: 0018:ffff880007b3fde8  EFLAGS: 00000246
 RAX: 00000000ffffffef RBX: ffff880007b3d878 RCX: 00000000000007b4
 RDX: ffffffff8152da50 RSI: 0000000000000000 RDI: ffff880007b3d878
 RBP: ffff880007b3fe38 R08: ffff880007b3fde8 R09: 0000000000000000
 R10: ffff88000783b4a8 R11: ffff880007b3d878 R12: ffffffff8152da50
 R13: ffff880007b3d868 R14: 0000000000000000 R15: ffff880007b3d800
 FS:  0000000002137880(0063) GS:ffff880007c00000(0000) knlGS:00000000000000=
00
 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 0000000000422680 CR3: 0000000007b50000 CR4: 00000000000006b0
 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
 DR3: 0000000000000000 DR6: 0000000000000000 DR7: 0000000000000000
 Process insmod (pid: 43, threadinfo ffff880007b3e000, task ffff880007afb9c=
0)
 Stack:
  ffff880007b3fe58 ffffffff811e66dd ffff880007b3fe58 ffffffff811e570b
  0000000000000010 ffff880007b3d800 ffff880007a7b390 ffff880007b3d868
  0000000000400920 ffff880007b3d800 ffff880007b3fe48 ffffffff8113cfc8
 Call Trace:
  [<ffffffff811e66dd>] ? device_add+0x4bc/0x5af
  [<ffffffff811e570b>] ? dev_set_name+0x3c/0x3e
  [<ffffffff8113cfc8>] sysfs_create_group+0xe/0x12
  [<ffffffff810b420e>] blk_trace_init_sysfs+0x14/0x16
  [<ffffffff8116a090>] blk_register_queue+0x47/0xf7
  [<ffffffff8116f527>] add_disk+0xdf/0x290
  [<ffffffffa00060eb>] loop_init+0xeb/0x1b8 [loop]
  [<ffffffffa0006000>] ? 0xffffffffa0005fff
  [<ffffffff8100020a>] do_one_initcall+0x7a/0x12e
  [<ffffffff81096804>] sys_init_module+0x9c/0x1e0
  [<ffffffff813329bb>] system_call_fastpath+0x16/0x1b
 Code: c3 55 48 89 e5 41 57 41 56 41 89 f6 41 55 41 54 49 89 d4 53 48 89 fb=
 48 83 ec 28 48 85 ff 74 0b 85 f6 75 0b 48 83 7f 30 00 75 14 <0f> 0b eb fe =
48 83 7f 30 00 b9 ea ff ff ff 0f 84 18 01 00 00 49
 RIP  [<ffffffff8113ce61>] internal_create_group+0x2a/0x170
  RSP <ffff880007b3fde8>
 ---[ end trace a123eb592043acad ]---

Signed-off-by: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@gmail.com>
Cc: Laurent Vivier <1339eb1aa06789b4225d52dda27239a91886e148@bull.net>
Cc: 4fbacc2fa0ffdbb11bf1ad6925b886ebd08dd15f@kernel.org
Signed-off-by: Jens Axboe <08e836a620179c237f631ad0545a7ebdf54201f3@fusionio.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
fogbeam/zeppelin_mirror,65b797c22eadebb9a18575e91fdcfe33722762c8,"ZEPPELIN-3154. Fixed Checkstyle errors and warnings in flink module

### What is this PR for?
Fixed the Checkstyle errors and warnings in the flink module.

### What type of PR is it?
Improvement

### Todos
* [ ] - Task

### What is the Jira issue?
* https://issues.apache.org/jira/browse/ZEPPELIN-3154

### How should this be tested?
* CI pass

### Screenshots (if appropriate)

### Questions:
* Does the licenses files need update? no
* Is there breaking changes for older versions? no
* Does this needs documentation? no

Author: Jan Hentschel <jan.hentschel@ultratendency.com>

Closes #2795 from HorizonNet/ZEPPELIN-3154 and squashes the following commits:

f70e93d [Jan Hentschel] ZEPPELIN-3154. Fixed Checkstyle errors and warnings in flink module
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,6f06d232de803a2c3d8ed5cab59fb0b465a45a16,"When the mouse is dragged out of an :active element, it should lose :hover.
https://bugs.webkit.org/show_bug.cgi?id=57206

Patch by Jeremy Apthorp <jeremya@google.com> on 2011-11-30
Reviewed by Ryosuke Niwa.

Source/WebCore:

Test: fast/css/hover-active-drag.html

* page/EventHandler.cpp:
(WebCore::EventHandler::handleMouseMoveEvent): Don't mark mouse-drag hit tests read-only, since they no longer are.
(WebCore::EventHandler::dragSourceEndedAt): Send a hit test request when the mouse goes up after a drag, so
RenderLayer has a chance to update the hover/active status.
* rendering/RenderLayer.cpp:
(WebCore::RenderLayer::updateHoverActiveState): Only allow the :active state to change on mouse down or mouse up.

LayoutTests:

* fast/css/hover-active-drag-expected.txt: Added.
* fast/css/hover-active-drag.html: Added.

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@101619 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/spark,5f9ce738fe6bab3f0caffad0df1d3876178cf469,"[SPARK-8844] [SPARKR] head/collect is broken in SparkR.

This is a WIP patch for SPARK-8844  for collecting reviews.

This bug is about reading an empty DataFrame. in readCol(),
      lapply(1:numRows, function(x) {
does not take into consideration the case where numRows = 0.

Will add unit test case.

Author: Sun Rui <rui.sun@intel.com>

Closes #7419 from sun-rui/SPARK-8844.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,89209304eab790c03559163690c518c4cd9760eb,"[css-contain] Apply optimization in SetText if text doesn't wrap

This is an extra case in which we can apply the SetText optimization
introduced in r578233.
If the text is longer than the container, but we know
it's not going to wrap, then we can apply the optimization anyway and
avoid the layout as we know it's not going to be split
in multiple lines.
Thanks to this patch the optimization will be applied in more cases.

The patch also removes the TODO about trying to avoid measuring
the text length. That was tried in
https://chromium-review.googlesource.com/1275848 but discarded
as it is not possible to avoid measuring the text
if we want to store proper values for widths.

Bug=805785
TEST=fast/css/containment/change-text-node-data-nowrap.html

Change-Id: Ifa708d2a40b95254420750672941de18f5a6f3c7
Reviewed-on: https://chromium-review.googlesource.com/c/1333750
Reviewed-by: Christian Biesinger <759fddd9b184808fafc5ed357cadee4efa0bd04c@chromium.org>
Commit-Queue: Manuel Rego <426c54bf154ff8d1bfecfdb0f393e8e07cde8f7a@igalia.com>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#607786}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
loot/skyrimse,5892392a8f977286c686af922971f10ef0dc46c9,"Update TK Children (#1378)

* Remove message
  - Unresolved reference from USSEP fixed in latest release.

* Remove item from incompatible list
  - Unresolved reference from USSEP fixed in latest release. USSEP is no longer incompatible.

* Add cleaning info
  - Version 2.02 English, Non USSEP 0xF4B08E03, USSEP 0x95D3D735
  - Version 2.02 Japanese, Non USSEP 0x79D77CB9, USSEP 0xD3B5EDAF",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
publiclab/PublicLab.Editor,495d2b6839ca080e277c22b3cd132de1f4224e5f,"[Security] Bump mixin-deep from 1.3.1 to 1.3.2 (#333)

Bumps [mixin-deep](https://github.com/jonschlinkert/mixin-deep) from 1.3.1 to 1.3.2. **This update includes a security fix.**
- [Release notes](https://github.com/jonschlinkert/mixin-deep/releases)
- [Commits](https://github.com/jonschlinkert/mixin-deep/compare/1.3.1...1.3.2)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

Co-authored-by: Jeffrey Warren <f3e731dfa293c7a83119d8aacfa41b5d2d780be9@unterbahn.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
GNOME/mutter,ad398d583b7b5e2b3e3a0c00eda6b5eb358121d9,"glx: Mark stage clip initialized even for NULL user clip

If a NULL clip is passed to clutter_stage_glx_add_redraw_clip then we
update the redraw clip to have width of 0, but we weren't setting
stage_glx->initialized_redraw_clip = TRUE. This could result in a full,
unclipped stage redraw being reduced to a clipped redraw.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,e689bf6687ca37db5887d703531172ec2f3e337e,"New test introduced in r106642 failes on Qt Linux Release
https://bugs.webkit.org/show_bug.cgi?id=77729

Patch by Zoltan Arvai <zarvai@inf.u-szeged.hu> on 2012-02-03
Reviewed by Csaba Osztrogonác.

* platform/qt/Skipped:

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@106652 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
Juniper/contrail-controller,7d242188e9076d23b84839648aae5ab109f02676,"Fix structured syslog kafka forwarder crash

Add check for null opaque data in message from kafka
in kafka forwarder to avoid string constructor throwing
exception. Similar fix already exists in the kafka
processor. Run kafka forwarder timer in its own task,
cleanup logs to indicate that they are coming from
kafka forwarder.

Change-Id: I281b37e799b849de0dc69cb8ba5fd6e4649705ec
Closes-Bug: #1710804
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,8bc7810ae3c5b608a9668c765bf83c30a6461aa0,"Minor copyedits to packaging to provide better context.

TBR=aa

Review URL: http://codereview.chromium.org/255033

git-svn-id: de016e52bd170d2d4f2344f9bf92d50478b649e0@27701 0039d316-1c4b-4281-b951-d872f2087c98
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
opennetworkinglab/onos,08242084915d00f543d7d24220876d1a7f476630,"ONOS-3549 Fixed NPE during renew for rangeNotEnforced IP

Added renew case for IP assigned with rangeNotEnforced option.
Addresses ONOS-3549

Change-Id: I6cb43f662332f0d461889d32659f1252ea436102
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,e5505026dc4daf269ecd4efacedb1a706811b5cd,"Prepare CalendarPicker so we can add another picker, SuggetionPicker
https://bugs.webkit.org/show_bug.cgi?id=97193

Reviewed by Kent Tamura.

Preparation so we can add another picker to CalendarPicker and switch
between them.

No new tests. No behavior change.

* Resources/pagepopups/calendarPicker.css:
(.calendar-picker): Added so we can apply these styles just to calendar picker.
* Resources/pagepopups/calendarPicker.js:
(CalendarPicker.validateConfig): Renamed so each picker can validate the config object.
(initialize):
(closePicker): Call Picker.cleanup().
(openCalendarPicker):
(CalendarPicker):
(CalendarPicker.prototype.cleanup): Cleanup event listener on document.body.
* Resources/pagepopups/pickerCommon.js:
(Picker.prototype.cleanup):


git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@129198 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,e1e89e24f140ae7242f8dcda3988dc3eb8852826,"Mojo C++ bindings: add more CHECKs to investigate crashes.

BUG=725605,740044,741047

Change-Id: Ibeee3338455826284044df7695681af319547bad
Reviewed-on: https://chromium-review.googlesource.com/572380
Reviewed-by: Ken Rockot <26709e9d68a4d5a018b836f69582d8d0f969984e@chromium.org>
Commit-Queue: Yuzhu Shen <6b4c5e59b84d577e4570eb3b2c48cfa438d90281@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#486938}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,f63d0ec404a738c43341dfcc129cee722d3c25f3,"Reformat all gn files in /chrome/browser/resources/feed_internals.

`gn format` recently changed its formatting behavior
for deps, source, and a few other elements when they
are assigned (with =) single-element lists to be consistent
with the formatting of updates (with +=) with single-element.

Now that we've rolled in a GN binary with the change,
reformat all files so that people don't get presubmit
warnings due to this.

This CL was uploaded by git cl split.

R=d7f423dee0d673e7cd458b8b676575db4f9d4fb4@chromium.org

Bug: 1041419
Change-Id: I53bd52903549468daa9b6890a51a4f285197d944
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1998210
Auto-Submit: Nico Weber <c0f02d98506190746d1cdcb01be0f37b51e27077@chromium.org>
Reviewed-by: Carlos Knippschild <d7f423dee0d673e7cd458b8b676575db4f9d4fb4@chromium.org>
Commit-Queue: Carlos Knippschild <d7f423dee0d673e7cd458b8b676575db4f9d4fb4@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#730676}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nx111/oscam,a381e0046048c9e53c5fc4a4360499120434b75a,"- Tryfix enigma multi tuner eventually running out of streampids

Now the last indexer of a streampid on a ca is closed with -1
Perhaps this triggers enigma to free the registered streampid instead of merely disabling it! 


git-svn-id: 04ac727cac23d4bf487af9f7443443260496379a@9320 4b0bc96b-bc66-0410-9d44-ebda105a78c1
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
GNOME/gedit,33c352684f98ee88d906cb3036353c6b0abe718c,"Translation updated by Reinout van Schouwen.

2004-08-23  Vincent van Adrighem  <adrighem@gnome.org>

	* nl.po: Translation updated by Reinout van Schouwen.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
Esri/arcgis-runtime-samples-android,aed66dd849e4d7ab0d53e48ab07fef350dfbd719,"Trev8939/offline map local basemap (#586)

* working draft of sample

* Sample README, screenshot and dialogs updated.

* Handle device config changes with setRetainInstance(true) and workaround.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,f73f90da3aad14c49becc80b93c5f19401f50803,"Add a comment clarifying Options::showDisassembly versus Options::showDFGDisassembly.

Rubber stamped by Mark Hahnenberg.

* runtime/Options.cpp:
(JSC::Options::initializeOptions):



git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@121372 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,ef05a6e87cfc24c7771111f653463f0dd165acdf,"Handle two-finger tap gestures in the same way as long-press gestures
https://bugs.webkit.org/show_bug.cgi?id=99947

Reviewed by Adam Barth.

Source/WebCore:

Currently a long-press gesture is used to dispatch a context menu (for platforms
defining CONTEXT_MENUS) or to select text (for Android). Additionally, for platforms
defining TOUCH_ADJUSTMENT, gesture target fuzzing is performed on the location and
touch area of the long-press gesture.

This CL will cause two-finger tap gestures to be handled in the same way as long-press
gestures. The location and touch area of a two-finger tap gesture will correspond to
the location and touch area of the first finger down; the location/area of the second
finger will be ignored.

Test: touchadjustment/touch-links-two-finger-tap.html

* page/EventHandler.cpp:
(WebCore::EventHandler::handleGestureLongPress):
(WebCore):
(WebCore::EventHandler::handleGestureForTextSelectionOrContextMenu):
(WebCore::EventHandler::handleGestureTwoFingerTap):
(WebCore::EventHandler::adjustGesturePosition):
* page/EventHandler.h:
(EventHandler):

Source/WebKit/chromium:

Set the area of a two-finger tap gesture to be the area of the enclosing
rectangle for the first finger down.

* src/WebInputEventConversion.cpp:
(WebKit::PlatformGestureEventBuilder::PlatformGestureEventBuilder):

LayoutTests:

New layout test for dispatching context menus on a two-finger tap
gesture when touch adjustment is enabled.

* touchadjustment/touch-links-two-finger-tap-expected.txt: Added.
* touchadjustment/touch-links-two-finger-tap.html: Added.


git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@132406 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
City-of-Helsinki/smbackend,89708d64246aff62fcefe07541bf4c085e3a8b2b,"Correct implementation for root_ontologytreenodes

- now unit.root_ontologytreenodes contains root node cache.
- root_services in API provides also root_ontologytreenodes for backward compatibility

Closes #51.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
symfony/Config,491ba554f719b57b5eb9020c064b0a753bc6d02d,"Merge branch '5.0'

* 5.0:
  Add missing use statements
  [Translation] Add missing use statement
  [Translation] Add missing use statement
  [Config][XmlReferenceDumper] Prevent potential \TypeError
  [Mailer] Fix broken mandrill http send for recipients with names
  [Translation] prefer intl domain when adding messages to catalogue
  Fix CS
  Fix CS
  Fail on empty password verification (without warning on any implementation)
  [Translation][Debug] Add installation and minimal example to README
  [Validator] try to call __get method if property is uninitialized
  Show both missing packages in the same error message
  Fix handling of empty_data's \Closure value in Date/Time form types
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,d5406284ff803a578ca503373624312770319054,"ACPI: PM: s2idle: Refine active GPEs check

The check for any active GPEs added by commit fdde0ff8590b (""ACPI:
PM: s2idle: Prevent spurious SCIs from waking up the system"") turns
out to be insufficiently precise to prevent some systems from
resuming prematurely due to a spurious EC wakeup, so refine it
by first checking if any GPEs other than the EC GPE are active
and skipping all of the SCIs coming from the EC that do not produce
any genuine wakeup events after processing.

Link: https://bugzilla.kernel.org/show_bug.cgi?id=206629
Fixes: fdde0ff8590b (""ACPI: PM: s2idle: Prevent spurious SCIs from waking up the system"")
Reported-by: Ondřej Caletka <b816faa87b7d35274d2e545c5be11ed4376f3ccf@caletka.cz>
Tested-by: Ondřej Caletka <b816faa87b7d35274d2e545c5be11ed4376f3ccf@caletka.cz>
Cc: 5.4+ <4fbacc2fa0ffdbb11bf1ad6925b886ebd08dd15f@vger.kernel.org> # 5.4+
Signed-off-by: Rafael J. Wysocki <27ffc44a8ec6a212fba98cfc3246c6ce8ab131e0@intel.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
symfony/symfony,b912af92613c3dc256ab5515cca46c9b10223e3a,"Merge branch '5.1'

* 5.1:
  Fix typo
  Fix deprecated libxml_disable_entity_loader
  Add Tagalog translations for validator messages 94, 95, 96 and 99
  PHPUnit's assertContains() performs strict comparisons now.
  [ClassLoader][Routing] Fix namespace parsing on php 8.
  Fix deprecated libxml_disable_entity_loader
  Made reference to PHPUnit\Util\XML::loadfile php5-compatible.
  [Validator] Add missing translations for german and vietnamese
  Modernized deprecated PHPUnit assertion calls
  [Console] The message of ""class not found"" errors has changed in php 8.
  The PHPUnit\Util\XML class has been removed in PHPUnit 9.3.
  [Console] Make sure we pass a numeric array of arguments to call_user_func_array().
  Remove outdated references from base_js.html.twig file
  [String] We cannot have a ""provides"" function in test cases.
  Typo: somes styles fixed
  [Serializer] Fix that it will never reach DOMNode
  [Validator] sync translations
  [VarDumper] Improve previous fix on light array coloration
  [Cache] Fix #37667
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
couchbase/cbgt,e5e79d98e44675a172e4e3c79d6b99c02924e3d5,"MB-20205 - recycle buffers in MsgRing

Some profiling of cbft showed that lots of memory was being allocated
by the MsgRing, so this change provides some buffer recycling.

A simple approach of two levels (small vs large) are used for the
recycling pools.

Change-Id: I7dad6aff721440fd3be8e93d7b9c0b3f68027a9d
Reviewed-on: http://review.couchbase.org/68067
Reviewed-by: Marty Schoch <ba9951d7d66412e2a57aea395f01176a793cf5eb@gmail.com>
Tested-by: Steve Yen <ef850f73f7832052d3c6d9b5ddd3a1716d9a57f1@gmail.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
stackforge/solum,f35e792a16c7a96f245b65c1a59b49a711b80738,"[workaround]Let solum work without logging

This a workaround, we should add the logging setup back.

Change-Id: I4b63e178bfe10a3c76d3fc4b2a97e8cbe74fcc5d
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/arrow,97592802b97762d35565defdc589e4a7b11d980a,"ARROW-9858: [Python][Docs] Add user guide for filesystems interface

Closes #8065 from jorisvandenbossche/ARROW-9858-filesystem-docs

Authored-by: Joris Van den Bossche <36c737f86d71d8ee1ddeb1e5c83102ee5de8f97c@gmail.com>
Signed-off-by: Antoine Pitrou <9359a4d812173b65a3a0094cd86363e79731a3c2@python.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
zulip/zulip,eb53b5e8defdc7cd3b5590c625d018bddce854e4,"webpack: Use cache-loader for various loaders.

Profiling shows that using cache-loader saves ~6-7 seconds of time take
by webpack-dev-server on subsequent runs. The overhaul this adds when
nothing is cached (when running first time) is around 1-2 seconds. We don't
use cache loader for ts-loader since webpack docs says it will slow it down
and file-loader since it just copies files over and caching it would just
was disk space.

Profiling data:

-------- Master ---------

~/zulip (master) $ tools/webpack --watch | ts -s '%.S' # master
03.995825 ℹ ｢wds｣: Project is running at http://127.0.0.1:9994/
03.996161 ℹ ｢wds｣: webpack output is served from /webpack/
03.996289 ℹ ｢wds｣: Content not from webpack is served from ...
19.284477 ℹ ｢wdm｣:
19.285371 ℹ ｢wdm｣: Compiled successfully.

-------- cache-loader ---------

~/zulip (cache-loader)$ tools/webpack --watch | ts -s '%.S'
04.107913 ℹ ｢wds｣: Project is running at http://127.0.0.1:9994/
04.108646 ℹ ｢wds｣: webpack output is served from /webpack/
04.109068 ℹ ｢wds｣: Content not from webpack is served from ...
12.633782 ℹ ｢wdm｣:
12.634083 ℹ ｢wdm｣: Compiled successfully.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,51eeec6a3fcdb833e81fa8cc73165613a997009d,"[root-layer-scrolling] Fix compositing overlap test

When RLS is turned on, children of the root layer now have a composited
scrolling ancestor. This causes them to use their unclipped bounding
rects to test overlap. It turns out overlap testing inside composited
scrollers is somewhat buggy (https://crbug.com/783532).

In order to prevent regressing existing behavior, this CL makes an
exception for children whose composited scrolling ancestor is the root
layer. In that that case, we use the clipped rects. This is necessary so
that overlap testing is performed against other clipped rects (see
comments in OverlapMap::Add for how clipped vs unclipped comparisons
work).

However, since the root layer is now a scrolling layer, this would
break overlap testing for boxes that are offscreen. This CL
additionally makes overlap test-related clipping ignore the root layer
so that the clipped_absolute_bounding_box for the root layer is actually
unclipped, as pre-RLS. The newly added test covers this case.

Bug: 783532

Cq-Include-Trybots: master.tryserver.chromium.linux:linux_layout_tests_root_layer_scrolls;master.tryserver.chromium.linux:linux_layout_tests_slimming_paint_v2
Change-Id: I5e302f3f29775d829b94593e8053025c5da0f980
Reviewed-on: https://chromium-review.googlesource.com/742506
Reviewed-by: Steve Kobes <c12d2e6511cc03740f7c5bf724a292cf5ae24793@chromium.org>
Reviewed-by: Chris Harrelson <f23dd81ade77a021a9f8915543e6fc85b5c3c65d@chromium.org>
Reviewed-by: Philip Rogers <a58f385838635509f9b282a11e4b3bef85543d5f@chromium.org>
Commit-Queue: David Bokan <9e5676d47d19eb72262e56b54b7e780c7d70af34@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#517835}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/iree,5b05c0b41cb18564d9978f93028c10c4a6adae20,"Remove memref of index from IREE

This is against the MLIR spec and they're trying to add the enforcement back. There's an ongoing discussion about relaxing this constraint (https://groups.google.com/a/tensorflow.org/forum/#!topic/mlir/P49hVWqTMNc), but for now we should follow the spec.

PiperOrigin-RevId: 272514453
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,bd8ac0b42ea508a8768d3453431dbfbbe5c4dab0,"Handle early ServiceRequest errors in shell::ServiceContext

Sets an error handler immediately when binding ServiceContext's
ServiceRequest. This means Service::OnStop() may be invoked
without first receiving Service::OnStart().

Docs updated accordingly, and MojoShellConnectionImpl changed to
destroy its ConnectionFilter instances in OnStop().

This eliminates a race condition where a child process might not
detect an IPC Channel error in case of early browser process
exit.

BUG=623396

Review-Url: https://codereview.chromium.org/2257693003
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#413002}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,7c7a2ac892ad5377c3e25b26cba0c74c9be4c59a,"Build a Bridge to Eddystone Encoder in Components

This change links the Eddystone Encoder in components to the android
Physical Web Share feature through the Java Native Interface.

Add Platform Independent Eddystone Encoder

This change creates an eddystone encoder in cpp, which can be used
across platforms for future physical web projects. Right now,
specifically, it will be used for Physical Web Sharing. Here are the
eddystone specs:
https://github.com/google/eddystone/blob/master/protocol-specification.md

BUG=685856

Review-Url: https://codereview.chromium.org/2753683002
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#458214}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
ansible/ansible,4224dd1acb4f324a54d7769b2ac98a92c8f4e569,"Rework docker module states.

Organize each state into a distinct function for readability and composability.
Rework `present` to create but not start containers. Add a `restarted` state
to unconditionally restart a container and a `reloaded` state to restart a
container if and only if its configuration is incorrect. Store our most recent
knowledge about container states in a ContainerSet object. Improve the value
registered by this task to include not only the inspect data from any changed
containers, but also action counters in their native form, a summary message
for all actions taken, and a `reload_reasons` key to store a human-readable
diagnostic to determine why each container was reloaded.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
42ity/fty-core,32fba864ee9ec177c9be227604c4785d5d1dd143,"Problem: need to maintain routing info from cli script

Solution: add fty-route command, which manipulates with interfaces file
using autgtool (like REST API).

Signed-off-by: Michal Vyskocil <2b7ea182d0b58d21ea6743100786898a051d1921@eaton.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
rpm-software-management/libhif,9f6219f83f0654912a218c6491244c1122c27241,"change the Yum repo loading API.

the main problem with the old API is that it seems like the client can invoke
the writing/loading functions for main/filelist/presto datatypes in an arbitrary
order while in fact he can not (for instance, things go wrong in libsolv if one
loads the entire repository, then filelists, then write the cache file and then
tries to load everything back from the cache.).

The new approach relies on a single function and flags to specify the
precise operation. Hawkey handles the ordering of the operation. This
seemingly takes away some of the flexibility, like deciding to load
filelists or prestodelta at a later time. Some of these mechanisms might
still be added. Unittests testing specificities of the old API have been
removed for now.

The new API is also extensible with a flag forcing e.g. filelists to only
be loaded on demand.

In practice at this point (current practices of Fedora packaging sometimes
need full filelists for resolving, libsolv being best tuned for loading
everything from cache very fast but filelists load from .xml is very
slow), anything but preparing the cache with all extensions once and then
reusing it as long as possible makes little sense.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
debops/debops,611bbe9a947b9a6ef7fc3203a982011dcc749d83,"Use `state` for `unattended_upgrades__(blacklist|origins).*`. Drops `when`.

Internals:

* Reworked Jinja templates to remove most of the redundant code.

Related to: https://github.com/debops/ansible-apt_preferences/issues/12
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,121e6138b0b543c38ec66cf0033af96dc75b49a0,"Refactor configuration of sandboxes - first steps

See
https://docs.google.com/document/d/1H-hCsIcMsAEP0fWHimbuiNA-Hc9eXEmR94eb-2RQAhA/edit?usp=sharing
for background.

This moves all process type dependent decisions on how to create
Linux processes (not how to sandbox them once created, not Android)
into the launch delegates and makes the arguments to the
ChildProcessLauncher constructor and
BrowserChildProcessHostImpl::Launch OS independent.

BUG=none

Review URL: https://codereview.chromium.org/177863002

git-svn-id: de016e52bd170d2d4f2344f9bf92d50478b649e0@256802 0039d316-1c4b-4281-b951-d872f2087c98
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
pingcap/pd,af843d14758091cd59033c938188bbd241f7c2d4,"server/cache: reorganize the cache (#359)

* server/cache: hide regions in clusterInfo

regionsInfo will be rewrote later, we should not access it directly.

* server/cache: reorganize the cache

First, stores and regions are reorganized so that we can easily access
the information we need.

Second, the algorithm to handle region heartbeat is modified
accordingly, to handle Split and Merge.

It's hard to handle Split and Merge perfectly to keep the cache always
reflecting the newest information about which region is serving which
range. But we can keep the cache always updating according to the region
heartbeat.

Here's how we handle region heartbeat. First, if the region does not
exist, it is added to the cache directly. Second, if the region exists
but the heartbeat is stale, an error will be returned. Finally, if the
region exists and the heartbeat is not stale, it is updated to the
cache. Additionaly, every time a region is added or updated, all range
overlap regions will be deleted from the search tree first, and then
the region will be inserted. Note that regions deleted from the search
tree can still be found by the region id.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
oracle/terraform-provider-baremetal,de00ee08630017e2707537cfd23c6fa641b025c4,"Fix resource discovery file and path handling issues on Windows and add export argument validation

- On Windows, you have to close a file handle before renaming it.
- Path separators were assuming Unix-style forward slashes. Change the separators to be OS-agnostic.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
erdc/proteus,2e8d3fbae4023c042efa1b9fdd89adf069ab376f,"Fenton waves for WaveTools (#707)

* Fenton waves script for WaveTools (dependencies: ncurses)

* WT and setup.py modified for Fenton script

* added John Fenton to list CONTRIBUTORS.md with his permission

* WT: added autoFenton switch and opts dict
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
sanity-io/sanity,a6cd923609c9fb11fd70642f8e6a16c583e8f1c2,"[components] Pass down scroll container as context (#349)

* [components] Adding context scroll container

* [components] Removing use of scrollContainer, and use context

* [form-builder] Support for ScrollContainer in form-builder full screen

* [components] ScrollContainer fallback and cleanup

* [components] Scrollcontinaer scroll method Overlay

* [components] Remove closing logick from sticky

* [components] Use escapeable on dropdownbutton

* [components] Adding removeEventListener on scrollContainer

* [components] Cleanup sticky

* [components] Fix dropdownbutton position bug

* [components] Kebab-case scroll-container part

* [components] More robust detection of getScrollContainer context

* [components] ScrollContainer use this.handleScroll for scroll event
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
ServUO/ServUO,c0f976365249e422eabad921fa72ccea994aa2dc,"Update DisintegratingThesisNotes.cs

Need to revert this one key being blessed.

The problem is on EA they ARE blessed but just appear on the corpse. The way we have loot drops, blessed items will not drop on the corpse this way.

Reverting until a better system is discovered.",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
dotnet/roslyn,c36bdc24478599db8fc044713d2a3354a8c9f348,"Move the repo to newer version of FxCop and Roslyn analyzers (2.3.0-beta1)

Enable few more rules and fix issues identified these rules.

Also added issue IDs for the disabled rules due to lack of a fixer/fix all experience.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
GNOME/gdm,4e8abee68746f7305a604aad72d3ee4de45d25dd,"Updated Indonesian translation, now done by Dicky Wahyu Purnomo

2004-11-25  Mohammad DAMT  <mdamt@bisnisweb.com>

	* id.po: Updated Indonesian translation, now done by Dicky Wahyu Purnomo <dicky.wahyu@massaint.or.id>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,68bab8662f49b9e158f1d32f11becd4e48c04079,"mfd: twl6040: Optional clk32k clock handling

In certain boards the source for the clk32k clock can be gated. In these
boards the clk32k clock can be provided to the driver and it is going to be
enabled/disabled when it is needed.
If the clk32k clock is not provided the driver will assume that it is always
running.

Signed-off-by: Peter Ujfalusi <e5c0b4cdf99ae1d408b9c497159e74b54e02e008@ti.com>
Signed-off-by: Lee Jones <630e34333487a351a857f6b705e04d30b37c1629@linaro.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
TID-Lab/aggie,4c82e9d2e9bc94df15116ff50eee78e481b14895,"Update docker rules

* openssl command is no longer interactive (there's no way to interact
  with command line tools in docker)
* No longer using forever (so the container doesn't quit)
* Builds the image locally, since we don't have a good image up online
* The database does not try to share data on the host
* mongo uses 27020 now so it doesn't conflict with a mongo instance on
  the host.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
WikiEducationFoundation/WikiEduDashboard,d22fa2041aec57ce34fd61d7f0b02da1848941ea,"In training index, emphasize the most relevant library

This adds variant styling for a logged in user, based on their most recent course, so that the training index emphasizes the set of training modules that are relevant for their course. This will hopefully cut down on cases of users taking the wrong version of an assigned training module — students vs professional development.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
elogind/elogind,316e8d849fc1d34b61d27f2967e0ede84fe9f46d,"Introduce elogind-uaccess-command to replace uaccess builtin.

The uaccess udev builtin command is only used by logind and contains
functionality only implemented in logind. As such, while we cannot
write udev-builtin commands in elogind (not being udev), we can write
standalone binaries and rewrite our udev rules to use them instead.

This fixes the feature of granting users access to devices using a user
ACL which is toggled only when the user is associated with an active
session. Currently this functionality is half broken, as while the ACL
is granted and revoked while VT-switching, it is not granted to new
devices as they are plugged in. This issue is fixed by this commit.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
TrinityCore/TrinityCore,cbba22ba6809caf4e9272d8c601756ec0323cc05,"Core/SAI: Fix assertion triggered in SmartScript

Remove assertion in SmartScript added in b8625f41bd6131e7fb3ff126780da18d5d2959fd and handle SmartScripts with GetBaseObject() returning NULL , like SmartTrigger . In this case SmartScript::mTargetStorage cannot be sanitized and might contain references to free'd WorldObjects if the script doesn't last a single Map::Update() call.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
twbs/bootstrap,e5fa7084910c3ad68232c4580f4e2dd5a4c3fad1,"v5: Add .fs-* utilities for font-size and rename font-weight/-style utilities (#30571)

* v5: Add .fs-* utilities for font-size

- Adds new font-sizes Sass map
- Generates six new classes for setting only font-size
- Updates docs to mention this, including a scss-docs reference

* Update font utilities

- Make .fs-* utils for font-size use RFS
- Rename .font-weight-* utils to .fw-*
- Rename .font-style-* utils to .f-*
- Update order of utilities a bit
- Update docs to match

* Update migration docs to make note of these changes

* Be more specific in font-size docs about scale

* Update font-style abbreviation to .fst

* Fix font-weight property

* Formatting & font style utility fix

* Move to Alpha 3 migration section

* Update migration guide for more details, splitting alpha 2 stuff back to the appropriate section in Migration guide

* Tweak language on example

Co-authored-by: Martijn Cuppens <eb1e95cd7406bd48b9f875e0ae2b2d93fd22c202@gmail.com>",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,ea47b6a802638fa18df618d5ba71dc4b5b3b4c48,"Introduce ui.dll / libui.so for the component build.

R=ben@chromium.org
Review URL: http://codereview.chromium.org/7328011

git-svn-id: de016e52bd170d2d4f2344f9bf92d50478b649e0@92819 0039d316-1c4b-4281-b951-d872f2087c98
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
opendaylight/netvirt,20849f22ccac3c3f94c01fa3068080ee22e2b75b,"Partial fix for remoteNextHop

1. Adds flows at time of interface creation. No need to add tunnel
interface to any vpn instance.
2. Removes some superflous code
3. Adds retry mechanism: https://git.opendaylight.org/gerrit/20370

Change-Id: I17da5ade46d73abfa22878de2ccbad37803b2e8a
Signed-off-by: Vishal Thapar <c3b9ed89c5d07264fd87799167335bf2ad91936e@ericsson.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
grivet/dpdk,a5cf3924a78cc4e629cc03b6ede6ecb1a72d3369,"eal: remove zombie symbols

test_mp_secondary was initially added by mistake.
rte_snprintf has been removed.

Fixes: 9d41beed24b0 (""lib: provide initial versioning"")
Fixes: 3185322809c1 (""eal: remove rte_snprintf"")

Signed-off-by: Thomas Monjalon <ee2fa8b2681c737f775687e475dcbf2028a412f1@6wind.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,c5599b5a7236e5ac4c9f1c285c50a79e241c1e2a,"Add some missing ES3 enums to the validator

BUG=429053

Review URL: https://codereview.chromium.org/1223813010

Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#337982}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
wongsyrone/lede-1,bb51193acd4e1046fe731199a19b46ffcd461de5,"kernel/4.4: add missing newline character to UBI messages

A few UBI messages lacks the trailing newline character which
leads to ugly lines in the bootlog like this:

  [    6.649159] UBI error: no valid UBI magic found inside mtd6[    6.667751] Freeing unused kernel memory: 2196K

Add a newline character to the end of the messages to fix it.
After the fix the line from above looks better in the log:

  [    6.609182] UBI error: no valid UBI magic found inside mtd6
  [    6.627599] Freeing unused kernel memory: 2132K

Signed-off-by: Gabor Juhos <0b85b0feb94c9a44e8676965f48a70291ba74edb@freemail.hu>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
dockstore/dockstore-ui2,684659f2156bb011314f93da13185477c0cee3b9,"Basically checker workflow's launch command change (#231)

* Basically reverting a7f3ccd0def0319d077a751834a61281fbfe6a87

* Add verb to checker command

* Add temporary checker workflow convert command
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
airtower-luna/mod_gnutls,c22af3a4a9a00120650e51197adc6a32a55f64e6,"Handbook: List Berkeley DB and GDBM as equal options for DBM caches

Some major Linux distributions do not provide APR libraries with GDBM
support, so it doesn't really make sense to list it as
""recommended"". Debian only VERY recently enabled it in unstable [1].

[1] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=843206
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
mercadopago/px-android,3d04a8d225267d101543793d130660a2d1e4a772,"[Feature] Tracking back BankDealsActivity (#1552)

* New MVP without providers.
* TrackView Refactor.
* Track back added.
* BankDealsPresenterTest added.",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
GNOME/pygobject,83ff5938612d37d52f112867a472777dd6786d69,"gi/__init__.py: Pacify pep8 style checker

It was complaining about finding only 1 blank line.  Regression
likely introduced by f976d05b.

https://bugzilla.gnome.org/show_bug.cgi?id=686991
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
savoirfairelinux/ring-client-macosx,e521a1847e506000101b734dac69b7972033eb5a,"support ""transfer unjoinable"" status to messagesVC

add ""TRANSFER_UNJOINABLE_PEER"" status to the transfer messages

Change-Id: I5eaf35bc6dba4be615a9d84d98c6a42107031236
Reviewed-by: Andreas Traczyk <3521bc9a3776264f71e79fe2ef5e853676c9b78a@savoirfairelinux.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,f91f1806530d065b90718598fbe2fad426732418,"ALSA: hda: Add Intel NUC5i7RY to the power_save blacklist

Power-saving is causing a humming sound when active on the Intel
NUC5i7RY, add it to the blacklist.

BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=199607
Signed-off-by: Hans de Goede <9fa1be1a5b5729e4c6b404f34c9ce49ff4882fd8@redhat.com>
Signed-off-by: Takashi Iwai <4596b3305151c7ee743192a95d394341e3d3b644@suse.de>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
symfony/http-foundation,dbdf364adcb8b705fd0744f9340b88d3ebe9990f,"Merge branch '2.4'

* 2.4:
  removed unneeded use statements
  [DoctrineBridge] Fixed an issue with DoctrineParserCache
  removed unneeded use statements
  Prepend Child Bundle paths before the parent
  [Routing] add unit tests for Symfony\Component\Routing\RequestContext class
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
facebook/fbthrift,1d923132422f725265e63848cebab8b2856f5275,"Correctly deserialize unions

Summary: Unions cache their data locally, so we need to clear that cache once deserialization occurs (this isn't an issue for structs since they cache on demand, but unions cache on create).

Reviewed By: yfeldblum

Differential Revision: D5584510

fbshipit-source-id: c77b618adb1cd7dabc933ac051597f683cd94b7a
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
CTSRD-CHERI/u-boot,0c79bde479db48d72d9193b179b79fceb4a38b41,"README: Remove CONFIG_SPI_FLASH_MTD help text

Since the help text is added in drivers/mtd/spi/Kconfig

Signed-off-by: Jagan Teki <c35ead695c815afec66007852160c881e0c98fbf@openedev.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
emberjs/ember.js,890fb044a20047119277497b35e255c52c6d1cb7,"[BUGFIX beta] Avoid rerendering outlet state during router destruction.

During each `Ember.Route`'s `willDestroy` we trigger a
`run.once(this.router, '_setOutlets');`. This is so that the routes
views are destroyed properly (by removing them from the outlet state).

During `Ember.Router`'s `willDestroy` we clear
`this._toplevelView` (along with a bunch of other cleanup).

These two things combined can mean that `this._toplevelView` is `null`
when `_setOutlets` is called again (during the `Router`'s destruction).
In that scenario we are actually creating another
`this._toplevelView` and setting up another rendered root (since one
doesn't exist). When this happens the newly created root is never
cleaned up, since the Router's `willDestroy` has already ran and can no
longer clean up after itself.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,49fe879ac6b54d82d26fc21f172244ef32cb86ce,"Add a missing break. Found by PVS-Studio and -Wimplicit-fallthrough.

BUG=324935,177475
NOTRY=true

Review URL: https://codereview.chromium.org/99723003

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@163504 bbb929c8-8fbe-4397-9dbb-9b2b20218538
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
simple-statistics/simple-statistics,dc64a5ca704037dd613cfc08dbe27f68e2dd33c6,"Update dependencies to enable Greenkeeper 🌴 (#196)

* chore(package): update dependencies

https://greenkeeper.io/

* docs(readme): add Greenkeeper badge 

https://greenkeeper.io/

* docs(readme): Move GreenKeeper badge to badge area of README
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
openstenoproject/plover,6590e05a3c280e48f026485238813f5b44920e1a,"Added suspend and resume triggered by hotkeys.

Any dictionary entry of the form {PLOVER:FOO}, where FOO is the
command to execute, will be treated as a hotkey command. Hotkey
commands take up space in the translation buffer, but are otherwise
ignored by the translation pipeline. The supported hotkey commands
are:

SUSPEND - Halts interpretation of the steno data stream, except for
hotkey commands. Only dictionary entries that are hotkey commands are
acted upon. No other dictionary entries will have an effect.

RESUME - Continues the interpretation of the steno data stream. All
dictionary will be interpreted.

TOGGLE - Switch between suspend and resume modes.

CONFIGURE - Bring up the configuration dialog.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
terraform-providers/terraform-provider-aws,42449378fd53bc37eb8d8cd069213f40cdd99293,"data-source/aws_api_gateway_api_key: Add created_date, description, enabled,  last_updated_date, and tags attributes  (#10821)

Output from acceptance testing:

```
--- PASS: TestAccDataSourceAwsApiGatewayApiKey (8.38s)
```",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,8de50dc26278a05363781514beb092a366c84654,"irqchip/stm32: Fix copyright

Uniformize STMicroelectronics copyrights header and add SPDX identifier

CC: Maxime Coquelin <abf7af79b25008a2c9c1572d66f685a2834dde02@gmail.com>
Signed-off-by: Benjamin Gaignard <6ee0a5bd5732730b243a6755a8505d5db9232205@st.com>
Signed-off-by: Thomas Gleixner <00e4cf8f46a57000a44449bf9dd8cbbcc209fd2a@linutronix.de>
Acked-by: Alexandre TORGUE <2def9cba63f53479ee2284c78700c4765096eb7e@st.com>
Acked-by: Maxime Coquelin <abf7af79b25008a2c9c1572d66f685a2834dde02@gmail.com>
Cc: 68c46a606457643eab92053c1c05574abb26f861@lakedaemon.net
Cc: a16cc0c82647c52d401177f8e50567df5499e36c@arm.com
Cc: f99ef57ccac738b558d0fc2e44478b3c5def9522@lists.infradead.org
Link: https://lkml.kernel.org/r/20171130084500.23439-1-6ee0a5bd5732730b243a6755a8505d5db9232205@st.com

",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
wongsyrone/lede-1,734a8c46e7037075d712e3d3844467672d0f91c9,"ramips: remove legacy ethernet driver components for mt7621

The mt7621 subtarget has been switched to DSA quite a while ago and
seems to run sufficiently fine. Build with older kernels than 5.4 has
been disabled directly during the kernel bump, so our local ethernet
driver is unused in master since then.

Therefore, let's remove the mt7621-specific parts of ""our"" ethernet
driver, so we don't have to maintain them and it's obvious to
everybody that they are not used anymore.

This also drops the offloading components as this was specifically
implemented to depend on mt7621.

Signed-off-by: Adrian Schmutzler <98f55d2e88c4f2211f21ce57ad36a0f2c004b614@adrianschmutzler.de>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
frappe/erpnext,44b088c6b3b255469bede0745acaf8a733a84b3a,"[UI Test Salary] To test the salary structure and the salary slip (#10407)

* Test for salary structure and salary slip

* Test for salary structure and salary slip

* Test for salary structure and salary slip

* Travis CI fixes

* Updated

* Updated

* travis fixes

* Travis fixes
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,861c7d14e63d3f33fca3c514242db17589b6b5e4,"For urls Chrome can't handle fallback OpenInChrome to not set package

After creating the intent for OpenInChrome, this resolves it to see
whether Chrome can handle it. If not, falls back to a VIEW intent
instead.

BUG=834427

Change-Id: If39dc930521f78c0bdcd2818b9996694cff57b1c
Reviewed-on: https://chromium-review.googlesource.com/1072166
Reviewed-by: Bernhard Bauer <9d6e3445a4b797475e155e833b6dbdb4b6775446@chromium.org>
Commit-Queue: Yusuf Ozuysal <d3f962758524eff253548720e3053cc6af4b3d27@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#561929}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
samba-team/samba,5ca69148844e2f8940b571aef0812e85e08b7cc5,"tevent: Fix multiple handler on the same fd bug in the tevent select backend.

When we're deciding what handlers to call in the select backend,
we didn't take into account the fact that the same fd may have
been added into the read FD_SET and the write FD_SET but with
different handlers.

We must match on both the file descriptor and the flags requested
before calling the handler.

Signed-off-by: Jeremy Allison <35bfff75a97c98dfccf9f835d7bbf4ab7904e719@samba.org>
Reviewed-by: Stefan Metzmacher <f1988b9e977fc98ae4b41148d1c7fe6accb829c3@samba.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,4d23b4925ffd17d976334265c03661cb2336fb52,"exo: Handle cursor scale changes properly with HW cursor.

This makes sure we update the cursor when scale has changed.

BUG=b/31798695, b/30654503

Review-Url: https://codereview.chromium.org/2668873004
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#447568}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
rpm-software-management/dnf,326cd2f2bb85fb0e3c51b343ea9e28be90bf5257,"2006-08-09 10:40  lmacken

    * yum/update_md.py:
    Rewrite to handle new metadata schema.
    Allow scripted metadata access.
    Accept YumRepository objects in add().
    Cache notices for quick searching

    * yum-updatesd.py:
     Remove (most of) the old metadata retrieval code.
     Try and grab the update 'type' from the metadata so we can check if we
     are dealing with any security updates.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,aa977f62dff4fb41e89b473c9831c292c01d8bfc,"omapdss: extend pm notifier to handle hibernation

Add handling of missed events in omap_dss_pm_notif which are
needed to support hibernation (suspend to disk).

Signed-off-by: Grygorii Strashko <a97c251e6388fcaee425e25c6e5fa7c790efaa36@linaro.org>
Signed-off-by: Tomi Valkeinen <e1ca4dbb8be1acaf20734fecd2da10ed1d46a9bb@ti.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
SimpleITK/SimpleITK,523da38ac7bfcfe87b7798d42c069acd7ebda681,"Updating the documentation of the FilterProgressReporting example.

The documentation is a duplicate of the Doxygen page with some minor
modifications. The doxygen markup is also used in the sphinx
documentation. Before we can remove the doxygen page we need to
figure out how to link between the doxygen generated pages to the
sphinx generated pages on readthedocs. There are references from some
classes to the documentation in the sphinx/doxygen example page.

Change-Id: Ic15f4e6f51f3079a4ade058bfe4003fccbe1f599
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
libssh2/libssh2,79f48e48813322d12edbfb7ccb90649e616f54c6,"gettimeofday: fix name space pollution

For systems without its own gettimeofday() implementation, we still must
not provide one outside our namespace.

Reported by: Bill Segall
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
kubernetes/autoscaler,be88af64d4f62213a99328c1e8276a506a381d06,"cluster-autoscaler: Add ca-certificates to the docker image

This commit is manually tested by running `TAG=mytag REGISTRY=mydockerrepo make release` and running it inside author's k8s cluster

Resolves #38
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
yiisoft/yii2,b641c1f41be2a589e0144fc2cf10d784fb53e46e,"Enh Dependency getHasChanged (#12928)

* - rename getHasChanged() to isChanged()
- updated docs
- added tests for Dependency
- added useful helpers for inaccessible properties to TestCase

",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
Martii/UserScripts,200236ca359c6a450b40ba56959fc32f2ca950c4,"114843.547031 uso - Monkey Barrel [0.1.3](/scripts/diff/114843/547031)

- Rearranged some code to make #posts-lasts a bit faster and cleaner esp. in history
- Misc CSS tweaks
- NEW FEATURE: Add last post links to Recent Topics
Default to on... toggle in GMC Preferences.

... hope everyone enjoys :)

114843.547031

SHA1:ce75448d9bd60012f8446bdd9811ea6b022f77c3
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
Subsurface-divelog/subsurface,6ce5704435a761aeb7a8b7cb7bc9049ed3ee4ac9,"Support imperial measurements in dive planner / add dive

This was not as hard as I assumed it would be. I may still change the
horizontal dimension to be the more logical seconds instead of minutes,
but for now this achieves the main goal.

Signed-off-by: Dirk Hohndel <a00b27378a09822d5638cdfb8c2e7ccc36d74c56@hohndel.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
alphagov/smart-answers,92cc0bb8d077f454ce48c6df89956b5161a26685,"Question 20: Replace Yes/No with tax credits

As part of the accessibility improvements, we have been ask to replace
the Yes/No in question 20 (i.e tax_credits_currently_claiming?) with
tax credit benefits. These are already listed above the options.

The idea here, is to assist devices like screen reader etc, to better
recognise the tax credit benefits.

When a user selects at least an tax credit benefits they would be sent
to the ""tax_credits_eea_entitled"" outcome and when none are select and
the next steps button is triggered the user is shown the ""tax credits
unlikely"" outcome.

This commit contains implementation and tests that achieves & describe
the aforementioned scenario.

Regression test artefacts have been affected by these changes they will
be added in the next commit.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
metasfresh/metasfresh,abe7704816b032b99bba8b77ff40eeb5122d82ed,"solve bug in parameter evaluation with NULL

Note: the problem was introduced in 34c694fda531ecf15fe890c60e140aa902d730ec
docs_flatrate_term_all_procurements_conditions_report fails if M_Product_ID is left empty #3694
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
2gis/nuclear-river-validation-rules,3b46aa6a4cf5438d25f52a83bb892d112b3e799b,"Оптимизировал пересчёт фактов

update вызывается только на те факты,
в которых изменилось хотя бы одно поле.

соответственно, неизменившиеся факты не создают событий.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
mapbox/node-sqlite3,e370b9c60f4f9a05fd900bdd0df78e6f32ca9588,"attempt ldd

This commit also erases `sudo apt-get update --fix-missing` introduced in one of the previous commits, because it didn't help.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,87e165d66a06abe6f4cfeb6b5e575c3215ea2b0e,"Base: Add BASE_API to PR_ParseTimeString (for base.dll)

BUG=76996
TEST=none
Review URL: http://codereview.chromium.org/6683065

git-svn-id: de016e52bd170d2d4f2344f9bf92d50478b649e0@79760 0039d316-1c4b-4281-b951-d872f2087c98
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
facebookexperimental/eden,24502a149cdb19af9fd35fb5a5e9e7fb2e3a3bcf,"sslutil: always use SSLContext

Now that we have a fake SSLContext instance, we can unify the code
paths for wrapping sockets to always use the SSLContext APIs.

Because this is security code, I've retained the try..except to
make the diff easier to read. It will be removed in the next patch.

I took the liberty of updating the inline docs about supported
protocols and how the constants work because this stuff is important
and needs to be explicitly documented.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
vinriviere/m68k-atari-mint-binutils-gdb,414c838a722efedb0f787b64629db13d88c9ef7c,"Simplify i386, amd64 and x32 expedite registers

Nowadays, there are a lot of duplication about
i386/{i386, amd64, x32}*-expedite in features/Makefile.  However,
in features/Makefile, we have

 echo ""expedite:$(if $($*-expedite),$($*-expedite),$($(firstword $(subst -, ,$(notdir $*)))-expedite))"" \
	  >> $(outdir)/$*.tmp

which means for a given bar/foo-baz.xml, we'll look for either
bar/foo-baz-expedite or foo-expedite.  In x86 expedite registers, we
use the former now, but it will be much simpler if we use the latter.
This is what this patch does.  This patch removes them, and defines
three generic expedite.  Re-run 'make GDB=/path/build/gdb all' to
regenerate regformats/*.dat files, and they are not changed.

gdb:

2016-10-05  Yao Qi  <yao.qi@linaro.org>

	* features/Makefile: Remove i386/*-expedite. Add i386-expedite,
	amd64-expedite, and x32-expedite.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
JetBrains/intellij-community,850ba2a48402f1fee5053f109ccf8d79cb3f0d66,"diff: better painting for fragmented diff

add \n at the end of fake document, if it is not the end of original document

Thus we expand background highlighting till the end of line
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
openstack/openstack-manuals,149fa4b2de503adc42f9a2dded8ca24faefbc14e,"Update title of Compute API v2 book to remove ""and Extensions""

Make all API Reference titles consistent

Change-Id: I9efa74bcecc3251b7e3e046b583e6f27b8289118
Author: Diane Fleming <74b5c707682eb3691857bb45094f8aaf22a82a5d@austin.rr.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
projectcalico/calico,9c07984a62ced416f87e70f943af158fd623b220,"Add v3.11 docs directories (#3073)

* Add v3.11 docs directories

* Update autogen'd gen_values for 3.11

* Update release docs instructions
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
qtproject/qtqa-gerrit,0056ef4a7a5e82e39d35a546d913c713741816f9,"Gerrit 2.3 ReleaseNotes

Amend the release notes. Nit by Antoine fixed.

Expands on capability topics and adds example roles.

Change-Id: I85cfc5bde205592b1d089e75ae7cc82f75d0a123
Signed-off-by: Fredrik Luthander <6ab76981acdc1b77ec1ba5e91464705b755e91f5@sonymobile.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tsujan/FeatherPad,151236e69a95c17c2d00dc6d77be119d43de6aa6,"Add a help file translated into Japanese.(help_ja_JP) (#218)

* Add Japanese translation (featherpad_ja_JP.ts)

* Add description of Japanese (featherpad.desktop)

* Add a help file translated into Japanese.(help_ja_JP)
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
netty/netty,7b946a781e9ed78d9283f7907aeb4b8471dc9a3a,"Make sure we always flush window update frames in AbstractHttp2StreamChannel (#10075)

Motivation:

Under certain read patters the AbstractHttp2StreamChannel can fail to
flush, resulting in flow window starvation.

Modifications:

- Ensure we flush if we exit the `doBeginRead()` method.
- Account for the Http2FrameCodec always synchronously finishing writes
  of window update frames.

Result:

Fixes #10072",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,ebdcbd728f18d5a84fc02633e360ecf550dd5e3f,"[Printing] Sort out Once and Repeating callbacks in chrome/browser/printing/cloud_print/

Refactor to |base::OnceCallback| where possible.
Leave as is if depends on API that should be updated.

Bug: 968109
Change-Id: I19edf06451ffb2aebd511c49785f0e322e08128f
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1648180
Reviewed-by: Rebekah Potter <d3fa462b5af7bedecb31c9641c08373f0b7e8c42@chromium.org>
Commit-Queue: Lei Zhang <79648d9aca10df37c1b962af0b65ebfac3e19883@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#671795}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
htcondor/htcondor,ee94e3faaaad06869bc13dde0b19a26a95599ee7,"Initial code for ssh keypair two-phase commit for OpenStack. #3682

OpenStack doesn't properly support the client token instance property to
do idempotent calls to RunInstances. We currently rely on that to avoid
double-submiting jobs when a failure occurs. Thus, we need to
re-introduce the use of the ssh keypair as an optional way to check if
an instance was submitted after a failure.

Some issures remain to be sorted out:
Right now, the job attribut IsOpenStack must be set to true and the user
can't provide an existing ssh keypair for this to work properly.
Matching instances to EC2Jobs by ssh keypair needs to be optimized.
If the EC2_VM_START command returns NEED_CHECK_VM_START, we need to
handle that differently for OpenStack.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,79b80d6a95a2a6e61200c0024755334376575be1,"Revert of Roll src/native_client/ cad577667..257dd7be6 (1 commit). (patchset #1 id:1 of https://codereview.chromium.org/1666783002/ )

Reason for revert:
Breaking the build on Win Builder and Win x64 Builder (dbg)

FAILED: C:\b\depot_tools\python276_bin\python.exe gyp-win-tool action-wrapper environment.x64 ppapi_tests_extensions_no_socket_permissions_target_build_newlib_x86_64_nexe_ff49b755b038c2b39cc59644a35b7542..rsp ..\..\ppapi\tests\extensions
Assembler messages:

Fatal error: can't create ../../../out/Debug_x64/obj/ppapi/tests/extensions/ppapi_tests_extensions_no_socket_permissions.gen/newlib-x86-64/ppapi_tests_extensions_no_socket_permissions/test_no_socket_permissions_d6663889.o: No such file or directory

x86_64-nacl-clang++.exe: error: assembler command failed with exit code 1 (use -v to see invocation)

FAILED with 1: ..\..\..\native_client\toolchain\win_x86\pnacl_newlib\bin\x86_64-nacl-clang++ -c no_socket_permissions/test_no_socket_permissions.cc -o ..\..\..\out\Debug_x64\obj\ppapi\tests\extensions\ppapi_tests_extensions_no_socket_permissions.gen/newlib-x86-64/ppapi_tests_extensions_no_socket_permissions\test_no_socket_permissions_d6663889.o -MD -MF ..\..\..\out\Debug_x64\obj\ppapi\tests\extensions\ppapi_tests_extensions_no_socket_permissions.gen/newlib-x86-64/ppapi_tests_extensions_no_socket_permissions\test_no_socket_permissions_d6663889.o.d -m64 -O2 -g -Wall -fdiagnostics-show-option -Werror -D__STDC_LIMIT_MACROS=1 -D__STDC_FORMAT_MACROS=1 -D_GNU_SOURCE=1 -D_POSIX_C_SOURCE=199506 -D_XOPEN_SOURCE=600 -DDYNAMIC_ANNOTATIONS_ENABLED=1 -DDYNAMIC_ANNOTATIONS_PREFIX=NACL_ -DV8_DEPRECATION_WARNINGS -DCLD_VERSION=2 -DNOMINMAX -DPSAPI_VERSION=1 -D_CRT_RAND_S -DCERT_CHAIN_PARA_HAS_EXTRA_FIELDS -D_ATL_NO_OPENGL -D_SECURE_ATL -D_HAS_EXCEPTIONS=0 -D_WINSOCK_DEPRECATED_NO_WARNINGS -DCHROMIUM_BUILD -DCR_CLANG_REVISION=259395-1 -DUSE_AURA=1 -DUSE_DEFAULT_RENDER_THEME=1 -DUSE_LIBJPEG_TURBO=1 -DENABLE_ONE_CLICK_SIGNIN -DENABLE_WEBRTC=1 -DENABLE_MEDIA_ROUTER=1 -DENABLE_PEPPER_CDMS -DENABLE_CONFIGURATION_POLICY -DENABLE_NOTIFICATIONS -DENABLE_HIDPI=1 -DENABLE_TOPCHROME_MD=1 -DDONT_EMBED_BUILD_METADATA -DFIELDTRIAL_TESTING_ENABLED -DNO_TCMALLOC -D__STD_C -D_CRT_SECURE_NO_DEPRECATE -D_SCL_SECURE_NO_DEPRECATE -DNTDDI_VERSION=0x0A000000 -D_USING_V110_SDK71_ -DENABLE_TASK_MANAGER=1 -DENABLE_EXTENSIONS=1 -DENABLE_PDF=1 -DENABLE_PLUGIN_INSTALLATION=1 -DENABLE_PLUGINS=1 -DENABLE_SESSION_SERVICE=1 -DENABLE_THEMES=1 -DENABLE_AUTOFILL_DIALOG=1 -DENABLE_BACKGROUND=1 -DENABLE_PRINTING=1 -DENABLE_BASIC_PRINTING=1 -DENABLE_PRINT_PREVIEW=1 -DENABLE_SPELLCHECK=1 -DENABLE_CAPTIVE_PORTAL_DETECTION=1 -DENABLE_APP_LIST=1 -DENABLE_SETTINGS_APP=1 -DENABLE_SUPERVISED_USERS=1 -DENABLE_MDNS=1 -DENABLE_SERVICE_DISCOVERY=1 -DV8_USE_EXTERNAL_STARTUP_DATA -DFULL_SAFE_BROWSING -DSAFE_BROWSING_CSD -DSAFE_BROWSING_DB_LOCAL -DUSE_LIBPCI=1 -DUSE_OPENSSL=1 -DUSE_OPENSSL_CERTS=1 -D_CRT_NONSTDC_NO_WARNINGS -D_CRT_NONSTDC_NO_DEPRECATE -DNACL_WINDOWS=0 -DNACL_OSX=0 -DNACL_LINUX=0 -DNACL_ANDROID=0 -DNACL_BUILD_ARCH=x86 -DNACL_BUILD_SUBARCH=64 -I..\..\..\out\Debug_x64/gen/tc_newlib/include -I../../.. -I..\..\..\out\Debug_x64/gen -I../../../third_party/wtl/include -std=gnu++0x -Wno-deprecated-register

Compile options: ['-m64', '-O2', '-g', '-Wall', '-fdiagnostics-show-option', '-Werror', '-D__STDC_LIMIT_MACROS=1', '-D__STDC_FORMAT_MACROS=1', '-D_GNU_SOURCE=1', '-D_POSIX_C_SOURCE=199506', '-D_XOPEN_SOURCE=600', '-DDYNAMIC_ANNOTATIONS_ENABLED=1', '-DDYNAMIC_ANNOTATIONS_PREFIX=NACL_', '-DV8_DEPRECATION_WARNINGS', '-DCLD_VERSION=2', '-DNOMINMAX', '-DPSAPI_VERSION=1', '-D_CRT_RAND_S', '-DCERT_CHAIN_PARA_HAS_EXTRA_FIELDS', '-D_ATL_NO_OPENGL', '-D_SECURE_ATL', '-D_HAS_EXCEPTIONS=0', '-D_WINSOCK_DEPRECATED_NO_WARNINGS', '-DCHROMIUM_BUILD', '-DCR_CLANG_REVISION=259395-1', '-DUSE_AURA=1', '-DUSE_DEFAULT_RENDER_THEME=1', '-DUSE_LIBJPEG_TURBO=1', '-DENABLE_ONE_CLICK_SIGNIN', '-DENABLE_WEBRTC=1', '-DENABLE_MEDIA_ROUTER=1', '-DENABLE_PEPPER_CDMS', '-DENABLE_CONFIGURATION_POLICY', '-DENABLE_NOTIFICATIONS', '-DENABLE_HIDPI=1', '-DENABLE_TOPCHROME_MD=1', '-DDONT_EMBED_BUILD_METADATA', '-DFIELDTRIAL_TESTING_ENABLED', '-DNO_TCMALLOC', '-D__STD_C', '-D_CRT_SECURE_NO_DEPRECATE', '-D_SCL_SECURE_NO_DEPRECATE', '-DNTDDI_VERSION=0x0A000000', '-D_USING_V110_SDK71_', '-DENABLE_TASK_MANAGER=1', '-DENABLE_EXTENSIONS=1', '-DENABLE_PDF=1', '-DENABLE_PLUGIN_INSTALLATION=1', '-DENABLE_PLUGINS=1', '-DENABLE_SESSION_SERVICE=1', '-DENABLE_THEMES=1', '-DENABLE_AUTOFILL_DIALOG=1', '-DENABLE_BACKGROUND=1', '-DENABLE_PRINTING=1', '-DENABLE_BASIC_PRINTING=1', '-DENABLE_PRINT_PREVIEW=1', '-DENABLE_SPELLCHECK=1', '-DENABLE_CAPTIVE_PORTAL_DETECTION=1', '-DENABLE_APP_LIST=1', '-DENABLE_SETTINGS_APP=1', '-DENABLE_SUPERVISED_USERS=1', '-DENABLE_MDNS=1', '-DENABLE_SERVICE_DISCOVERY=1', '-DV8_USE_EXTERNAL_STARTUP_DATA', '-DFULL_SAFE_BROWSING', '-DSAFE_BROWSING_CSD', '-DSAFE_BROWSING_DB_LOCAL', '-DUSE_LIBPCI=1', '-DUSE_OPENSSL=1', '-DUSE_OPENSSL_CERTS=1', '-D_CRT_NONSTDC_NO_WARNINGS', '-D_CRT_NONSTDC_NO_DEPRECATE', '-DNACL_WINDOWS=0', '-DNACL_OSX=0', '-DNACL_LINUX=0', '-DNACL_ANDROID=0', '-DNACL_BUILD_ARCH=x86', '-DNACL_BUILD_SUBARCH=64', '-I..\\..\\..\\out\\Debug_x64/gen/tc_newlib/include', '-I../../..', '-I..\\..\\..\\out\\Debug_x64/gen', '-I../../../third_party/wtl/include']

Linker options: ['-B..\\..\\..\\out\\Debug_x64/gen/tc_newlib/lib64', '-L..\\..\\..\\out\\Debug_x64/gen/tc_newlib/lib64', '-lppapi_cpp', '-lppapi', '-pthread']

Skipping unknown type  for .

Original issue's description:
> Roll src/native_client/ cad577667..257dd7be6 (1 commit).
>
> https://chromium.googlesource.com/native_client/src/native_client.git/+log/cad577667eab..257dd7be61b0
>
> $ git log cad577667..257dd7be6 --date=short --no-merges --format='%ad %ae %s'
> 2016-02-03 sbc untrusted.gypi: default to nacl-clang for newlib builds
>
> CQ_INCLUDE_TRYBOTS=tryserver.chromium.linux:linux_chromium_dbg_32_ng,linux_nacl_sdk_build
> TBR=mseaborn@chromium.org
>
> Committed: https://crrev.com/b6be59a64a5a4d051ae7f61cb67f39b635ddb317
> Cr-Commit-Position: refs/heads/master@{#373345}

TBR=mseaborn@chromium.org,nacl-deps-roller@chromium.org
# Skipping CQ checks because original CL landed less than 1 days ago.
NOPRESUBMIT=true
NOTREECHECKS=true
NOTRY=true

Review URL: https://codereview.chromium.org/1664983002

Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#373353}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
wongsyrone/lede-1,9cca6c5ad90330115ad3e550abf515c029e931fa,"Previously, all VLANs (port-based or 802.1q) were sharing a single database in the ATU. This created problems in the case of a system where two ports/devices share a MAC address (e.g. Linksys WRT1900AC eth0/eth1).

This also clears any bootloader-set FDB defaults. This had
caused issues creating port-based VLANs when mappings
overlapped previous VLANs. Packets destined to a port
not in the default port group flooded all ports.

Tested on a 88E6171 (Linksys EA4500) and 88E6172 ('1900AC)

Signed-off-by: Claudio Leite <leitec@staticky.com>
Signed-off-by: Imre Kaloz <kaloz@openwrt.org>

SVN-Revision: 46699
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,4c8d782a522f266295dc324bf266049664c65f13,"webkitpy: clean up actually getting crash logs from DRT/WTR crashes
https://bugs.webkit.org/show_bug.cgi?id=81603

Unreviewed rolling out r111609 and part of r111615,
because it broke NRWT on Qt-WK2 platform.

* Scripts/webkitpy/layout_tests/controllers/single_test_runner.py:
(SingleTestRunner._handle_error):
* Scripts/webkitpy/layout_tests/controllers/test_result_writer.py:
(write_test_result):
(TestResultWriter.write_crash_report):
* Scripts/webkitpy/layout_tests/port/base.py:
(Port.is_crash_reporter):
(Port._driver_class):
* Scripts/webkitpy/layout_tests/port/chromium.py:
(ChromiumDriver.run_test):
* Scripts/webkitpy/layout_tests/port/chromium_unittest.py:
(ChromiumDriverTest.test_crashed_process_name):
* Scripts/webkitpy/layout_tests/port/driver.py:
(DriverOutput.__init__):
* Scripts/webkitpy/layout_tests/port/mac.py:
(MacPort):
(MacPort.is_crash_reporter):
(MacPort.release_http_lock):
* Scripts/webkitpy/layout_tests/port/test.py:
(TestDriver.run_test):
* Scripts/webkitpy/layout_tests/port/webkit.py:
(WebKitDriver.__init__):
(WebKitDriver._start):
(WebKitDriver.has_crashed):
(WebKitDriver._check_for_driver_crash):
(WebKitDriver.run_test):

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@111661 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
urho3d/Urho3D,5e65eee41e9a551489fbe80c856aab6ecb44ee32,"Travis CI: API documentation update at 2016-03-29 17:43:44 UTC.
[ci package]

Commit: https://github.com/urho3d/Urho3D/commit/5246f749849cd3dbce2871a27f0fd8b9483f7d78

Message: Merge remote-tracking branch 'hdunderscore/input_mousemode_update'
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
DIRACGrid/DIRAC,d56569eada18884faa88fcfded70587acb7c835b,"Store in DB on setup

Modified ComponentInstaller to add entries to the InstalledComponents DB
for services, agents and executors installed during the setup process.",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
wikimedia/parsoid,00e5c9dadbb0bfb0a4dc2b8f1dd1d7d8d5e91db9,"Effectively revert 50056f6

That doesn't seem like it was the right fix, since it tokenizes the
newline as a string instead of a NlTk.  We've likely fixed the original
bug in other ways since the output is improved with this revert.

The test ""Parsoid: Don't paragraph-wrap fosterable content"" is removed
since, contrary to what it says, we do p-wrap fosterable content and the
mixed table syntax isn't supported in the php parser.

One of the newly blacklisted selser tests is a false positive, selser is
more accurate.  The other is a case where selser is unnecessarily
preserving a trailing whitespace in a table cell based on the heuristics
added in bd5a840.

Change-Id: I0b5b2366ae0c7ceddbcda04e32a018c4fbe0894d
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
juju/juju,788972f2788dd8346e97896ba1031bbfc7818600,"Openstack can use constraints

This branch removes the manadtory requirement to specify and image id and flavor
name when using juju with openstack. These config items can still be specified and
will be used as a fallback if required, but now the expected workflow is to use
contraints just like for ec2 to determine what type and size of instance to run.

The bulk of the business logic is moved from environs.ec2 up to environs, and this is
now shared between ec2 and openstack. Each of these providers provide a bit of specific
glue logic to tie it all together. ec2 uses hard coded instance type, openstack queries
the available flavors and uses information from there.

ec2 looks to files located at http://cloud-images.ubuntu.com to see what the available
instances are by looking in metadata files. openstack clouds don't have this luxury 
so the implementation in this branch allows for the instance metadata files to be placed
in the private or public storage. The private storage takes precedence. The files live
under a directory structure named like so:
series-image-metadata/<series>/server/released.current.txt 
This mimics the layout on cloud-images (with a differently named top level directory). 

The next branch will remove the hard coded instance id and flavor name from the live
openstack tests as these are now no longer required.

R=jameinel, dimitern, fwereade, dfc
CC=
https://codereview.appspot.com/8816045
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
squid-cache/squid,f7c5a63628cbe8aac60adb8250f29623bbca232c,"Do not let cache manager requests kill SMP Squid using isOpen() assertion.

As the comment above the close call implies, we have not imported the foreign
socket descriptor into our fd_table yet. We must use raw close(2), just like
the corresponding Mgr::Request::Request(msg) code that allocates request.conn,
uses raw assignment to give that half-baked connection a descriptor.

TODO: This direct manipulation of Connection::fd is ugly, and this half-baked
connection will most likely cause more [hidden] problems down the road. For
example, Mgr::Request destructor will assert in a similar way if the request
object is destroyed before Action::respond() is called.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,d5b240924739774cba34f9bdfee6b6366fb62a6d,"2011-05-23  Yury Semikhatsky  <yurys@chromium.org>

        Reviewed by Adam Barth.

        Chromium DevTools: Tab crashes with ""Aw, snap!"" on entering ""(new Image())."" in console
        https://bugs.webkit.org/show_bug.cgi?id=61194

        * inspector/console/console-eval-syntax-error-expected.txt: Added.
        * inspector/console/console-eval-syntax-error.html: Added.
        * platform/chromium/inspector/console/console-eval-syntax-error-expected.txt: Added.
2011-05-23  Yury Semikhatsky  <yurys@chromium.org>

        Reviewed by Adam Barth.

        Chromium DevTools: Tab crashes with ""Aw, snap!"" on entering ""(new Image())."" in console
        https://bugs.webkit.org/show_bug.cgi?id=61194

        Test: inspector/console/console-eval-syntax-error.html

        * bindings/v8/custom/V8InjectedScriptHostCustom.cpp:
        (WebCore::V8InjectedScriptHost::evaluateCallback): return immediately in case of syntax error

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@87145 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
samba-team/samba,b0f22f2661f5712ac00cf221e734b99e8d5d04fa,"selftest: reindex in dbcheck-oldrelease after modifying the backend DB

Modifying the backend DB is not a supported operation, but helps us create test
situations.

Signed-off-by: Andrew Bartlett <9503ccf2b9baea7c4d590fbd562f8b0a297738eb@samba.org>
Reviewed-by: Garming Sam <95d1856ad7e7e0b74b122929c1f1e47d287c99a8@catalyst.net.nz>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
WeblateOrg/weblate,a2166ca6551b322007b6402fa86136b5823c9a8e,"Make the Save / Suggest buttons always present

- this way the UI is more consistent
- they are disabled if user does not have permission
- the tooltip indicates why it is disabled

Signed-off-by: Michal Čihař <a2df1e659c9fd2578de0a26565357cb273292eeb@cihar.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
ocaml/merlin,b5763c38fbe114f012b0d8284f03c9d58ec17950,"Fixing #29: Prevent storing ""Done"" chunks.

Those are only locally meaningful to indicate we reached end-of-buffer,
but storing these in history just add useless complexity and ambiguity.

Previous commit broke rollback_01 test. All tests are ok now.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,b967368ab58b2917e73a6062497caf23d42d65c7,"REGRESSION(r132291): Crash in BaseMultipleFieldsDateAndTimeInputType
https://bugs.webkit.org/show_bug.cgi?id=100326

Reviewed by Eric Seidel.

Source/WebCore:

Test: fast/forms/time-multiple-fields/time-multiple-fields-change-type.html

* html/BaseMultipleFieldsDateAndTimeInputType.cpp:
(WebCore::BaseMultipleFieldsDateAndTimeInputType::destroyShadowSubtree):
We need to disconnect m_spinButtonElement before destructing the UA shadow tree.

LayoutTests:

* fast/forms/time-multiple-fields/time-multiple-fields-change-type-expected.txt: Added.
* fast/forms/time-multiple-fields/time-multiple-fields-change-type.html: Added.


git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@132451 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
cea-hpc/modules,3b417daae589a99b6c749fe5d6e16ef7a6030206,"Always dictionary-sort list of modules or collections

Dictionary sort of Tcl enables to determine that a version 1.10 is
greater that a version 1.8, for instance. This useful kind of sort was
in use in modules-tcl previously but not for every sort. For instance
load command was correctly able to find the greatest version of a module
whereas avail and whatis commands did not sort existing versions
accordingly.

This patch applies the dictionary sort everywhere to ensure the exact
same sort is applied everywhere. Dictionary sort appears to be the most
appropriate kind of sort to work with software versions. So the
sort_order argument of listModules procedure is removed to always get
the same sort applied. Also a stringDictionaryCompare procedure is added
in order to compare two strings with dictionary-sort (useful to know
what string is greater than the other).

In addition, modules.91-sort testsuite is introduced to guaranty that
avail, whatis and load commands behave appropriately regarding sort.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,16a304d8297245e4bc0e863395b8fea593d81e09,"ARM: dts: Add RSKRZA1 DT bindings documentation

Add RSKRZA1 Device tree bindings Documentation, listing it as a supported
board.

This allows to use checkpatch to validate DTSes referring to the RSKRZA1
board.

Signed-off-by: Chris Brandt <af8de1d48a9c4ccb4053f066aa122372ba2d662f@renesas.com>
Reviewed-by: Geert Uytterhoeven <a1ff81395f7e6bf5b509fe9aab06bf3419493e1d@glider.be>
Signed-off-by: Simon Horman <9662bddcc379be37df16f02a449c344b4718c1a1@verge.net.au>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
openwrt/packages,73b7f55424de52d8179a9ad808252fe3bf8dcc9d,"python: avoid use of HOST_BUILD_PREFIX

Currently, the python-host.mk framework relies on HOST_BUILD_PREFIX to
refer to the $(STAGING_DIR)/host directory but using the HOST_BUILD_PREFIX
variable requires the use of include/host-build.mk which in turn includes
python-host.mk, leading to target redefinition errors.

In order to provide a global, uniform way to refer to the host staging
directory, LEDE introduced a new variable STAGING_DIR_HOSTPKG which points
to $(STAGING_DIR)/host for now with the purpose of eventually being able to
relocate that directory in the future.

This commit changes python-host.mk to ...
 - stop including include/host-build.mk (revert of #3423)
 - replace usages of $(HOST_BUILD_PREFIX) with $(STAGING_DIR_HOSTPKG)
 - warn and fallback to $(STAGING_DIR)/host if STAGING_DIR_HOSTPKG is
   unavailable

The fallback code will ensure that the python host build infrastructure
continues to work properly on older OpenWrt and LEDE versions until the
STAGING_DIR_HOSTPKG is fully settled in and can be removed some time
in the future.

Signed-off-by: Jo-Philipp Wich <bd73d35759d75cc215150d1bbc94f1b1078bee01@mein.io>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
GoogleCloudPlatform/cloud-build-notifiers,ec9ee404ad8f3337298a5193500c81333a02cdbd,"Change notifier config `apiVersion` to `cloud-build-notifiers/v1alpha1` and add validation. (#5)

* Migrate example YAMLs to have correct apiVersion.

* Restrict Config `apiVersion` to version(s) listed in lib/notifiers.",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
noironetworks/aci-containers,013372e477a8fe4a7d3b737759101350f2782e0f,"CSCvi20583 Changing TagInst to TagAnnotation

APIC version 3.2 introduced tagAnnotation for scalability reasons.
With this change:
1) Upon ACC start, in very initial stage, APIC will be queried to get current version and based on the version it determines whether to use tagInst or tagAnnotation.
2) While APIC is running with >=3.2, if ACC is upgraded, all the subscriptions will move on to use tagAnnotation. Also, existing tagInst will get removed as part of fullSync/Reconcile logic.
3) While APIC is running with <=3.1, if ACC is upgraded, there shouldn't be any change and ACC shall continue to use tagInst.
3) If APIC is downgraded from >=3.2 to <=3.1, ACC will exit and K8S will restart the container after which things will fall in place.

Testing:
1) Verified the behavior of moving over to tagAnnotation and removal of tagInst by updating ACC.
2) Triggered os.Exit based on websocket connection failure to make sure os.Exit will cause container to exit and K8S restarting it back.
3) Upon each APIC connection restart, ACC fetches the version compares it against CachedVersion to determine whether to restart ACC.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
ansible/ansible,afa3206205a49cd08d0adae628cd9be8d27f8145,"Make vm_username and vm_password required params

vm_username and vm_password are required parameters in
vmware_vm_shell. Fix adds changes to documentation as well.

Fixes: #28266

Signed-off-by: Abhijeet Kasurde <6334fd0c217b1f2a15926284df229acde5b4fc3a@redhat.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
SAP/openui5,b0a75c1aa2b6aed58a16e959f32715cc612ebc36,"[INTERNAL] sap.ui.model.odata.type.Currency|Unit: support ignoring messages for parts

http://localhost:8080/testsuite/test-resources/sap/ui/core/qunit/internal/1RingModels.qunit.html?hidepassed

http://localhost:8080/testsuite/test-resources/sap/ui/core/qunit/internal/1Ring.qunit.html?sap-ui-language=en-US&sap-ui-debug=true&realOData=true

PS1: Updated JSDoc
PS2: PP SSC, SBE: ODataModel.integration.qunit + POC
PS3: PP SSC, SBE: POC: implement getPartsIgnoringMessages at UnitMixin
PS4: PP SSC, SBE: fixed caching issue for code lists in integration test
     by moving new feature tests into existing tests
PS5: TDD done
PS6: removed TODO comment
PS7-10: review comments
PS11: rebased

Change-Id: Ic088f6e886e9203a6cd6cf30878caf9a19037a3f
JIRA: CPOUI5MODELS-302

",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
StackStorm/st2,928f6cf44f4096ebcd52624e01739b55b36eda8f,"Rename timers Q

* This avoid having to deal with Q upgrade since the same Q will have
  different durablity property.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,fbc369321ea0cd33f00e76baaef4dd6d4cbed082,"Revert 182318 - Broke linux build: http://build.chromium.org/p/chromium.memory/builders/Linux%20ASAN%20Builder/builds/18695/steps/compile/logs/stdio
> ExtensionInstallDialog should create the accept button if it requested in prompt.GetDialogButtons().
> 
> BUG=175897
> TEST=NONE
> 
> Review URL: https://chromiumcodereview.appspot.com/12208144

TBR=ncj674@motorola.com
Review URL: https://codereview.chromium.org/12207163

git-svn-id: de016e52bd170d2d4f2344f9bf92d50478b649e0@182322 0039d316-1c4b-4281-b951-d872f2087c98
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
CTSRD-CHERI/u-boot,572045b6e7dd510999e9649c0d94fead1b29f1b7,"rockchip: dts: rk3399-puma: Add DDR3-1600 timings and use for Puma

With the validation done for DDR3-1600 (i.e. 800 MHz bus clock), we
add the timings (rk3399-sdram-ddr3-1600.dtsi) and change rk3399-puma.dts
to use these by default.

Signed-off-by: Philipp Tomsich <16b450d03fd5fb9ae9cd9b00b81d3f9ed09da059@theobroma-systems.com>
Acked-by: Simon Glass <c00b0378376498bd9cd974c388df8854c0131d27@chromium.org>
Drop blank line at end of file:
Signed-off-by: Simon Glass <c00b0378376498bd9cd974c388df8854c0131d27@chromium.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
candlepin/subscription-manager,9861e238b8c63e104efec6b236b2686073528204,"Updating strings from zanata

Note: This commit is a snapshot of the strings before pushing
the ja_JP po fix for BZ 828042,828068 to zanata.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
ansible/ansible,4a73390823bfe0f1bc6c1a548bb77e9af07e4673,"shared argument spec for FreeIPA (#28950)

Adds unified argument spec and documentation updates for FreeIPA modules.

Signed-off-by: Abhijeet Kasurde <6334fd0c217b1f2a15926284df229acde5b4fc3a@redhat.com>",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,0720a06a7518c9d0c0125bd5d1f3b6264c55c3dd,"NLS: improve UTF8 -> UTF16 string conversion routine

The utf8s_to_utf16s conversion routine needs to be improved.  Unlike
its utf16s_to_utf8s sibling, it doesn't accept arguments specifying
the maximum length of the output buffer or the endianness of its
16-bit output.

This patch (as1501) adds the two missing arguments, and adjusts the
only two places in the kernel where the function is called.  A
follow-on patch will add a third caller that does utilize the new
capabilities.

The two conversion routines are still annoyingly inconsistent in the
way they handle invalid byte combinations.  But that's a subject for a
different patch.

Signed-off-by: Alan Stern <75ea6bb7bfc1186f92d26164de5f9268c9a45b59@rowland.harvard.edu>
CC: Clemens Ladisch <9f57ef5ff1095f40b1ee8b7caa363908baef59d7@ladisch.de>
Signed-off-by: Greg Kroah-Hartman <4645f7897fd33786a2ee1264d590b3c400559d85@suse.de>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
wongsyrone/lede-1,0039bc665cd805542703cbed31628a58544eaca1,"lantiq-dsl: add missing blank in dsl output

blank inserted before ACTATP

Signed-off-by: Florian Eckert <Eckert.Florian@googlemail.com>

SVN-Revision: 49137
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,9c37c9d89773ee9da9f6af28ee37d931bd045711,"mce, amd: Implement mce_threshold_block_init() helper function

This patch adds a helper function for the initial setup of an
mce threshold block. The LVT offset is passed as argument. Also
making variable threshold_defaults local as it is only used in
function mce_amd_feature_init(). Function
threshold_restart_bank() is extended to setup the LVT offset,
the change is backward compatible. Thus, now there is only a
single wrmsrl() to setup the block.

Signed-off-by: Robert Richter <22a70fd9773e4de05b12c05075e9bcd605577f4d@amd.com>
Acked-by: Borislav Petkov <2b4cb5acba6b5321acd37371d9b73a646c388783@amd.com>
LKML-Reference: <1288015419-29543-2-git-send-email-22a70fd9773e4de05b12c05075e9bcd605577f4d@amd.com>
Signed-off-by: Ingo Molnar <9dbbbf0688fedc85ad4da37637f1a64b8c718ee2@elte.hu>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
couchbase/perfrunner,9ef0bb02678403234426249247fd8e181e414dfb,"Fix flake8 issues

2       E101 indentation contains mixed spaces and tabs
11      E111 indentation is not a multiple of four
1       E114 indentation is not a multiple of four (comment)
2       E122 continuation line missing indentation or outdented
1       E127 continuation line over-indented for visual indent
3       E128 continuation line under-indented for visual indent
12      E201 whitespace after '{'
9       E202 whitespace before ')'
1       E221 multiple spaces before operator
1       E222 multiple spaces after operator
1       E226 missing whitespace around arithmetic operator
5       E231 missing whitespace after ':'
5       E265 block comment should start with '# '
1       E301 expected 1 blank line, found 0
5       E302 expected 2 blank lines, found 1
8       E303 too many blank lines (3)
1       F401 'sys' imported but unused
1       W191 indentation contains tabs
3       W291 trailing whitespace
1       W391 blank line at end of file

Change-Id: I50f24caa82f8333a73e93352b40547c457d16172
Reviewed-on: http://review.couchbase.org/65069
Reviewed-by: Pavel Paulau <dd88eded64e90046a680e3a6c0828ceb8fe8a0e7@gmail.com>
Tested-by: buildbot <80754af91bfb6d1073585b046fe0a474ce868509@couchbase.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
facebook/mysql-5.6,93a5a834b4f20cb4286e9271fa8a365c15ff7198,"BUG#11763471 BUG#56184 Rolled back transaction without non-transactional table updated was binlogged
BUG#11763126 BUG#55798 Slave SQL retry on transaction inserts extra data into non-transaction table

BUG#56184
---------
The transaction modified non-transactional table will be binlogged with
ROLLBACK if it rolls back on master. It includes the case that all
statements which modified non-transactional table are binlogged outside
the transaction. Example:

  BEGIN
  INSERT INTO trans-table;
  INSERT INTO non-trans-table;
  ROLLBACK

This will be binlogged as:

  BEGIN
  INSERT INTO non-trans-table;
  COMMIT
  BEGIN
  INSERT INTO trans-table;
  ROLLBACK;

All statements in the second binlogged transaction modify only transactional
tables and are rolled back safely on master. So the second transaction should
not be binlogged.

After 5.5, there are two caches for binary logs, a transactional cache and a
statement cache. When executing a transaction, statements that modified only
transactional tables are always put in transactional cache. Statements that
modified non-transactional tables can be put in either transactional or
non-transactional cache depending on different situations. In this patch, a
flag is added to mark if there is any statement that modified non-transactional
table in transactional cache.

When rolling back a transaction on master, transactional cache should not be
flushed to binary log, if there is no statement in it that modified a
non-transactional table. Otherwise, it should be flushed into binary log
followed by 'ROLLBACK' statement.

BUG#55798
---------
When a temporary error(eg. Lock timeout) happens, Slave SQL thread will rollback
the transaction and retry it again. But it is possible that the transaction
cannot be rolled back safely. For example a non-transactional table has been
modified by the transaction. It will make master and slave diverge.

After this patch, SQL thread will not retry to execute a transaction which
cannot be rolled back safely if temporary error is encountered.

ADDITIONAL CHANGES
------------------
Some refactoring related to THD_TRANS::modified_non_trans_table and
binlog_cache_data was also done.",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
inkarkat/git-extensions,a2ec6b481979613a5a9fc338f8a1f21e45a102a9,"Add git-sti, showing the (short) status only for staged files

This can be useful to get an overview of staged changes prior to committing them, especially if you have unstaged changes in many files, too.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,b93d5b12a37fad59c5939df0f4c7ec05f8195758,"DevTools: Add executionContextId to ConsoleMessages in workers

BUG=

Review URL: https://codereview.chromium.org/372743002

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@177850 bbb929c8-8fbe-4397-9dbb-9b2b20218538
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,5a9d4d768c1b734ef7f047445ed6eed59ac46225,"2010-03-21  Kristian Amlie  <kristian.amlie@nokia.com>

        Reviewed by Simon Hausmann.

        Fixed updating the VKB display when inputting into QGraphicsWebView.
        https://bugs.webkit.org/show_bug.cgi?id=36292

        * Api/qgraphicswebview.cpp:
        (QGraphicsWebViewPrivate::_q_updateMicroFocus):
        (QGraphicsWebView::setPage):
        * Api/qgraphicswebview.h:

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@56322 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,65b2fb32b5ce53e103e026b6f95b784c5921cd2e,"usb: chipidea: udc: Fix calling spin_lock_irqsave at sleep context

Fixing the below dump:

root@freescale ~$ modprobe g_serial
g_serial gadget: Gadget Serial v2.4
g_serial gadget: g_serial ready
BUG: sleeping function called from invalid context at /home/b29397/work/projects/upstream/usb/usb/drivers/base/power/runtime.c:952
in_atomic(): 1, irqs_disabled(): 128, pid: 805, name: modprobe
2 locks held by modprobe/805:
 #0:  (udc_lock){+.+.+.}, at: [<7f000a74>] usb_gadget_probe_driver+0x44/0xb4 [udc_core]
 #1:  (&(&ci->lock)->rlock){......}, at: [<7f033488>] ci_udc_start+0x94/0x110 [ci_hdrc]
irq event stamp: 3878
hardirqs last  enabled at (3877): [<806b6720>] _raw_spin_unlock_irqrestore+0x40/0x6c
hardirqs last disabled at (3878): [<806b6474>] _raw_spin_lock_irqsave+0x2c/0xa8
softirqs last  enabled at (3872): [<8002ec0c>] __do_softirq+0x1c8/0x2e8
softirqs last disabled at (3857): [<8002f180>] irq_exit+0xbc/0x110
CPU: 0 PID: 805 Comm: modprobe Not tainted 3.11.0-next-20130910+ #85
[<80016b94>] (unwind_backtrace+0x0/0xf8) from [<80012e0c>] (show_stack+0x20/0x24)
[<80012e0c>] (show_stack+0x20/0x24) from [<806af554>] (dump_stack+0x9c/0xc4)
[<806af554>] (dump_stack+0x9c/0xc4) from [<8005940c>] (__might_sleep+0xf4/0x134)
[<8005940c>] (__might_sleep+0xf4/0x134) from [<803a04a4>] (__pm_runtime_resume+0x94/0xa0)
[<803a04a4>] (__pm_runtime_resume+0x94/0xa0) from [<7f0334a4>] (ci_udc_start+0xb0/0x110 [ci_hdrc])
[<7f0334a4>] (ci_udc_start+0xb0/0x110 [ci_hdrc]) from [<7f0009b4>] (udc_bind_to_driver+0x5c/0xd8 [udc_core])
[<7f0009b4>] (udc_bind_to_driver+0x5c/0xd8 [udc_core]) from [<7f000ab0>] (usb_gadget_probe_driver+0x80/0xb4 [udc_core])
[<7f000ab0>] (usb_gadget_probe_driver+0x80/0xb4 [udc_core]) from [<7f008618>] (usb_composite_probe+0xac/0xd8 [libcomposite])
[<7f008618>] (usb_composite_probe+0xac/0xd8 [libcomposite]) from [<7f04b168>] (init+0x8c/0xb4 [g_serial])
[<7f04b168>] (init+0x8c/0xb4 [g_serial]) from [<800088e8>] (do_one_initcall+0x108/0x16c)
[<800088e8>] (do_one_initcall+0x108/0x16c) from [<8008e518>] (load_module+0x1b00/0x20a4)
[<8008e518>] (load_module+0x1b00/0x20a4) from [<8008eba8>] (SyS_init_module+0xec/0x100)
[<8008eba8>] (SyS_init_module+0xec/0x100) from [<8000ec40>] (ret_fast_syscall+0x0/0x48)

Signed-off-by: Peter Chen <c01a8c815a4ad165fff2d1c0d35ddf5b16bd3d7b@freescale.com>
Signed-off-by: Greg Kroah-Hartman <4645f7897fd33786a2ee1264d590b3c400559d85@linuxfoundation.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/llvm-propeller,5e54bc18e27b7fa2af240ff93f1771faa425c319,"[WebAssembly] Update release notes

Summary:
Explicitly note that multithreading support is not included in the stable
ABI.

Differential Revision: https://reviews.llvm.org/D56681

llvm-svn: 351213
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,2ac44ab608705948564791ce1d15d43ba81a1e38,"x86/CPU/AMD: Don't force the CPB cap when running under a hypervisor

For F17h AMD CPUs, the CPB capability ('Core Performance Boost') is forcibly set,
because some versions of that chip incorrectly report that they do not have it.

However, a hypervisor may filter out the CPB capability, for good
reasons. For example, KVM currently does not emulate setting the CPB
bit in MSR_K7_HWCR, and unchecked MSR access errors will be thrown
when trying to set it as a guest:

	unchecked MSR access error: WRMSR to 0xc0010015 (tried to write 0x0000000001000011) at rIP: 0xffffffff890638f4 (native_write_msr+0x4/0x20)

	Call Trace:
	boost_set_msr+0x50/0x80 [acpi_cpufreq]
	cpuhp_invoke_callback+0x86/0x560
	sort_range+0x20/0x20
	cpuhp_thread_fun+0xb0/0x110
	smpboot_thread_fn+0xef/0x160
	kthread+0x113/0x130
	kthread_create_worker_on_cpu+0x70/0x70
	ret_from_fork+0x35/0x40

To avoid this issue, don't forcibly set the CPB capability for a CPU
when running under a hypervisor.

Signed-off-by: Frank van der Linden <137df1b99e6de808ebf723ca24d5697a9ded7068@amazon.com>
Acked-by: Borislav Petkov <0691a664b24b6f15b20cd5aee64b72271db08be1@suse.de>
Cc: Andy Lutomirski <2cc0d0d76de2e6f37b92deeb83c85cb306fc5dc1@kernel.org>
Cc: Linus Torvalds <69652caca27c8b940640ad396ab71f93cacec34f@linux-foundation.org>
Cc: Peter Zijlstra <3fddac958924aef220f202ca567388ddab3f14a8@infradead.org>
Cc: Thomas Gleixner <00e4cf8f46a57000a44449bf9dd8cbbcc209fd2a@linutronix.de>
Cc: 0691a664b24b6f15b20cd5aee64b72271db08be1@alien8.de
Cc: accc0069bb3ff62ae1a181f9cf05aee7ddbd8eff@flygoat.com
Fixes: 0237199186e7 (""x86/CPU/AMD: Set the CPB bit unconditionally on F17h"")
Link: dd2d962423d07ed5b8246b89809729090aecb34a@dev-dsk-fllinden-2c-c1893d73.us-west-2.amazon.com
[ Minor edits to the changelog. ]
Signed-off-by: Ingo Molnar <9dbbbf0688fedc85ad4da37637f1a64b8c718ee2@kernel.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
Enigma-Game/Enigma,56e28e889b04a4e82846a78717b4d3f734cc2f64,"Update main authors in manuals.

This is a follow-up to rev 2448 (Shift version of Enigma to 1.21).

TODO:
 - Russian manuals (html and texi) have been updated, but some
   words are now in English. These need to be translated.
   Note: There will be more changes to the manuals, as the
   level authors and translator names will be updated.


",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
alphagov/manuals-publisher,0e13bb560e2b80c025b702bb9a97555ec3a11270,"Make ManualRecord#latest_edition aware of in-memory editions

It seems that with an embedded relationship doing .order_by on the
editions for a manual_record would look at in-memory editions, whereas
with a separate collection relationship the .order_by does a DB call
and ignores the already loaded editions relationship and thus any
unsaved instances.  Like those created by
ManualRecord#build_draft_edition.

To get round this we memoize ManualRecord#latest_edition - it still
uses .order_by on the editions if the value hasn't been set, but whenever
we call build_draft_edition we set the latest_edition value to be the
draft that we build.  This'll obviously break if we ever build new
editions not via this API, but it doesn't look like there is anywhere
that we do, so we're safe.

We also have to add an after_save callback to the manual record to save
the latest edition if it is present, and if it has changes that need
saving.  We clear it when we do this, just in case.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
IdentityServer/IdentityServer4,58fb045a5391a0688d1b9f55c9235a75fe2350ed,"text readme refer to a broken link (#2840)

* Update specs.rst

* text readme refer to a broken link

the link should point to the master branch
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
radiasoft/sirepo,82e2ef7ad2fdd150b0af23557bcf3f7c57cd842b,"Issue/1356 simulation href (#1458)

* Nav method to get path to simulation
* Correct href when hover or copy link for simulation
* Fix open link href
* Add missing semicolon
* Fix list view href
* Pass in only simulationId to simulationURL method
* Add spaces around { and } to match coding style
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,61b2c8b8525e905784cfb5e235efea13f77b3c87,"This broke the build with a compilation failure:

https://ci.chromium.org/buildbot/chromium.chrome/Google%20Chrome%20ChromeOS/49396

Revert ""Add chrome enterprise logo in the theme_resources.grd""

This reverts commit 86dafb90887f991db3625431f91208b9b0b7d01e.

Reason for revert: <INSERT REASONING HERE>

Original change's description:
> Add chrome enterprise logo in the theme_resources.grd
> 
> The logo is located in
> default_100_percent/google_chrome
> default_200_percent/google_chrome
> 
> Bug: 838156
> Change-Id: Id300ef64e70cdc92bcdbad89b5aad00bc5bbd777
> Reviewed-on: https://chromium-review.googlesource.com/1042491
> Reviewed-by: Greg Thompson <grt@chromium.org>
> Commit-Queue: Owen Min <zmin@chromium.org>
> Cr-Commit-Position: refs/heads/master@{#556093}

TBR=zmin@chromium.org,grt@chromium.org

Change-Id: I70621ad525fd9a1c2ced334ba35ab4d48c731f1c
No-Presubmit: true
No-Tree-Checks: true
No-Try: true
Bug: 838156
Reviewed-on: https://chromium-review.googlesource.com/1044685
Reviewed-by: Jonathan Ross <e9c70bc7206746b5bf0d76d2d89b2fc9653940f2@chromium.org>
Commit-Queue: Jonathan Ross <e9c70bc7206746b5bf0d76d2d89b2fc9653940f2@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#556096}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
facebookexperimental/eden,b6d4017a84fac7f01e8bb01be92ebcea501b26c5,"amend: prevent loss of bookmark on failed amend

The active bookmark were moved to the temporary commit. When the transaction
were rollbacked, the bookmark were lost.

We now temporarly disable the bookmark to prevent this effect.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/arrow,6c6754aa5fb840466dfd618ca5b6ae7ca72ebbfa,"ARROW-6920: [Packaging] Build python 3.8 wheels

adds python3.8 wheels

as far as I can tell python3.8 isn't available for Conda yet (https://github.com/conda-forge/python-feedstock/pull/274), so that's will have to be added later

Closes #5685 from sjhewitt/arrow-6920 and squashes the following commits:

feac49470 <Sutou Kouhei> Add a TODO comment
908a39648 <Sutou Kouhei> Check Docker version for debug
43833a3da <Sutou Kouhei> Add Python 3.8 support to package metadata
f3f9bfad9 <Krisztián Szűcs> Install tensorflow for 32 bit unicode width py27
cd9ae83b1 <Sutou Kouhei> Install TensorFlow for Python 2.7 manually
5293f2bf7 <Sutou Kouhei> Pin base image and remove needless virtualenvs
344eecd71 <Sutou Kouhei> Use apache/arrow-dev again
99cad413d <Sutou Kouhei> Use the uploaded image
f0c8e6927 <Sutou Kouhei> Link to libpython only on Windows
260fa7930 <Sutou Kouhei> Add a missing empty line
52761b413 <Sutou Kouhei> libpython.so may not exist
5e5977eb3 <Sutou Kouhei> Don't link to other Python libraries on non Windows
e047d54d6 <Sutou Kouhei> Don't use local function
10dac6741 <Terence D. Honles> move plasma subprocesses to top level functions
da300ac20 <Sutou Kouhei> Don't use TTY
c4526d87f <Sutou Kouhei> Use more recent numpy
7ace0cb03 <Sutou Kouhei> Ensure using the latest image
655f88c45 <Sutou Kouhei> Use Azure Pipelines instead of Travis CI
2ef6213fc <Sutou Kouhei> Use ""call conda.bat activate/deactivate""
1c8427ea4 <Sutou Kouhei> Use conda without call
99251eaba <Sutou Kouhei> Use ""conda activate/deactivate""
f403b6fe3 <Sutou Kouhei> Use the latest multibuild
c81884017 <Sutou Kouhei> Remove m suffix
e9f14087f <Sutou Kouhei> Set up Python 3.8
2ab67322b <Simon Hewitt> ARROW-6920:  Build python 3.8 wheels

Lead-authored-by: Sutou Kouhei <73218711cdd5d5c30ac66da3cc4d9d9204caf34b@clear-code.com>
Co-authored-by: Terence D. Honles <1a08d84b050968de913c859c1eecc9e54b677b4f@honles.com>
Co-authored-by: Krisztián Szűcs <6bab32dc957a05a87930e779f272342e159326fa@gmail.com>
Co-authored-by: Simon Hewitt <7dd9b33881225c7ac41dce30c1447db47c41d4af@sjhewitt.co.uk>
Signed-off-by: Sutou Kouhei <73218711cdd5d5c30ac66da3cc4d9d9204caf34b@clear-code.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,9aa5b0181bdf335f0b731d8502e128a862884bcd,"drivers/char/i8k.c: add Dell XPLS L421X

Addresses https://bugzilla.kernel.org/show_bug.cgi?id=60772

Signed-off-by: Alan Cox <91e38e63b890fbb214c8914809fde03c73e7f24d@linux.intel.com>
Reported-by: Leho Kraav <8c39070891cef7ac3ddcd99d9a5708cda84cec0c@kraav.com>
Cc: stable <4fbacc2fa0ffdbb11bf1ad6925b886ebd08dd15f@vger.kernel.org>
Signed-off-by: Andrew Morton <5c1e68b099950c134891f0b6e179498a8ebe9cf9@linux-foundation.org>
Signed-off-by: Greg Kroah-Hartman <4645f7897fd33786a2ee1264d590b3c400559d85@linuxfoundation.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,e5069744b1a085215388fb8dd694829e35fc146d,"Update OOBE fonts

Bug: 1000606
Change-Id: I35cb734412924fa0a315063c5ca80556f6bb40fd
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1863094
Commit-Queue: Denis Kuznetsov <116237dc3872a5ee1ec9580b99e864e658fcee9e@chromium.org>
Commit-Queue: Roman Sorokin [CET] <a71305a62da55771dc70eefcf3da775a81678177@chromium.org>
Reviewed-by: Roman Sorokin [CET] <a71305a62da55771dc70eefcf3da775a81678177@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#706962}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
go-gitea/gitea,fb5c6b644460f94acb8976ad35165230b9d47fb2,"Import docs into main repository (#2874)

* import docs into main repository

Signed-off-by: Matti Ranta <ff3785bfdd6690916cd886199c6b899e5f93e2e2@mdranta.net>",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,e4fd47c23ea91ba72481d7d7f2a31a763459c7e3,"IndexedDB: Bounds check for IDBCursor.advance() incorrect
https://bugs.webkit.org/show_bug.cgi?id=100014

Reviewed by Tony Chang.

Source/WebCore:

Fix introduced by trac.webkit.org/changeset/131658 restricted cursor.advance()'s argument
as [EnforceRange] unsigned long long, but it's typed as [EnforceRange] unsigned long; the
useless comparison was caught by a clang check.

In lieu of webkit.org/b/96798 make it long long and correct the range check.

Test: storage/indexeddb/cursor-advance.html

* Modules/indexeddb/IDBCursor.cpp:
(WebCore::IDBCursor::advance):
* Modules/indexeddb/IDBCursor.h:
(IDBCursor):
* Modules/indexeddb/IDBCursor.idl:

LayoutTests:

Assert that advance(2^32) throws and advance(2^32-1) does not, per WebIDL.

* storage/indexeddb/cursor-advance-expected.txt:
* storage/indexeddb/resources/cursor-advance.js:
(testBadAdvance.advanceBadly):
(testBadAdvance):
(testEdges.request.onsuccess):
(testEdges):


git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@132140 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/llvm-propeller,6a81d3026945c39db6371afad39823ab85795bde,"Remove variable_ops from ARM call instructions.

Function argument registers are added to the call SDNode, but
InstrEmitter now knows how to make those operands implicit, and the call
instruction doesn't have to be variadic.

Explicit register operands should only be those that are encoded in the
instruction, implicit register operands are for extra dependencies like
call argument and return values.

llvm-svn: 160188
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
dslutz/qemu,f42dc44a1481949e900cd50846a42c60d756758e,"s390x: introduce and use S390_MAX_CPUS

Will be handy in the future.

Reviewed-by: Thomas Huth <9e65be74847981e55b2564b6266c57d86d3bac05@redhat.com>
Reviewed-by: Richard Henderson <641039872457cf7d26c8010228bc48b428501525@linaro.org>
Signed-off-by: David Hildenbrand <aa743a0aaec8f7d7a1f01442503957f4d7a2d634@redhat.com>
Message-Id: <20170928134609.16985-6-aa743a0aaec8f7d7a1f01442503957f4d7a2d634@redhat.com>
Signed-off-by: Cornelia Huck <30e11450240723c8d5fc53105dfc38d5ef93eed3@redhat.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,f24b1f96f6208bfbe801ec7e0465ca3547a9a024,"Delay expiry of frequently used histograms.

Updates the expires_after attribute for 44 histograms that show
frequent access in the past 90 days.  These are the 90% most
frequently used histograms over that time that do not already have a date later
than or within 60 days of 2020-09-13.

TBR=chrome-metrics-team@google.com

Change-Id: Ibc156c1e8be51e13a027853fe7bf645cc36b1305
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2106017
Commit-Queue: Brian White <ba5f5a0555dcac1826beb366d481a8e6d8a54b8a@chromium.org>
Reviewed-by: Chrome Metrics Logs <83a419845cccef68170730b02d3f45bb6f2b0d5a@google.com>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#751115}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
kraj/meta-clang,1edc4edac53e1b567d062cd44470dd12e554564a,"clang: Turn split-dwarf setting into a packageconfig knob

Disable it by default, since centos7/gcc4.8 can't handle it
Fixes Issue #262

Signed-off-by: Khem Raj <729d64b6f67515e258459a5f6d20ec88b2caf8df@gmail.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
vitrivr/cineast,1d96c23683b80f50f906b5a60466daca93aeaf34,"Made NN Nullable in the QueryConfig.
Added classificationCutoff to the queryconfig

Tag-lookup now uses the  IN-functionality provided by ADAMpro
Lookup for matches also uses IN-functionality
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,a672d19ad76be908d9339fe093f88fd1e66b99f8,"Add the metric to record  percentage improvement for parallel download.

Records the ratio of bandwidth of parallel streams to the bandwidth of
single stream, and the ratio of total time to download a file with
parallel streams bandwidth to the actual total time.

BUG=720168

Review-Url: https://codereview.chromium.org/2874603002
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#471608}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,441717c46fc71e349cf8373392a2afd61332dd4e,"dt-bindings: pinctrl: qcom: Add msm8226 pinctrl bindings

Add device tree binding Documentation details for Qualcomm msm8226
pinctrl driver.

- Bindings documentation was based on qcom,ipq6018-pinctrl.yaml added by
  Sricharan R <sricharan@codeaurora.org> and then modified for msm8226
  content

Signed-off-by: Bartosz Dudziak <15c7cba638162bd715ca2104876c56bdab733f7f@snejp.pl>
Reviewed-by: Rob Herring <fbb37eacae100e13076d5c4b46f06cfa4d6fa9f8@kernel.org>
Link: https://lore.kernel.org/r/20200716205530.22910-2-15c7cba638162bd715ca2104876c56bdab733f7f@snejp.pl
Signed-off-by: Linus Walleij <9cd9d802d23c0ed5e224beabf4ae4a5c478746ef@linaro.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
cmungall/ontology-starter-kit,d1bf580268a8e1bb93f9b888af0547e6d8aed490,"obo file iris and base file

- Switched import removal to --trim false (otherwise deletes important axioms)
- Make sure obo generated artefacts have the right IRI
- corrected some behaviour of base files, which might need further work
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,16d328641c9a246ff1cc4c965cff022918fb7a31,"        Fix for bug 11924: WebCore would crash on any HTML content
        with a non-empty <table> tag in it on a 64-bit machine. The
        size_t (64bit) vs int (32bit) cast is now fixed in ensureRows,
        and the clients of this function have been updated to check
        for a false return code.

        Reviewed by Darin



git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@18834 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
angular/angular-cli,601134d2a64e919f9dc69e0ef23c451b57783862,"docs(@schematics/angular): add note about older chrome in polyfills

Add note about polyfills being required in older chrome environments.
Addresses confusion seen in Ionic projects that are loaded in an Android
5 emulator, but has chrome 37.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
kdave/btrfs-progs,76dabfb64fe779f630259744a2c88fbd0884b79f,"Btrfs-progs: Add missing close_ctree() calls to debug-tree

Signed-off-by: Filipe David Borba Manana <e0fcd583df77ec6c08e6d1257619cc1216ddc994@gmail.com>
Signed-off-by: David Sterba <a2ce9d316ca04d17b520237d2846a218b8284e52@suse.cz>
Signed-off-by: Chris Mason <a169954b4cb1a46cee25f659d3bddfebe02b5fba@fusionio.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
PowerShell/PowerShellEditorServices,24307e783e967ddeda35b9bfc760ae12de867353,"Add Editor Commands for opening Profiles (#254)

* Add Editor Commands for opening Profiles

This change adds the following built-in Editor Commands

- PowerShellEditorServices.OpenEditorProfile: Opens the current
Editor's profile. Uses $profile so should work when other Editors use
PSES.
- PowerShellEditorServices.OpenProfileList: Prompts user with a list of
 Profiles to open.

* Make Current editor default choice

This change makes the is for PowerShellEditorServices.OpenProfileList
Editor Command. It makes the default first selection the current Editor
and filters out any duplicates. Should also account for any new profiles
other Editors might add.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
venicegeo/eventkit-cloud,9b36d9a682ff0e67e4e41a8a5a4ecc01e284c8a0,"fix postgis volume (#842)

* fix postgis volume

* Update POSTGRES environment variables for the new docker image.

* fix db environment

* Fix docker-compose spacing typo.

Co-authored-by: Jeremiah Cooper <bae24dd47ee2b9b6dca24152c779861ced298235@jeremiahcooper.com>
Co-authored-by: Jeremiah Cooper <bae24dd47ee2b9b6dca24152c779861ced298235@prominentedge.com>",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
symfony/symfony,74a1cc34eb2560f3baeb268e7169b588df3b1ede,"bug #22090 [WebProfilerBundle] Fix Content-Security-Policy compatibility in case of a `style-src 'self'` policy (romainneutron)

This PR was merged into the 3.2 branch.

Discussion
----------

[WebProfilerBundle] Fix Content-Security-Policy compatibility in case of a `style-src 'self'` policy

| Q             | A
| ------------- | ---
| Branch?       | 3.2 <!-- see comment below -->
| Bug fix?      | yes
| New feature?  | no <!-- don't forget updating src/**/CHANGELOG.md files -->
| BC breaks?    | no
| Deprecations? | no <!-- don't forget updating UPGRADE-*.md files -->
| Tests pass?   | yes
| Fixed tickets | #22053 #20963
| License       | MIT

This fixes the compatibility of the bundle in case of a `style-src 'self'` policy.
This PR must be rebased once #22089 is merged

Commits
-------

4acec8973f [WebProfilerBundle] Fix content-security-policy compatibility
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
dslutz/qemu,a8f07376c9b3e5bce736bdcf6f49dc63fa4a516b,"aspeed/scu: Introduce a aspeed_scu_get_apb_freq() routine

The APB frequency can be calculated directly when needed from the
HPLL_PARAM and CLK_SEL register values. This removes useless state in
the model.

Signed-off-by: Cédric Le Goater <2d8cace2254d4e43578d21933db015d84bcc468a@kaod.org>
Message-id: 20190904070506.1052-11-2d8cace2254d4e43578d21933db015d84bcc468a@kaod.org
Reviewed-by: Peter Maydell <313afa09ce093b19ae1dd74f57c1ebd94508584c@linaro.org>
Signed-off-by: Peter Maydell <313afa09ce093b19ae1dd74f57c1ebd94508584c@linaro.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,1538f5c829d2c5132073f5d63f96f2ef0b1a2c85,"Add documentation for origin trial token format

Bug: 1124361
Change-Id: I3a901dc1f77e59783406043a7bded2c983e9b6d1
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2542597
Commit-Queue: Rodney Ding <0c3bf97d037b64f579d42ffea4fbd810ef083741@google.com>
Reviewed-by: Jason Chase <149c7c35dfa600cb160d485bbd2debaded56146d@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#835182}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
alphagov/gds-api-adapters,5e18b68a879f3cded56e6021dde309c947d4c961,"Don't use CGI.escape in Webmock's hash stub format

This breaks the tests in Frontend because it no longer matches slashes 
in URL requests. I think it's fine to not escape these URLs when we're 
providing them to Webmock as a hash.",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
ProtonMail/WebClient,e00e7a321dd33ae5ad21b7ed4bf86cb93a1d4758,"[i18n]: Context All the things ! (#7645)

* Sort no context

* Improve context

* Translations context 2

* Add context 3

* Add context edn

* Lint translations

* Fix translation missing context
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
qtproject/qtwebengine,9883dca4714c82079d390da18d1e3ff36f29b5a7,"[macOS] Use the OpenGL CoreProfile when the global shared context does

Previously when a default QSurfaceFormat was set with an OpenGL Core
profile, all the contexts created on the Qt side would obey the profile,
but Chromium would still use the Compatibility profile for its contexts
leading to warnings when trying to create shared contexts.

The fix is to check which OpenGL profile is used in the Qt global
shared context, and pass that information along to Chromium.

Note that this works only on macOS for now, and the default non-Core
profile is used on other platforms, even though Core was requested.
Passing CoreProfile to Chromium on Windows and Linux currently leads
to crashes.

Task-number: QTBUG-60605
Change-Id: I27a77091923624d19ccc2019953a5b07f9282916
Reviewed-by: Peter Varga <1cba5777e8212f0f2c099465d5f1c3c7c1196bf2@inf.u-szeged.hu>
Reviewed-by: Kai Koehne <077bc265216106fb22408e62f2d97925ede69d10@qt.io>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,0bb1a72a70f68c501eb37d92298b13867a8307a1,"        Windows build fix

        * DerivedSources.cpp: Removed SVGElementFactory.cpp, since including
        it leads to ambiguities for symbols like ""aTag"", which exist in both
        the HTMLNames and SVGNames namespaces.

        * WebCore.vcproj/WebCore.vcproj: Added SVGElementFactory.cpp to the
        project directly. VS also decided to reformat this file a little bit.

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@40855 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,9279c65818997a5782f57f7ac917cc0a2bc41fcd,"Fix for default value of FetchEvent.cancellable

new FetchEvent('foo').cancellable should be false
previously we were setting it to true in FetchEvent::create()
method.

BUG=501227

Review URL: https://codereview.chromium.org/1187573003

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@197265 bbb929c8-8fbe-4397-9dbb-9b2b20218538
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
TryGhost/Ghost-CLI,7389c39aeec1920a1e30d34a80ed085919ac1502,":art: :sparkles: add process manager hooks

- move process message sending into local process manager
- add optional 'success', 'error', and 'setup' hooks to process
management
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
opencontainers/runc,af9da0a45082783f6005b252488943b5ee2e2138,"nsenter: cloned_binary: use the runc statedir for O_TMPFILE

Writing a file to tmpfs actually incurs a memcg penalty, and thus the
benefit of being able to disable memfd_create(2) with
_LIBCONTAINER_DISABLE_MEMFD_CLONE is fairly minimal -- though it should
be noted that quite a few distributions don't use tmpfs for /tmp (and
instead have it as a regular directory or subvolume of the host
filesystem).

Since runc must have write access to the state directory anyway (and the
state directory is usually not on a tmpfs) we can use that instead of
/tmp -- avoiding potential memcg costs with no real downside.

Signed-off-by: Aleksa Sarai <a8eb12d32d6ec07cdf737175ec7d4a0f1b4e1ee7@suse.de>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/spark,4852b7d447e872079c2c81428354adc825a87b27,"[SPARK-21310][ML][PYSPARK] Expose offset in PySpark

## What changes were proposed in this pull request?
Add offset to PySpark in GLM as in #16699.

## How was this patch tested?
Python test

Author: actuaryzhang <actuaryzhang10@gmail.com>

Closes #18534 from actuaryzhang/pythonOffset.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
coreboot/coreboot,5fc64dca45b01556a9325bea0fb563d6f0d16f75,"Rename family15 pci northbridgeops functions.

This is a port of the following
commit 8a49ac7f808f76821e7d63070420cfd98f707c7c

    Rename fam14 pci northbridge ops functions.

    Clarify the northbridge ops function names.

original-Change-Id: If7d89de761c1e22f9ae39d36f5cf334cc2910e1d
    Signed-off-by: Marc Jones <marc.jones@se-eng.com>

Change-Id: Id7889bf02e2696220081251acdf695327267c796
Signed-off-by: Steven Sherk <7acf2891450291e8dff1efb0e4079c269c71368e@se-eng.com>
Reviewed-on: http://review.coreboot.org/2225
Tested-by: build bot (Jenkins)
Reviewed-by: Marc Jones <bb1304e98184a66f7e15848bfbd0ff1c09583089@gmail.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
coreboot/coreboot,85e981c8c945a7d438e6b30f13036199799529d6,"vc/amd/fsp/picasso: add FSP-M UPD to disable the HD Audio controller

BUG=b:158535201,b:162302028
BRANCH=zork

Change-Id: If4886591b7d73293773e4d36ec653ef42e8b2f54
Signed-off-by: Felix Held <23ae9ad67c7e328722a591f61ca191124af4367e@felixheld.de>
Reviewed-on: https://review.coreboot.org/c/coreboot/+/44679
Reviewed-by: Raul Rangel <9a9c998e11a2655b1de9a05eeeef5f710c0dc7ed@chromium.org>
Reviewed-by: Aaron Durbin <af0622ab041e8b0f8e5819838dcc93898196e71f@chromium.org>
Tested-by: build bot (Jenkins) <8254d1186852c26c9fb3d343db6a5be86317fea9@coreboot.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
karelzak/util-linux,6065250a4d0e20aac3dcb19ec6aa4f1ba0811fef,"whereis: support zst compressed man pages

Add zst as extension for manual pages. Current version of man-db
supports zst extension out of the box.

Signed-off-by: Samanta Navarro <372ba505e72695a9a69d4b6ba6aecbc9c2dc84c6@riseup.net>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
couchbase/ns_server,d12b41a2310bc1205b3658b7bcc7c9c4c8ed5197,"AngularJS: better detection of entrance state

This change includes update of ui-router library.

Main idea is to set initial state to 'auth'
which determines initial state for the user.

Also according to documentation in most cases
we should to use state.go instead of state.transitionTo.

Change-Id: I8c16cc787466ed06ac014cdbdffbc643eeb87b64
Reviewed-on: http://review.couchbase.org/41130
Reviewed-by: Aliaksey Kandratsenka <340b8e09ca65cd3fc686427fcfed17e87eaf61e2@gmail.com>
Tested-by: Aliaksey Kandratsenka <340b8e09ca65cd3fc686427fcfed17e87eaf61e2@gmail.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
LLNL/spack,98f1c9a291e2267cc0e8c5460fe8a1fed5781ee8,"CPATH warning: downgrade to debug message (#10675)

Spack warns users when a dependency package updates CPATH. This
warning message is generating bug reports and alarm in cases where
there is no problem. For now this downgrades the warning message to
the debug level, so it only shows up if something goes wrong for the
user and they ask for more information from Spack.",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,d3d4a37404d4ea677c9750d233e6168386755f3f,"mus: Fix some event-dispatch related test expectations.

Fix the tests to make sure the events are dispatched to the correct client, and
update the expectations accordingly.

BUG=none

Review-Url: https://codereview.chromium.org/2088723002
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#401065}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
blaze/dask,c950905873c052d921aab77ab50143825c7cd7da,"Add document about choosing the right scheduler (#1473)

* Add document about choosing the right scheduler

Fixes https://github.com/dask/distributed/issues/364

* respond to comments
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
daverigby/kv_engine,1a07ead83cedae5d1e2e99589820797e00792486,"+2005-04-04
+       * patch from Don MacAskill <don@smugmug.com> 'flush_all' doesn't
+       seem to work properly.  Basically, if you try to add a key which
+       is present, but expired, the store fails but the old key is no
+       longer expired.

Subject: Serious bug in memcached - patch attached
Parts/Attachments:
   1.1 Shown     44 lines  Text
   1.2 Shown     22 lines  Text
   1.3   OK      13 lines  Text (charset: UTF-8)
   2            3.2 KB     Application, ""S/MIME Cryptographic Signature""
----------------------------------------


... or, at least, it seems that way.  :)  'flush_all' doesn't seem to
work properly.  Basically, if you try to add a key which is present, but
expired, the store fails but the old key is no longer expired.  Here's
output:

get key1
END

add key1 1 0 2
27
STORED

get key1
VALUE key1 1 2
27
END

flush_all
OK

add key1 1 0 2
28
NOT_STORED

get key1
VALUE key1 1 2
27
END

I suppose it's possible there's some design reason why it behaves that
way, but if so, I don't know what it is.  Certainly breaks our stuff.  :)

(we built a memcached tracker which controls the state of our pool of
memcached processes.  It flushes any hosts/ports which fail at any
writes, among other things, and this bug caused some big problems, as
you can imagine).

Patch against CVS attached.  It's probably mildly overkill (probably
doesn't need to destroy the item on a stale 'get', only on 'add', but
it's pretty simple and gives me the warm fuzzies).

Don


git-svn-id: 712aefb8596620db6486b8151c1cac37df8d9591@236 b0b603af-a30f-0410-a34e-baf09ae79d0b
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,850d5cb6d036d966de9c962fff117e01d0d84e49,"Adds metrics for Select-to-Speak state changes.

Bug: 753018
Cq-Include-Trybots: master.tryserver.chromium.linux:closure_compilation
Change-Id: Icd14d6f7e4f9608d35fcbedbee47ad090b3b5c63
Reviewed-on: https://chromium-review.googlesource.com/1043250
Commit-Queue: Katie Dektar <e321a8fd89c4908465ddaf8d5d0d62480efacb63@chromium.org>
Reviewed-by: David Tseng <57d6711e15f60434c9e159ea3db9eda3f784ef2f@chromium.org>
Reviewed-by: Ilya Sherman <132f3a2061152e8061cfd42aff9316f15e66d3ce@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#556953}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
stinsonga/emacs-mirror,7be160d80002cd000f33da38d3a2f7a2920c1bf5,"Improve ""Help Summary"" section in user manual

* doc/emacs/help.texi (Help Summary): Add cross-references to
sections with details of each Help command.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
rhinstaller/anaconda,9c69487ac757704be633436a0cc463f5629ab922,"Fixup partition aligning (#560586)

Our partitioning code was assuming that having a partition from
sector 0 - 512 means the partition stops at sector 512, iow that
it goes from sector 0 till 511, but that is not how parted geometries
work, the range includes the end sector. So 0 - 512 will get you
a 513 sectors partition.

This patch adds an endAligment property to disklabel which can be used
to properly align end sectors (which must be aligned to the disklabel's
alignment with the offset decreased by 1), patches partitioning.py to
use this to align end sectors and fixes up end sector calculations in
partitioning.py to be start + length - 1.

On DASD's (s390), the wrong end sector was causing a traceback (#560586),
as DASD's disklabels need partitions to be cylinder aligned, and the wrong
end sector violated this.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
candlepin/subscription-manager,565fd10aab226dc33eafcb52b68611bdef4aa11d,"Use patch for mocking loggers and show_error_window

This reduces pollution of test environments that was causing PR test
failures seen first in #1589.

`test/test_managercli.py` was the actual culprit.

I went ahead and fixed `test/test_handle_gui_exception.py` while I was
at it.

Also, I went ahead and added the `warning` method to `FakeLogger`.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
exponentjs/exponent,b333b4187e1613bfe71f71c2dc5c486c87b9f3e3,"[ios][android] Make redbox and rr (android) and cmd+r (ios) reload manifest and JS rather than just JS (#6134)

* [ios] Make cmd+r reload manifest and JS rather than just JS

* [ios] Reload from dev menu grabs manifest too

* [ios] Clean up reload code and ensure redbox injection code works outside of developer mode

* [android] Reload on dev menu also reloads from manifest

* [ios] Fix typo

* [android] Reload from manifest from redbox and with rr shortcut

* [android] Address feedback

* [react-native-lab] Copy changes to ReactAndroid over

* [android] Clean up extra newlines

* [react-native-lab] Update on sdk-36 branch
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
home-assistant/home-assistant,eaaa0442e28469fab9b28ed5fdbe5295f99f9933,"Add a Z-wave workaround to do full refresh on update (#6403)

* Add Zwave refresh services

* services file

* Use dispatcher

* Add zwave prefix to signal

* Add a Z-wave workaround to do full refresh on update
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,d4df171418262d2e0291dcff14e40bcebe73af3c,"drm/msm/gpu: fix building without debugfs

When debugfs is disabled, but coredump is turned on, the adreno driver fails to build:

drivers/gpu/drm/msm/adreno/a3xx_gpu.c:460:4: error: 'struct msm_gpu_funcs' has no member named 'show'
   .show = adreno_show,
    ^~~~
drivers/gpu/drm/msm/adreno/a3xx_gpu.c:460:11: note: (near initialization for 'funcs.base')
drivers/gpu/drm/msm/adreno/a3xx_gpu.c:460:11: error: initialization of 'void (*)(struct msm_gpu *, struct msm_gem_submit *, struct msm_file_private *)' from incompatible pointer type 'void (*)(struct msm_gpu *, struct msm_gpu_state *, struct drm_printer *)' [-Werror=incompatible-pointer-types]
drivers/gpu/drm/msm/adreno/a3xx_gpu.c:460:11: note: (near initialization for 'funcs.base.submit')
drivers/gpu/drm/msm/adreno/a4xx_gpu.c:546:4: error: 'struct msm_gpu_funcs' has no member named 'show'
drivers/gpu/drm/msm/adreno/a5xx_gpu.c:1460:4: error: 'struct msm_gpu_funcs' has no member named 'show'
drivers/gpu/drm/msm/adreno/a6xx_gpu.c:769:4: error: 'struct msm_gpu_funcs' has no member named 'show'
drivers/gpu/drm/msm/msm_gpu.c: In function 'msm_gpu_devcoredump_read':
drivers/gpu/drm/msm/msm_gpu.c:289:12: error: 'const struct msm_gpu_funcs' has no member named 'show'

Adjust the #ifdef to make it build again.

Fixes: c0fec7f562ec (""drm/msm/gpu: Capture the GPU state on a GPU hang"")
Signed-off-by: Arnd Bergmann <f2c659f01951776204a6c5b902787d9019fbeebd@arndb.de>
Signed-off-by: Rob Clark <915c10c999604870200b6defbe633d857c856ca0@gmail.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,c2eec0d81f92df06e614e104eba8b3e12bbc6030,"Non-SFI Mode: Build ipc/ library by PNaCl toolchain for nacl_helper_nonsfi.

This CL is to build ipc/ for nacl_helper_nonsfi.
The library is similar to ipc_nacl, but slightly different:
- The IPC::Channel should use ChannelPosix rather than ChannelNaCl,
  as it runs under linux directly.
- Some features of ChannelPosix cannot be compiled by PNaCl toolchain for
  Non-SFI build, but these are not necessary for nacl_helper_nonsfi.
  These are dropped by ""ifdef"" guard.
Note that this library is not used yet, but should be built successfully.

BUG=358465
TEST=Ran trybot. Implement nacl_helper_nonsfi on top of this CL, and made sure it works.

Review URL: https://codereview.chromium.org/659243002

Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#301037}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
zephyrproject-rtos/zephyr,911b91d82e3f0c0c7b5a65728012baea706f6bc5,"Bluetooth: Move start_scanning stop_scanning and le_create_conn

Move bt_hci_start_scanning, bt_hci_stop_scanning and hci_le_create_conn.
It's needed to avoid a forward declaration in a subsequent patch.

Change-Id: I0ee048ca6e8add6a481ac4fdc8a8e2cbdf4f007c
Signed-off-by: Mariusz Skamra <c73850bd0bf85e95dce44c2ce1418ca55c1b6c5d@tieto.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
openstack/openstack-manuals,76fcca9685fdf03204888fb7da4ed3ec6667591f,"Imported Translations from Transifex

For more information about this automatic import see:
https://wiki.openstack.org/wiki/Translations/Infrastructure

Change-Id: I79dfdf1c2611419f0852a12a3627cfddc9730a17
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
spulec/moto,d4e39146b70d78d198041012a3b4f05e4f14cf0b,"Make sure every NetworkInterface has a private IP

AWS always assigns a primary IP address to Network Interfaces.
Using a test account (modified the IP):

    >>> import boto
    >>> vpc = boto.connect_vpc()
    >>> eni = vpc.create_network_interface(subnet_id)
    >>> eni.private_ip_addresses
    [PrivateIPAddress(10.1.2.3, primary=True)]
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
linux-test-project/ltp,16352e460d3afbdeee85d1d6b46a95369483da99,"lib/tst_test.c: mntpoint implies tmpdir

If mntpoint is set in the test structure we create a directory hence we
need to ensure that we are creating the directory in the right place.

Signed-off-by: Cyril Hrubis <e0c73f351b538f846f03d0c22a5583b41bce619a@suse.cz>
Tested-by: Petr Vorel <a75d75f7249459d0361fe2150760cbb546b36ca9@suse.cz>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
catmaid/CATMAID,0bf74e023c5eb97af0b6e8b5c7a0c9278d80ca93,"3D viewer: be more fault tolerant in code executed after destruction

There are situations where a 3D Viewer is closes quickly after it has
been opened and skeletons have been added. An example is opening the
split dialog accidentally and closing it again before the relevant
skeleton is loaded. Some asynchronous code is executed after the widget
was destructed. This prevents such code from accessing the space object
after its destruction.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,45a359e80d9b81b0fc3d9612053a86fc52a5f4b9,"dt-bindings: imx8mq-clock: Add the missing ARM clock

Add the missing ARM clock which will be used by cpufreq

Signed-off-by: Abel Vesa <33315ddda88a16e2f3550569baadd50dfa603c23@nxp.com>
Reviewed-by: Lucas Stach <48c9e973d8f86eb0cdae200124c5925db7587c4e@pengutronix.de>
[010521127f513270fe503d86ab8316ac5147f4b7@kernel.org: Fixed numbering in dt header]
Signed-off-by: Stephen Boyd <010521127f513270fe503d86ab8316ac5147f4b7@kernel.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
MariaDB/server,c09c434877547abb9243c36ddc267f59ca75a107,"SCRUM: Montymise code
       fix mysql_change_user() for old clients


include/mysql_com.h:
  Mover global defines here
libmysql/libmysql.c:
  Remove end spaces from all lines
scripts/mysql_fix_privilege_tables.sh:
  Move password modification to separate alter table
sql/mini_client.cc:
  Defines, fold long lines
sql/mysqld.cc:
  Backup old scramble for mysql_change_user to work from old clients
sql/password.c:
  Several minor optimizations
sql/sql_acl.cc:
  Remove ending spaces
sql/sql_class.h:
  Add old scramble for mysql_change_user to work with old clients
sql/sql_parse.cc:
  Remove end spaces.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,d3149736eb4089e4e85f546d056658b1068e09b9,"WebCore:

        Reviewed by Oliver Hunt.

        - add ""(anonymous)"" to the renderName of anonymous table cells, rows and sections

        * rendering/RenderTableCell.h:
        (WebCore::RenderTableCell::renderName):
        * rendering/RenderTableRow.h:
        (WebCore::RenderTableRow::renderName):
        * rendering/RenderTableSection.h:
        (WebCore::RenderTableSection::renderName):

LayoutTests:

        Reviewed by Oliver Hunt.

        - updated results to reflect which table parts are anonymous



git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@26998 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
dart-lang/sdk,4a59e13a84937b6f08582672c748faf92f964d80,"Issue 19799. Merge getter/setter pairs into fields when create missing overrides.

R=paulberry@google.com
BUG= https://code.google.com/p/dart/issues/detail?id=19799

Review URL: https://codereview.chromium.org//563333002

git-svn-id: c93d8a2297af3b929165606efe145742a534bc71@40220 260f80e4-7a28-3924-810f-c04153c831b5
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
libvirt/libvirt,2ec6faea798b2a7d8986b7a958e781b54d8a8070,"qemu_hotplug: separate Chr|Lease from other devices in DetachDevice switch

The Chr and Lease devices have detach code that is too different from
the other device types to handle with common functionality (which will
soon be added at the end of qemuDomainDetachDeviceLive(). In order to
make this difference obvious, move the cases for those two device
types to the top of the switch statement in
qemuDomainDetachDeviceLive(), have the cases return immediately so the
future common code at the end of the function will be skipped, and
also include some hopefully helpful comments to remind future
maintainers why these two device types are treated differently.

Any attempt to detach an unsupported device type should also skip the
future common code at the end of the function, so the case for
unsupported types is similarly changed from a simple break to a return
-1.

Signed-off-by: Laine Stump <c23361c43fbf79fed83e8b76173707b083d6caf5@laine.org>
ACKed-by: Peter Krempa <2cf5c04c61aa466e4a47bfedc747d17279c72ffc@redhat.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
elementary/website,25ecec825cb7cd0fd0f0a11b2959b98adeea9465,"Fix #903: Never have to modify the links directly again (#1349)

* Never have to modify the links directly again

* Chart Milestone

* Disable the chart with 1 line change.

* Remove duplicate magnet link
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
styled-components/styled-components,5742428ad9389bcb3217ccb03d4fea001827f908,"remove trailing commas for functions

They're not supported in ES5, which is tested against in the node
versions included by the styled-components CI. Also disabled an
eslint rule that was conflicting with what prettier was doing.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
parapluu/Concuerror,1594fad4ae20c4b90073654559b826fc880186fa,"Avoid wasteful computation

When planning more schedulings, Concuerror was always
creating an updated vector clock regardless of whether
it was needed by the planning logic. This patch makes
sure that a new vector clock is calculated only when needed.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,8273a33818244f231767bc6e5e073a2c1fd1bb96,"Add item tag to autofill dropdrown item

This change is no-op as we are always creating the autofill suggestion
setting the itemTag to an empty string which'd result in the itemTag
text view's visibility to be set to GONE.

In a follow-up CL, we'll add the itemTag parameter to the
AutofillPopupBridge and populate the autofill suggestion with it. This
will be used to display the offer text in the autofill dropdown.

Bug: 1112095
Change-Id: Idbbc08565a4911d76264f3fc33e688228601e5b7
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2350147
Reviewed-by: Bo <bc579652988c4c89a85c01792240e330d2e727f7@chromium.org>
Reviewed-by: Rouslan Solomakhin <f43eb1c45d6bbc4fdf70b71cb8eb2d8be4d0f5b6@chromium.org>
Reviewed-by: Dominic Battré <11522016dc637b67b78946baf6f3c18d584fd07c@chromium.org>
Reviewed-by: Friedrich [CET] <89bbae4d60f4338eae60b11e9f98bde6470c07a5@chromium.org>
Reviewed-by: Jared Saul <e23321a62e21d7660fe4656de7c216b860aa74a9@google.com>
Commit-Queue: Siddharth Shah <f3deb63e0f3fc8495fba3ee1f6468922eb1ef00f@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#798306}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
alphagov/specialist-publisher-rebuild,80ab1cca50a6d472a4b382415eed90f5e4f0df83,"Replace boolean with polymorphism

There're a few parts to this.

Boolean arguments are hard to read. If they're the only option available, they
should probably be keyword arguments so that their intention is as clear in the
method's use throughout the codebase as it is in the method's definition.

Conditional control flow has a habit of growing in complexity and becoming
unreadable. For that reason, some people prefer to avoid introducing it in the
first place. A fine example of conditional logic that's grown to be difficult
to understand is in PublishingApiFinderPublisher#call, in one of the files
affected by this commit, and some of the conditionals I've removed here already
live inside nested conditionals themselves.

This project favours the use of methods over direct access to
`@instance_variables`. I assume that's because
- on their own, even if never changed, methods're visually less noisy
- methods're easier to swap out with a different implementation, without having
  to remove all the `@`s

The Logger object is there for the using and is preferred to both
- passing boolean arguments, and
- adding conditionals
using objects like the Logger often negates the need for conditionals since the
particular flavour of Logger we send our messages to can decide how to handle
them.

A note on keyword parameters. Personally I'd say these are preferable when
- the typical values expected as arguments don't speak for themselves,
- the name of the method doesn't imply what its arguments should be,
- and also possibly when the arguments are optional
It does appear to be conventional across GOV.UK code to use a keyword for
a `logger` argument, so I've used the same style here.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,d30ea5bad57da6f679468cb59144705a6be16c74,"        Reviewed by John

        <rdar://problem/3745498> HTMLCompose: Can't edit new empty message (and typing eventually crashes)
        <rdar://problem/3746408> HTMLCompose: cannot type in message body of new messages (and tabbing causes a crash.)

        * kwq/KWQKHTMLPart.mm:
        (KWQKHTMLPart::setDisplaysWithFocusAttributes): Add in some smarts to look around for
        a good place to put the caret if focus is turning ""on"", the part is contentEditable,
        and it does not currently have a selection. This has the effect of flashing the caret
        in a contentEditable view automatically without requiring the programmer to set a
        selection explicitly. This also fixes the bug listed above. Both are cases where the
        bad behavior happened since the editing code tried to process input without an active
        selection. I always took the extra step of setting the selection explicitly when
        opening new windows in programs like Blot, but it seems silly to require developers to
        do this in general. With this patch, they no longer need to.


git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@7168 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/picatrix,f8df439a7701961152483df4f01d6b1f6f037e72,"Added basic files and a simple notebook to introduce the subject

Adding a simple notebook with a primer on colab/jupyter as well as some basic files for the project",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
snapcore/snapd,3163639401275e04aa076a3e6616a633a95fdd8b,"interfaces/{desktop-legacy,unity7}: adjust for new ibus socket location

IBus 1.5.22 changed the abstract socket path. This version is currently
in Ubuntu 20.04 and while the apparmor ibus abstraction in 20.04 was
adjusted for this path, snapd uses a subset of that abstraction and
needs a corresponding update. This provides that update.

References:
https://bugs.launchpad.net/ubuntu/+source/snapd/+bug/1580463/comments/37
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
GNOME/gnome-system-monitor,b5dc3716e2cf9bbc52e03a5536be1daa63e6a603,"Updated traditional Chinese translation.

2003-01-26  Abel Cheung  <maddog@linux.org.hk>

	* zh_TW.po: Updated traditional Chinese translation.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
crate/crate,2df19cba5acf7444dbbad5eb0e88e4d13bc49b73,"Share a single event loop group across netty servers

We usually have at least 3 netty servers running:

- PostgreSQL
- HTTP
- Internal Transport

Each had its own event loop group with dedicated worker threads.
With the exception of blob uploads, all operations on the netty threads
are non-blocking, so we can reduce the amount of threads we create by
sharing the workers across netty servers.

This should reduce the footprint of CrateDB a bit without affecting the
performance in a negative way.

This also marks the http worker_count setting as deprecated internally.
We didn't expose it in the documentation so there is no change log
entry. But to avoid breaking upgrades in case some users used it anyway
it is kept internally for the time being.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
blueliquiddesigns/gravity-forms-pdf-extended,d101fd98f30628bf24c6c209ce9c0b1fbcc209cf,"Standardise all AJAX authentication to prevent repeat code

We're now using Helper_Misc::handle_ajax_authentication for all AJAX authentication which checks user capabilities and does an Nonce check (prevents CORS).

We also adding missing unit tests for AJAX endpoints and fixed up an endpoint that didn't have an nonce.

Resolves #515
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
vinriviere/m68k-atari-mint-binutils-gdb,76dfed02aaee5074dc79c28c0224fd0a2bf0dd30,"[AArch64 disassembler] Add missing checks of undefine encodings on
st1/st2/st3/st4 instructions.

opcodes/

	* aarch64-dis.c (aarch64_ext_ldst_elemlist): Check H/S undefined
	instructions.

binutils/testsuite/

	* binutils-all/aarch64/aarch64.exp: New test driver for AArch64.
	* binutils-all/aarch64/unallocated-encoding.s: New testcase.
	* binutils-all/aarch64/unallocated-encoding.d: Ditto.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,413ee3b48ab582ffea33e7e140c7a2c5ea657e9a,"perf_counter: Make sure we dont leak kernel memory to userspace

There are a few places we are leaking tiny amounts of kernel
memory to userspace. This happens when writing out strings
because we always align the end to 64 bits.

To avoid this we should always use an appropriately sized
temporary buffer and ensure it is zeroed.

Since d_path assembles the string from the end of the buffer
backwards, we need to add 64 bits after the buffer to allow for
alignment.

We also need to copy arch_vma_name to the temporary buffer,
because if we use it directly we may end up copying to
userspace a number of bytes after the end of the string
constant.

Signed-off-by: Anton Blanchard <14deb5e5e417133e888bf47bb6a3555c9bb7d81c@samba.org>
Signed-off-by: Peter Zijlstra <645ca7d3a8d3d4f60557176cd361ea8351edc32b@chello.nl>
LKML-Reference: <3a322c80acc4c5c95ab83dc6b9a214795fc0c884@samba.org>
Signed-off-by: Ingo Molnar <9dbbbf0688fedc85ad4da37637f1a64b8c718ee2@elte.hu>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
theforeman/puppet-foreman,d844d662365e6513465e73cfc875e223518f2232,"get environment fact value from puppet node file

Adds a new environment ""fact"" value from the node file,
e.g $puppetdir/yaml/node/server.example.com

Useful if we just want to send fact with --push-facts option",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
ray-project/ray,4b856fa41614f5e4ff819ec83e251c9aefd5faef,"[Core]Async updating issue fixed for actor's num_restart (#10176)

* bug fixed for num_restart updating

* add log

* log updated

* lint

* fixed

* Update src/ray/gcs/gcs_server/gcs_actor_manager.cc

Co-authored-by: Stephanie Wang <eca4a1deeebad39ac96951cf16f96bc52c44a64a@cs.berkeley.edu>

* bug fixed

* bug fixed

* test passed

Co-authored-by: Stephanie Wang <eca4a1deeebad39ac96951cf16f96bc52c44a64a@cs.berkeley.edu>",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
opencog/link-grammar,8ba20fa2de1be15cb7229431545dc5cb9be2585f,"pp_prune(): Implement efficiency hack comment for rule_satisfiable()

The comment (originally from version 3) mentions that once
rule_satisfiable() is false, it continues to be false.

In our case, since we don't delete connectors from the cms table,
if rule_satisfiable() is true it continues to be true.

So once its result is known, remember that and act accordingly.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
LFPy/LFPy,c85674c8dafe32c0b04ccbae9ddf6ae59dea51e6,"compute magnetic fields from iaxial via vmem (#70)

* compute magnetic fields from iaxial via vmem

* added mu attribute to MEG class

* rewrote LFPy.MEG.calculate_H_from_iaxial to work with LFPy.Cell.get_axial_currents_from_vmem

* removed commented out code
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
pantsbuild/pants,f64ac6c28478c7611ae3ce656d5e177e0d22a093,"Register `goal2` as `goal` if in v2-exclusive mode. (#9164)

Requires a little hackery, but provides a much better experience
to users who don't have the v1 baggage.

Note that ""v2 exclusive"" means that --v2 --no-v1
AND backend_packages==[]. So mixed-mode use is unaffected.
E.g., setting --no-v1 if you still have anything in your backend_packages
will not trigger this.

Therefore this should only affect repos that have no v1 legacy at all.


",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,518fbd02a5482dbcc5ddbaec4124b53a5df75de8,"Merge tag 'tegra-for-3.10-defconfig' of git://git.kernel.org/pub/scm/linux/kernel/git/swarren/linux-tegra into next/soc

From Stephen Warren <swarren@wwwdotorg.org>:

ARM: tegra: defconfig changes

Various new features are enabled:

* Tegra114 support.
* Various PMICs and related options for Tegra114 platforms.
* KEYBOARD_GPIO, mainly as a suspend wakeup source.
* tegra_defconfig is rebuilt based on v3.9-rc1, which causes various
  layout changes.

This branch is based on v3.9-rc1.

* tag 'tegra-for-3.10-defconfig' of git://git.kernel.org/pub/scm/linux/kernel/git/swarren/linux-tegra:
  ARM: tegra: defconfig updates

Signed-off-by: Arnd Bergmann <f2c659f01951776204a6c5b902787d9019fbeebd@arndb.de>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,21b3fb22fb360dc6205bb8585d0a45046e245aec,"Mixed Content: Re-allow non-webby URLs in IFrames.

We settled on this compromise in https://src.chromium.org/viewvc/blink?revision=178148&view=revision
and it regressed sometime between then and now. I've added a layout test
(which I should have done in the first place) to ensure that doesn't
happen again.

This CL also changes the test driver to accept '.https.html' as an
HTTPS-by-default toggle. This is a nice addition to the existing functionality
that doesn't force us to put HTTPS-by-default tests into a separate directory.

BUG=422213,318788

Review URL: https://codereview.chromium.org/657353002

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@184265 bbb929c8-8fbe-4397-9dbb-9b2b20218538
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
ampproject/amphtml,ee9ef4449122459dfb69951e1b103407c855bdb8,"Validator rollup (#18779)

* cl/216403657 Add comment to validator.proto re: re

* cl/216575865 Validate HTML tag in engine instead o

* cl/216616005 Revision bump for #18633

* cl/216926472 Revision bump for #18703

* cl/217200459 Revision bump for #18707

* cl/217335145 Add new validator rules for validatin

* Fix lint errors.

* Fix bad merge.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,0332c0d48dcc7cf10808c17dee986bcf4583306e,"Pass through content URI when we have one.

Sometimes offline pages are displayed from a content URI instead of
opening a file from our offline page store.  The user might then press
the ""share"" menu.  When they do, we should use the content URI to
share the page by instead of using a file path (since we have no file path).

This change will pass back the content URI instead of just disabling sharing.
Unit tests are included.

Bug: 817608
Change-Id: I1d788a83de3aafe978b37374ec22d77ad328b59d
Reviewed-on: https://chromium-review.googlesource.com/962990
Commit-Queue: Peter Williamson <f6b3688eb54935961c62b2202b6ebacbb8039f0f@chromium.org>
Reviewed-by: Jian Li <6e16e067557ac46ce9aa6765bee97933aa7f4d7a@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#545115}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
colinsc/koha,e8522d8231ad096f4cc25b2a7aee8466d03c5bc2,"Bug 26478: Display issue with buttons on the self checkout screens

This patch adds missing Bootstrap classes to a few buttons on the self
checkout page. Without the classes the buttons are not styled correctly.

To test, apply the patch and open the self checkout page for a patron
with multiple checkouts, some renewable and some non-renewable.

In the table of the user's checkouts the ""Renew item"" button should be
styled as a green button. The ""Check in item"" button should be styled as
a blue button.

Try to check out an item which cannot be circulated. On the page warning
you ""Item cannot be checked out,"" the ""Return to account summary"" button
should be styled as a blue button.

Signed-off-by: David Nind <david@davidnind.com>

Signed-off-by: Katrin Fischer <katrin.fischer.83@web.de>

Signed-off-by: Jonathan Druart <90effa772b5c8a7a3420e6b7ea56e265888c5743@bugs.koha-community.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,4d23322a0b8d0f40819dc02ea15a732a78b0a1c0,"perf hists: Rename hist_entry__add_pair arguments

The current logic is to attach pair to the leader hist_entry.

Arguments of hist_entry__add_pair function were placed the other way
round.. driving me crazy.

I.e. list_add_tail expects (new_node, head).

Signed-off-by: Jiri Olsa <2c6594f608aa3d41e98d48846a6328831f7084ad@redhat.com>
Cc: Corey Ashford <d8c6f216c17042adc228efa9f1d34ca50bd37e4b@linux.vnet.ibm.com>
Cc: Frederic Weisbecker <e8a1bf9163cb25e93cfd6540f223b3872ea7ee55@gmail.com>
Cc: Ingo Molnar <9dbbbf0688fedc85ad4da37637f1a64b8c718ee2@elte.hu>
Cc: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@kernel.org>
Cc: Paul Mackerras <19a0ba370c443ba08d20b5061586430ab449ee8c@samba.org>
Cc: Peter Zijlstra <645ca7d3a8d3d4f60557176cd361ea8351edc32b@chello.nl>
Link: http://lkml.kernel.org/r/1355404152-16523-3-git-send-email-2c6594f608aa3d41e98d48846a6328831f7084ad@redhat.com
Signed-off-by: Arnaldo Carvalho de Melo <293abb6b76d7791c0732cc517d38c4b5c734b87f@redhat.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/spark,dd77e278b99e45c20fdefb1c795f3c5148d577db,"[SPARK-11335][STREAMING] update kafka direct python docs on how to get the offset ranges for a KafkaRDD

tdas koeninger

This updates the Spark Streaming + Kafka Integration Guide doc with a working method to access the offsets of a `KafkaRDD` through Python.

Author: Nick Evans <me@nicolasevans.org>

Closes #9289 from manygrams/update_kafka_direct_python_docs.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
maas/maas,1239d83a858c9db78d7c8df1a012eda88f7c48c1,"[r=andreserl][bug=1061977][author=smoser] on intel, do not send 'console=ttyS0' (or console=tty1)

as described in LP: #1061977, passing console=ttyS0 to a system that does not
have serial hardware can result in writes to /dev/console failing.  During
enlistment and commissioning, that can also cause those stages to fail as
the enlistment/commissioning process tries to write to stdout, which is attached
to /dev/console by upstart.

This change gives evidence to the requirement for LP: #1044503, as the
only way a user can now add 'console=ttyS0' is by editing files in
/usr/share/pyshared/provisioningserver/pxe which will be overwritten on
package upgrade.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
kdave/btrfs-progs,581e2c16a3b1239bd6170fbca1c15c733d6bd634,"btrfs-progs: free-space-cache: Don't panic when free space cache is corrupted

In btrfs_add_free_space(), if the free space to be added is already
here, we trigger ASSERT() which is just another BUG_ON().

Let's remove such BUG_ON() at all.

Reported-by: Lewis Diamond <b1c1d8736f20db3fb6c1c66bb1455ed43909f0d8@lewisdiamond.com>
Signed-off-by: Qu Wenruo <668a4a6da3341b25f8dc67d6a1b3c7eba3092599@suse.com>
Reviewed-by: Nikolay Borisov <142453373c3b88d8ff81b1a9e73f7ad113f58c91@suse.com>
Signed-off-by: David Sterba <a2ce9d316ca04d17b520237d2846a218b8284e52@suse.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
qtproject/qtqa-gerrit,a80101b8958e7035a0490794754fe84da35e5cc6,"Migrate accounts to NoteDb (part 1)

Always write account updates to both backends, ReviewDb and NoteDb.

In NoteDb accounts are represented as user branches in the All-Users
repository. Optionally a user branch can contain a 'account.config' file
that stores account properties, such as full name, preferred email,
status and the active flag. The timestamp of the first commit on a user
branch denotes the registration date. The initial commit on the user
branch may be empty (since having an 'account.config' is optional).

The 'account.config' file is a git config file that has one 'account'
section with the properties of the account:

  [account]
    active = false
    fullName = John Doe
    preferredEmail = john.doe@foo.com
    status = Overloaded with reviews

All keys are optional. This means 'account.config' may not exist on the
user branch if no properties are set.

If no value for 'active' is specified, by default the account is
considered as active.

AccountsUpdate is now sending RefUpdatedEvent's when an account is
updated. ReindexAfterRefUpdate receives the events and takes care to
evict the updated accounts from the account cache, which in turn
triggers reindex of the accounts. This is why AccountsUpdate no longer
needs to evict the updated accounts itself from the account cache. Since
AccountsUpdate doesn't reindex accounts on its own anymore the
ServerNoReindex factory can be removed.

To support a live migration on a multi-master Gerrit installation, the
migration of accounts from ReviewDb to NoteDb is done in 3 steps:
- part 1 (this change):
  * always write to both backends (ReviewDb and NoteDb)
  * always read accounts from ReviewDb
  * upgraded instances write to both backends, old instances only
    write to ReviewDb
  * after upgrading all instances (all still read from ReviewDb)
    run a batch to copy all accounts from the ReviewDb to NoteDb
- part 2 (next change):
  * bump the database schema version
  * migrate the accounts from ReviewDb to NoteDb (for single instance
    Gerrit servers)
  * config option to control whether accounts are read from ReviewDb or
    NoteDb
- part 3:
  * remove config option to control whether accounts are read from
    ReviewDb or NoteDb and always read from NoteDb
  * delete the database table

Change-Id: I2e0b13feb3465e086b49b2de2439a56696b5fba9
Signed-off-by: Edwin Kempin <d43fb6c98c97e553b671ed9a9318100f1de386e7@google.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,bddb028a3dbf3e8f03b69593e1567235dc7854b7,"Remove unused NTP UMA stats.

This deletes four user actions that were added long ago and are no
longer used:
 - MobileFirstEditInOmnibox
 - MobileFocusedFakeboxOnNtp
 - MobileFocusedOmniboxOnNtp
 - MobileFocusedOmniboxNotOnNtp

This also starts recording the FocusLocation user action when the omnibox is
focused; this essentially combines MobileFocusedFakeboxOnNtp,
MobileFocusedOmniboxOnNtp, and MobileFocusedOmniboxNotOnNtp into a single
action.

BUG=408176

Review URL: https://codereview.chromium.org/1491393002

Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#363041}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
libvirt/libvirt,9eba11681702baadfe36dff1623e3f8b5b1ae45d,"news: remove kernel version reference from switchdev entry

The functionality was added in 4.8, but due to a rename of
the DEVLINK_CMD_ESWITCH_GET constant in the kernel headers,
the headers from kernel 4.11 are required by the libvirt code.

Remove the reference from the news entry, since it could be
misleading.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/bookkeeper,bd798624bc6d65862c6d3b9abcdf5f492531d291,"Improve Travis Build

Descriptions of the changes in this PR:

*Problem*

There are a couple of problem with current travis build

- apache/bookkeeper#1223 introduce `set -e` on script section, which it cause some weird early-exiting problem.
- we run two installs. one is the default install by travis, the other one is install with apache-rat/spotbug checks in script section, which make the build slow.
- travis_retry and travis_wait spread across different commands in the script section

*Solution*

- move build logic into a bash script file and invoke the script
- skip install section in travis

*Result*

This reduces travis build time by 10+ mins and make it stable

NOTES:

The changes under `site` and `stream/distributedlog` are used `empty commits` to trigger corresponding builds in travis.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1224 from sijie/travis_wait
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
GNOME/nautilus,51f099caeb8069efc706c9ed9f0a1b781f47f25f,"	Much context-menu-related cleanup and some bug fixes.

	2734: comment fm_directory_view_add_context_menu_item

	* libnautilus-extensions/nautilus-gtk-extensions.h,
	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_menu_append_separator): New convenience function
	for appending a separator to a GtkMenu.
	(nautilus_gtk_menu_set_item_visibility): New convenience function
	for hiding/showing a menu item in a GtkMenu.

	* src/file-manager/fm-directory-view.h:
	Removed overridable function pointers for
	create_background_context_menu_zoom_items and
	create_background_context_menu_background_items; I made sure the
	API supports what these were used for in a more general way.
	Added overridable function pointer for supports_zooming. Now the
	base class handles disabling/removing things for subclasses that
	don't support zooming.
	Changed fm_directory_view_add_context_menu_item to
	_insert_context_menu_item and gave it a position parameter.
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize_class): removed function pointer
	assignment for deleted calls; added function pointer assignment
	for new supports_zooming call.
	(select_all_callback): Removed this function because I removed
	the item from the context menu (as per bug 1794).
	(fm_directory_view_bump_zoom_level),
	(fm_directory_view_zoom_to_level),
	(fm_directory_view_set_zoom_level),
	(fm_directory_view_restore_default_zoom_level),
	(fm_directory_view_can_zoom_in), (fm_directory_view_can_zoom_out):
	Bail out without calling overridable function pointer for these
	calls if supports_zooming is FALSE.
	(finish_inserting_menu_item): New function, generalization of
	finish_appending_menu_item that takes a position.
	(finish_appending_menu_item): Now calls finish_inserting_menu_item.
	Also, renamed this from finish_adding_menu_item.
	(compute_menu_item_info): Removed ellipsis from ""Show Properties""
	and added comment explaining why it needs no ellipsis.
	(append_gtk_menu_item_with_view),
	(append_selection_menu_subtree): Update for adding -> appending rename.
	(fm_directory_view_insert_context_menu_item): Generalization of
	_append_context_menu_item that takes a position parameter.
	(fm_directory_view_append_context_menu_item): Renamed from
	_add_context_menu_item, and now calls _insert_context_menu_item.
	(real_create_background_context_menu_zoom_items),
	(real_create_background_context_menu_background_items):
	Removed these functions. These menu items are no longer treated as
	special cases.
	(fm_directory_view_real_create_background_context_menu_items):
	Now inserts zooming items only if supports_zooming is TRUE;
	resurrected the accidentally-obliterated ""Reset Background"" item.
	(add_separator): Removed this function in favor of
	nautilus_gtk_menu_append_separator.
	(add_application_to_gtk_menu), (add_component_to_gtk_menu),
	(create_open_with_gtk_menu),
	Update for API renames.
	(fm_directory_view_real_create_selection_context_menu_items):
	Use nautilus_gtk_menu_append_separator.
	(fm_directory_view_supports_zooming): New function, calls
	virtual function.
	(fm_directory_view_real_supports_zooming): New function,
	returns TRUE.

	* src/file-manager/fm-icon-view.c:
	(fm_icon_view_create_background_context_menu_items):
	Remove ""Icon Captions..."" item per bug 1794

	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_create_background_context_menu_zoom_items),
	(fm_desktop_icon_view_create_background_context_menu_background_items),
	(bump_zoom_level), (zoom_to_level), (restore_default_zoom_level),
	(can_zoom_in), (can_zoom_out): Removed these functions due to
	reworking the responsibilities of super- and subclass.
	(real_supports_zooming): New function, returns FALSE.
	(fm_desktop_icon_view_initialize_class): Remove overrides of various
	functions; add override for supports_zooming.
	(new_folder_menu_item_callback): Removed this now that it inherits
	New Folder from parent.
	(fm_desktop_icon_view_create_background_context_menu_items):
	Cleaned this up to start with inherited and make modifications
	as necessary rather than reimplementing the whole thing.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
andrewgregory/pacman,b58489d29a1898a4bff1b5da6ca4bfb14003dbfe,"scripts/library: add human_to_size

This is a bash wrapper around an awk function that parses human readable
sizes and returns their representative values in bytes, as a string. A
small test harness is added to validate the functionality.

Signed-off-by: Dave Reisner <039ef2e3eb5f1b52facdf6248524cc5fe7bd1087@archlinux.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
SixTrack/SixTrackLib,a152d696b7c5be484bd5314ebd4510066255d70b,"python/sixtracklib: unifies string handling between ctypes/C99 and Python

- adds two helper functions to stcommon which encode and decode
  python (unicode) strings to bytes strings compatible with ctypes.c_char_p

- Avoid explicit encoding / decoding in all parts of python/sixtracklib
  and use the helper functions instead

- re-apply the linter after reformating and simplyfing the source code
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,9075438471f32a6b9c9912ee022a48c8da4f3c49,"Automating gain AudioParam with linearRampToValueAtTime introduces buzzing distortion
https://bugs.webkit.org/show_bug.cgi?id=100885

Reviewed by Kenneth Russell.

AudioParamTimeline needs to use double-precision for time-values to avoid drift and precision issues.

Covered by existing tests.

* Modules/webaudio/AudioParam.cpp:
(WebCore::AudioParam::calculateTimelineValues):
* Modules/webaudio/AudioParamTimeline.cpp:
(WebCore::AudioParamTimeline::valueForContextTime):
(WebCore::AudioParamTimeline::valuesForTimeRange):
(WebCore::AudioParamTimeline::valuesForTimeRangeImpl):
* Modules/webaudio/AudioParamTimeline.h:
(AudioParamTimeline):

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@133365 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
alphagov/collections,466c0804a6e7527b1064dd2c2bc6318ebb3fe1e4,"Improve readability of code

Based on feedback:

- Update comment to match method name and use correct 'there'
- Use precence of state.subsection rather than using an indexOf for
  explicit clarity
- Use a clearer variable name for data cache
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,e2dd9dda0c2897d9fa0630584b25d81ed2c1c068,"Include a better sample JSON dataset in traceline.

The previous startup-off2.json didn't have stack traces.  It was also quite large, it was unfiltered and contained every single system call event.

Include a program to filter a JSON data set to only include events that took a worthwhile amount of time.  This greatly reduces the size of the JSON data.

A new filtered JSON dataset startup-release.json is included, much smaller and with stack traces.

Added an ignore for checkdeps on traceline/.

Review URL: http://codereview.chromium.org/20535

git-svn-id: de016e52bd170d2d4f2344f9bf92d50478b649e0@10094 0039d316-1c4b-4281-b951-d872f2087c98
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
andrewgregory/pacman,fa933df65b9e024ec3291fcc1f995be3dc000e0c,"pactest: fix gensync

gensync generated a sync.db file with PKGINFO syntax, this is not quite what
pacman expects.

Also the file was only added to the Server path:
	root/var/pub/sync/sync.db
but it was not available in the normal sync db path:
	root/var/lib/pacman/sync/sync.db

Change gensync() to generate var/lib/pacman/sync/sync.db and then copy it to
var/pub/sync/sync.db (this is used by sync200 -Sy test).

Signed-off-by: Dan McGee <2591e5f46f28d303f9dc027d475a5c60d8dea17a@archlinux.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,8c123e549fd1533f371b7877d4c0458ba3a30b22,"drm/i915: Capture current context on error

On error, this represents the state of the currently running context at
the time it was loaded.

Unfortunately, since we're hung and can't switch out the context this
may not tell us too much about the most current state of the context,
but does give clues about what has happened since loading.

Thanks to recent doc updates, we have a little more confidence regarding
what is actually in this memory, and perhaps it will help us gain more
insight into certain bugs. AFAICT, the most interesting info is in the
first page. To save space, we only capture the first page. In the
future, we might want to dump more.

Sample of the relevant part of error state:
render ring --- HW Context = 0x01b20000
[0000] 00000000 1100105f 00002028 ffff0880
[0010] 0000209c feff4040 000020c0 efdf0080
[0020] 00002178 00000001 0000217c 00145855
[0030] 00002310 00000000 00002314 00000000

v2: Move error collection to the ring error code
Change format of dump to not confuse intel_error_decode (Chris)
Put the context error object with the others (Chris)
Don't search bound_list instead of active_list (chris)

v3: extract and flatten context recording (daniel)
checkpatch related fixes for the copypasta in debugfs

v4: bug in v3 (Daniel)
-       if ((ring->id == RCS) && error->ccid)
+       if ((ring->id != RCS) || !error->ccid)

References: https://bugs.freedesktop.org/show_bug.cgi?id=55845
Reviewed-by (v2): Chris Wilson <chris@chris-wilson.co.uk>
Signed-off-by: Ben Widawsky <73675debcd8a436be48ec22211dcf44fe0df0a64@bwidawsk.net>
Cc: Daniel Vetter <c1b6782c4af8f0673da8923a0702a1832e5940f4@ffwll.ch>
[danvet: Bikeshed away the redudant parenthese around ring->id != RCS]
Signed-off-by: Daniel Vetter <c1b6782c4af8f0673da8923a0702a1832e5940f4@ffwll.ch>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,23b94b967f118bef941369238f33c8140be46539,"locking, rtmutex.c: Documentation cleanup

Two minor updates on functions documentation:
 - Updated documentation for function rt_mutex_unlock(), which contained an
   incorrect name
 - Removed extra '*' from comment in function rt_mutex_destroy()

[ Impact: cleanup ]

Signed-off-by: Luis Henriques <f59c32834deac78b0d5410e9f6b5d136d75e9fcc@sapo.pt>
Cc: Steven Rostedt <43232e92d70cc7aa53504ad0397085ee47bad87f@goodmis.org>
LKML-Reference: <e443cdf93ef6f36cfa85e9996df24431e801ffad@hades.domain.com>
Signed-off-by: Ingo Molnar <9dbbbf0688fedc85ad4da37637f1a64b8c718ee2@elte.hu>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
okcashpro/okcash,fcc547346a9c9f66855b9c8584e405291c864287,"Move QMAKE_LIBS_QT_ENTRY adjustment to bitcoin side of build

It could just as well be on either part of the gitian build, but to safely put it on the Qt side would require bumping the filename, and every gitian user rebuilding it.
v0.5.3.1 put it on the Bitcoin side, and this is easier to work with and keep safe, so I'm moving it.

Use `qmake MINGW_THREAD_BUGFIX=0` to disable
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
colinsc/koha,daf2190a5571fdfbd831258428b3a488736d546f,"Alternate fix for Bug 6522 - search result list broken

- Adding back the colspan removed in a previous commit
- Correcting the scope of two template variables.

Before applying this patch, the search results page in the
staff client will have misaligned headers if AmazonCoverImages
is turned off. After applying this patch headers should
appear correctly with AmazonCoverImages on or off.

Signed-off-by: Liz Rea <c399d7bb1458750875a0eab93ccb0d89287091a7@gmail.com>
Signed-off-by: Chris Cormack <d7aa3da1d5912a8b3f7b831e4f9f40b8b3d7e8b1@catalyst.net.nz>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
qtproject/qtqa,7557ca1a242fe9ecf4479f12e6313dd00a9a3147,"Fix formatting of percentage display in the footer

If the sum of all changes in percent is not an integral number, then the
auto-formatting (title'ifying) of for example ""16.43%"" to ""14 43%"" looks really
odd. Disabling the auto-formatting fixes this as well as the capitalization.

Change-Id: I30cc92ac487726579f7667511cfd5d0baa69a7a6
Reviewed-by: Robin Burchell <c6c19a441d3058e6ae50b2b5c8f5b2cd247e3685@viroteck.net>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
awesomeWM/awesome,c218b1da72019185fdc59df88679690e907acc12,"Test and fix swapping clients

The code in luaA_client_swap() is incorrect, because
luaA_object_emit_signal() already pops the arguments to the signal.
Still, the code here tried to remove the arguments from the Lua stack
again, thereby corrupting the stack (removing more items than there are
in the stack).

Normally, popping more things from the stack than it has entries
silently corrupts the Lua stack. Apparently this doesn't necessarily
cause any immediate issues, because this code has been broken since nine
months and no one noticed. This mistakes was introduced in commit
55190646.

This issue was only noticed by accident. Thus, this commit also adds a
small integration test that exercises this bug. This test catches the
issue, but only on Travis, because there we are building our own version
of Lua 5.3 and that one has assertions enabled.

Signed-off-by: Uli Schlachter <346c0ad49ac8427b61b3b55abbe37dc0ebd524f2@znc.in>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
gem/oq-engine,1514dc56538027e3a2392dd5e60eea1f54246c64,"demos/hazard:

Added READMEs to the 3 logic tree classical demo cases.


Former-commit-id: cc198d32661b2a3dc016de59c212b9529965ff25 [formerly cc198d32661b2a3dc016de59c212b9529965ff25 [formerly 36b4025d0d5c640e09217bbfb2bf1155adb52fcc]]
Former-commit-id: 2aec5ee87ebdd23e62c915e7e8e5796f863d8470
Former-commit-id: 27d18d4fa16d97fdd5f64e08a100862c6412a95b",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
zephyrproject-rtos/zephyr,3d4f213a9c7b227cce88917463c50cdfe0fc89c8,"doc: add sphinx/breathe conf to eliminate warnings

The doxygen/sphinx/breathe processing for API documentation has some
known issues and we've been using a post-processing filter to eliminate
""expected"" warnings.  Sphinx/Breathe 5.0 was updated to support
identifying attributes causing these warnings, so this PR adds a
starting list to get around warnings recently introduced with __syscall
and __syscall_inline (PR #4103).

Signed-off-by: David B. Kinder <c56c8b29908a5b2af1b63001268d73a0b7f972ba@intel.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,53b956446d551e25ea0faf48f51a968609d1c304,"Our behavior is correct with respect to the new cookie RFC.  I'm told
that CFNetwork is going to change this behavior to match every other
browser.

* platform/chromium/http/tests/cookies: Added.
* platform/chromium/http/tests/cookies/double-quoted-value-with-semi-colon-expected.txt: Added.
* platform/chromium/test_expectations.txt:


git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@94733 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
eslint/eslint,ff8a80c8fcbad81151a3d2d247f363c9bfd88136,"Fix: duplicated autofix output for inverted fix ranges (fixes #8116) (#8117)

The padded-blocks rule sometimes produces a fix range where the start index of the range is larger than the end index. Due to the changes in fcc38db469d987e97b668675bf7822c7c0, when source-code-fixer encountered such a range, it would output the text between the end index and the start index twice. This commit ensures that source-code-fixer behaves the same way as it previously did when it encounters an inverted fix range (it should act as if the start and end indices were equal). In the future, we should also update padded-blocks to avoid producing inverted fix ranges.",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
department-of-veterans-affairs/vets-website,3997d572d312481194a49a8fff4dc2295cc3232f,"Set focus on breadcrumbs when visiting connected accounts page (#9699)

## Description
Resolves https://github.com/department-of-veterans-affairs/vets-contrib/issues/1439

## Testing done
Local browser testing

## Acceptance criteria
- [ ] Breadcrumbs are focused after visiting connected accounts page

## Definition of done
- [ ] Events are logged appropriately
- [ ] Documentation has been updated, if applicable
- [ ] A link has been provided to the originating GitHub issue (or connected to it via ZenHub)
- [ ] No sensitive information (i.e. PII/credentials/internal URLs/etc.) is captured in logging, hardcoded, or specs
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
vinriviere/m68k-atari-mint-binutils-gdb,83acabca138ee4ef3dcb7072dd1ed797fdfae4e4,"	* amd64-tdep.c (amd64_convert_register_p): Delete.
	(amd64_init_abi): Use i387_convert_register_p.
	* alpha-tdep.c (alpha_convert_register_p): Return zero for
	eight byte types.
	(alpha_register_to_value, alpha_value_to_register): Do not handle
	eight byte types.
	* i386-tdep.c (i386_convert_register_p): Use i387_convert_register_p.
	* i387-tdep.c (i387_convert_register_p): New.
	(i387_register_to_value, i387_value_to_register): Update comments.
	* i387-tdep.h (i387_convert_register_p): Declare.
	* ia64-tdep.c (ia64_convert_register_p): Return zero for
	builtin_type_ia64_ext.
	(ia64_gdbarch_init): Do not initialize builtin_type_ia64_ext here.
	(_initialize_ia64_tdep): Initialize builtin_type_ia64_ext here.
	* m68k-tdep.c (m68k_convert_register_p): Return zero for
	builtin_type_m68881_ext.
	(m68k_register_to_value, m68k_value_to_register): Update comments.

	* gdbint.texinfo (Register and Memory Data, Target Conditionals):
	Document that gdbarch_convert_register_p should return zero for no-op
	conversions.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
AndroidX/androidx,d2bdcac4d69608ed14497073fd461ffeff38e18c,"Use CameraSelector to check for and enable extensions

 Updates extensions API to now take a CameraSelector when checking
 isExtensionAvailable and enableExtension. The LensFacing is no longer
 pulled from the use case configuration.

Bug: 142839697
Test: Extension tests in AS
Change-Id: I0cc9425c2f09251209a240400f930e809f82bff5
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,fa3745144c63952a19ea709b885d9db328ce8a7e,"DevTools: [CanvasProfiler] show WebGL enum names instead of numbers in the log.

In the canvas profiler trace log replace the GLenum numbers with string enum names wherever possible.
Automatically generate WebGL calls info from the IDL file to find out argument indexes with the type GLenum or GLbitfield.
Add a check to the ""compile_frontend.py"" script to ensure that InjectedScriptCanvasModuleSource.js contains all the generated code.

BUG=248881
R=pfeldman,yurys

Review URL: https://chromiumcodereview.appspot.com/16813004

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@152426 bbb929c8-8fbe-4397-9dbb-9b2b20218538
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/llvm-propeller,a32e3a1acf67c18e5faa2c2523baab271ad40cc9,"[ARM] Add VLDx/VSTx sched defs for machine-schedulers. NFCI

This patch adds missing scheds for Neon VLDx/VSTx instructions.
This will help one write schedulers easier/faster in the future for ARM sub-targets.
Existing models will not affected by this patch.
Reviewed by: Renato Golin, Diana Picus
Differential Revision: https://reviews.llvm.org/D33120

llvm-svn: 303717
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
keybase/client,c9357e36afbbe5ac9614f60eb6c31988cd8a2b50,"Stellar: CancelRequest RPC and mocks (#12839)

* CancelRequest RPC and mocks

* Add remove request command

* Add RequestID in cli rendering

* Compile fix
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
aws/amazon-ecs-agent,c31ebb64fbd29073094ea0457e33a52b0f93e6b9,"export port used for IAM credentials

The documentation for using IAM roles with docker tasks
states that when you are not using the amazon provided ECS OPTIMIZED
image, you need to fiddle with the iptables to route the special
IP 169.254.170.2 PORT 80 to 127.0.0.1:51679

https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html

However, this port is not listed as an exposable port via docker inspect
so it took me a sec to figure it out.  You can map the port manually anyway,
but this change makes things a little more obvious.

Now I'm not sure if this port isn't actually started in the event IAM
roles are not used, but this change shouldn't affect that since nothing
will be listening and the difference is zip.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
cilium-team/cilium,a6e6b6e6f8405eac715e87009944ac3c664a488b,"bpf, perf: use more lightweight barriers

While perf tool itself uses full rmb(), mb() for walking the ring it
turns out they are not needed and haven't been updated in a long long
time, so smp_rmb() and smp_mb() can be used instead which are more
lightweight. Also fix fallback to be generic __sync_synchronize() for
everything non-x86.

Signed-off-by: Daniel Borkmann <3d0f3b9ddcacec30c4008c5e030e6c13a478cb4f@iogearbox.net>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
openstack/python-openstackclient,20ae54045cef136a8d0665aab0d45698e12ed21c,"Add support of setting volume's state

OSC does not support to set volume's state, this
patch is going to add this functionality.

Closes-Bug:#1535213
Change-Id: I5bc1c7e81b8ba61c37f4bfd209fc86c5857fb050
Co-Authored-By: Huanxuan Ao <2bdd42a096644f7194cd3ce9d689ba8575ddfde5@easystack.cn>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,0b5f4e0471079e7fa8ab0eae2d3de9e462a6c8a7,"Add missing cacheinvalidation_proto_cpp target to invalidation_impl and export it to dependents of invalidation_test_support.

Both targets use cacheinvalidation_proto_cpp but invalidation_test_support uses it in it's header(hence export is required).

GN seems to hide the dependency which akalin@ tried to avoid in GYP.
I don't know the reason behind that so I'll ask in BUG=133352 about that independent of this.

BUG=508750

Review URL: https://codereview.chromium.org/1236533003

Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#338507}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apple/swift,43c7334abcb8762ecf720abef9c451fb596828ae,"fix two QoI issues:
 - <rdar://problem/16306600> QoI: passing a 'let' value as an inout results in an unfriendly diagnostic
 - <rdar://problem/16927246> provide a fixit to change ""let"" to ""var"" if needing to mutate a variable

We now refer to an inout argument as such, e.g.:

t.swift:7:9: error: cannot pass 'let' value 'a' as inout argument
  swap(&a, &b)
        ^

we also produce a note with a fixit to rewrite let->var in trivial cases where mutation is
being assed for, e.g.:

t.swift:3:3: note: change 'let' to 'var' to make it mutable
  let a = 42
  ^~~
  var

The note is produced by both Sema and DI.



Swift SVN r27774
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
wongsyrone/lede-1,cc5b3e683ee091b29f6994cc42b2db4c9b90da3d,"Use build suffix on build_dir paths

Adds BUILD_SUFFIX to STAGING_DIR

Signed-off-by: Tathagata Das <tathagata@alumnux.com>

SVN-Revision: 31233
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,d293572ae9f319b8e963ca7384eafb58b90f2d38,"Disallow IO on the cc impl thread and add ScopedAllowIO as needed.
NOTRY=true
BUG=240453

Review URL: https://chromiumcodereview.appspot.com/15074008

git-svn-id: de016e52bd170d2d4f2344f9bf92d50478b649e0@201841 0039d316-1c4b-4281-b951-d872f2087c98
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
GNOME/file-roller,a191443255a7f629f5cbaa87d7ed73368e4d3fe1,"Added Thai (th) translation. Added Thai (th) to ALL_LINGUAS.

2003-05-10  Paisa Seeluangsawat  <paisa@colorado.edu>

        * po/th.po: Added Thai (th) translation.
        * configure.in: Added Thai (th) to ALL_LINGUAS.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,b37595f42ed86e7013fa815fbd7bcda5d2a2b89f,"Remove IDLStructure.pm
https://bugs.webkit.org/show_bug.cgi?id=102642

Reviewed by Adam Barth.

Previously IDLStructure.pm was full of regular expressions to
parse IDL files. Now a new IDL parser is implemented, IDLStructure.pm
just contains several data structures for the IDL parser. We can
move them to IDLParser.pm and thus remove IDLStructure.pm.

No tests. No change in generated code.

Source/WebCore:

* CMakeLists.txt:
* DerivedSources.make:
* DerivedSources.pri:
* GNUmakefile.am:
* WebCore.gyp/WebCore.gyp:
* WebCore.vcproj/MigrateScripts:
* WebCore.vcproj/WebCore.vcproj:
* WebCore.xcodeproj/project.pbxproj:
* bindings/scripts/IDLParser.pm:
(Parse):
(parseInterface):
(parseException):
(parseConst):
(parseAttributeRest):
(parseOperationRest):
(parseOptionalOrRequiredArgument):
(parseExceptionField):
(parseInterfaceOld):
(parseExceptionOld):
(parseAttributeRestOld):
(applyExtendedAttributeList):
* bindings/scripts/IDLStructure.pm: Removed.

Tools:

* WebKitTestRunner/DerivedSources.make:
* WebKitTestRunner/GNUmakefile.am:
* WebKitTestRunner/InjectedBundle/DerivedSources.pri:


git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@135129 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
keycloak/keycloak,37584a24e06a80e6ffa9bb123d7c3c7a31901e50,"unsecure url has principal

KEYCLOAK-2550
Typo in userguide

KEYCLOAK-1928 Kerberos working with IBM JDK

KEYCLOAK-1928 Remove sun.jdk.jgss module

KEYCLOAK-1928 Fix kerberos with adapter on JDK7

KPR-147 - Initial login scenarios around admin password - test

KEYCLOAK-2561 Fix issues with blank password

KEYCLOAK-2559 Missing add/remove button for 'Valid Redirect URIs' in a client settings form

Added simple test for JPA performance (with many users).

Fixed ""re-import"" operation logging.

Fixed for Timer.saveData()

Fixed for Timer.saveData()

ManyUsersTest: ArrayList --> LinkedList

Fix AbstractUserTest

Fix parentheses in login page object

Add tests for IDP initiated login

KEYCLOAK-1040
Allow import of realm keys (like we do for SAML)

KEYCLOAK-2556 Remove required for client create root url and saml endpoint

KEYCLOAK-2555 ForbiddenException when importing test realm or creating test user

KEYCLOAK-2553
Unexpected form behavior while creating a client

KEYCLOAK-2551
Broken navigation links while creating/editing a Client Mapper
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,dbe688e41c4282a43ad6fe876d35b9febcbd0125,"Change default behavior to http cache reset to not reset.

In the case where the previous state of the finch trials was
unknown (when the previous status was not saved previously
due to this feature not being in the code), we had been
defaulting to resetting the cache.  This CL changes that
behavior and only resets when there is a known change to the
cache.  It also improves the testing to use PRE_ tests to
more accurately model reloading behavior rather than relying
on explicitly setting variables.

Also fixes flaky behavior introduced due to cross-process
testing.  Note the TODO regarding the bug to clean up the manner
in which we resolve the race condition.

Bug: 1041542,1041810
Change-Id: I9c40c9be9682b5372e1f3fb2851ef6531802f1bd
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2003249
Commit-Queue: Eric Robinson <84876f8428cb357d7850af6cfc3ac84dfc5a02b6@chromium.org>
Reviewed-by: Shivani Sharma <3671659ea2910ee6f84ffac526d706edaa3ccea5@chromium.org>
Reviewed-by: Maksim Orlovich <e71773a9724be7c114f3c9592720fd960a75d365@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#733822}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
thewtex/TubeTK,ef88b6e873380793e2fac919db2893fefc0c4832,"ENH: Update Slicer's version on Docker

This commit updates the Slicer GIT_TAG in the Dockerfile.
The new image has been built using the build.sh script and
pushed to DockerHub using the push.sh script.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
alphagov/whitehall,6e9a8a56ef63127aaf053a788c4a79a74d4857d5,"Remove redundant migration

The presence of this migration was preventing db:migrate running from a
clean database.

The migration was added in order to remove the ranks table from
preview/production. The ranks table was originally added in commit
13c75e. That commit was reverted in 36e5ec but the migration had already
been run in preview/production. I then added this ""temporary"" migration
in 59af29 but neglected to remove it after running it on
preview/production.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
cahirwpz/mimiker,c54c7758b13173f286a25fb0d109b8c8cdd2f40c,"Cleanups in preparation for moving kernel to virtual address space.

 * Make pmap stuff available for ""mips/boot.c""
 * Move bss section initialization to mips_init.
 * Move ebase & pcpu to correponding section marked as wired.
 * Initialize TLB and interrupts in mips_init.
 * Move gdb helpers to ""mips/boot.c""
 * Move CPU initialization to C code.
 * Add debugger script to print out vm_map segments.
 * Use precalculated values for pmap & vm_map start & end address.
 * Minor function name cleanup in vm and pmap modules.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/filament,c3c8293862a14de3d7b713793626ac9e1cd2f90d,"MaterialInstance now has an optional name.

When no name is provided during instance creation, it does NOT inherit
the name of its parent material. This is because instances should be
lightweight and users can already do instance->getMaterial()->getName().

In a subsequent PR, this feature will be exercised and tested via the
gltfio AssetLoader.

Fixes #2485.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,c417f0242ebe578924a30d4e53d35b5059fed4e7,"[PATCH] cpuset: remove test for null cpuset from alloc code path

Remove a couple of more lines of code from the cpuset hooks in the page
allocation code path.

There was a check for a NULL cpuset pointer in the routine
cpuset_update_task_memory_state() that was only needed during system boot,
after the memory subsystem was initialized, before the cpuset subsystem was
initialized, to catch a NULL task->cpuset pointer.

Add a cpuset_init_early() routine, just before the mem_init() call in
init/main.c, that sets up just enough of the init tasks cpuset structure to
render cpuset_update_task_memory_state() calls harmless.

Signed-off-by: Paul Jackson <223b7f0fa34cb01a774d1d81d388f8c5f831b7fc@sgi.com>
Signed-off-by: Andrew Morton <5c1e68b099950c134891f0b6e179498a8ebe9cf9@osdl.org>
Signed-off-by: Linus Torvalds <69652caca27c8b940640ad396ab71f93cacec34f@osdl.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,ab98c008ac761752cdc27f9eb053419feadeb2f7,"net: phy: fixed_phy: print gpio error only if gpio node is present

It is perfectly ok to not have an gpio attached to the fixed-link node. So
the driver should not throw an error message when the gpio is missing.

Fixes: 5468e82f7034 (""net: phy: fixed-phy: Drop GPIO from fixed_phy_add()"")
Signed-off-by: Hubert Feurstein <cb6d2bb327293f3dc5a37978c881214973f051b8@gmail.com>
Reviewed-by: Andrew Lunn <02e0a999c50b1f88df7a8f5a04e1b76b35ea6a88@lunn.ch>
Signed-off-by: David S. Miller <fe08d3c717adf2ae63592e4c9aec6e3e404d8e3e@davemloft.net>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/llvm-propeller,0bab0538d8cc0de242ed2936a4766930cfc934d2,"[test] Use system locale for mri-utf8.test

Summary:
llvm-ar's mri-utf8.test test relies on the en_US.UTF-8 locale to be
installed for its last RUN line to work. If not installed, the unicode
string gets encoded (interpreted) as ascii which fails since the most
significant byte is non zero. This commit changes the test to only rely
on the system being able to encode the pound sign in its default
encoding (e.g. UTF-16 for Microsoft Windows) by always opening the file
via input/output redirection. This avoids forcing a given locale to be
present and supported. A Byte Order Mark is also added to help
recognizing the encoding of the file and its endianness. Finally the
XFAIL on system-darwin is removed since the test actually passes fine on
Mac OS X and XFAIL was only added because it failed before.

Reviewers: gbreynoo, MaskRay, rupprecht, JamesNagurne, jfb

Subscribers: dexonsmith, llvm-commits

Tags: #llvm

Differential Revision: https://reviews.llvm.org/D68472
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
jquery/jquery,9e15d6b469556eccfa607c5ecf53b20c84529125,"Event: Use only one focusin/out handler per matching window & document

The `doc` variable in:
https://github.com/jquery/jquery/blob/3.4.1/src/event/focusin.js#L30
matched `document` for `document` & `window` for `window`, creating two
separate wrapper event handlers & calling handlers twice if at least one
`focusout` or `focusin` handler was attached on *both* `window` & `document`,
or on `window` & another regular node.

Also, fix the ""focusin from an iframe"" test to actually verify the behavior
from commit 1cecf64e5aa415367a7dae0b55c2dd17b591442d - the commit that
introduced the regression - to make sure we don't regress on either front.

Fixes gh-4652
Closes gh-4656",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
Tape-Worm/Gorgon,f909a9ba2e50b292be8c24b8b549431b12ffcc84,"- Removed _clearOnInit being set to true so that the textures do not get automatically cleared on first initialization (the cause for slowdown for Images/RenderImages). This might be a breaking change for any project who creates an Image/RenderImage but does not clear it manually, however since the Gorgon demos push that they should be cleared, I do not think this will be a problem.

Notes: Might also remove the actual usage code in Initialize, because I don't think it would ever get called under normal circumstances. Have to test this!

git-svn-id: 64cc320d9ecd7aad470f8b18be342a8e58536f88@344 a61f9e97-bd4c-0410-8c65-85b29eaa70ff
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
vinriviere/m68k-atari-mint-binutils-gdb,479f0f18d4a77e04b32cc7062ee31310b876e16b,"	* defs.h, infrun.c (wait_for_inferior), top.c:  Call
	target_wait_hook to allow GUI to handle blocking for inferior.  Call
	call_command_hook in execute_command to provide means for wrapping
	commands with GUI state change updates.
	* gdbtk.c (gdb_cmd):  Force GUI into idle mode when errors occur.
	* (gdb_stop):  New tcl command to stop the target process.
	* (x_event, gdbtk_wait):  Allow GUI to interrupt gdb out of target
	waits.
	* (gdbtk_call_command):  Wrapper around command processing to
	alert GUI of target state changes.
	* (gdbtk_init):  Get the fd of X server for doing async
	notification of X events (via x_event).  Setup new hooks.
	* gdbtk.tcl:  Add scrollbars to assembly and command windows.
	* Change window foreground & background colors.
	* Create margin tag for breakpoints in source and assembly windows.
	* Add new routines to be invoked when target state changes to/from
	idle.
	* Add start of expression window.
	* Change bindings of mouse button 1 in assembly and source window
	to just set or clear breakpoints when in the margin tag.
	* Change shape of register window to be more vertical to better
	reflect it's contents.
	* Add stop button.
	* Cleanup some code around command window bindings.

	* infrun.c (wait_for_inferior):  Make sure
	through_sigtramp_breakpoint is non-null before deleting.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
wikimedia/pywikibot-core,03ce39a4ff3540a8b781eb4a0faff20a53743ea1,"date.py: code improvements

- remove obsolete types import
- PEP8 changes

Change-Id: Ib9c9679e5d1b9d499912ff6c11ee785bb52a076a
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
kervinck/gigatron-rom,b1bf6b48bfc388e8733827d1e3b1da77fa375de8,"Ver 0.8.15

- Refactored optimiser code from compiler into it's own module.
- Refactored validater code from compiler into it's own module.
- Refactored linker code from compiler into it's own module.
- Added another optimising case for STW pairs when writing to arrays.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
spring-cloud/spring-cloud-sleuth,70b18054e1482f4dc95437f9d5d8a98a3dd8d41d,"Add Span to Sampler method params

Also allows us to actually create a PercentageBasedSampler (I
don't think anyone tried it before) without resorting to
lazy beans and proxies.

Another freature added here is a default percentage sampler
if we know that spans need to be exported (zipkin or stream
is present).

Fixes gh-138
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
LightningNetwork/lnd,be5b2d46a57fde27f9984132a1b81717018d08b8,"htlcswitch: ensure the packetQueue can handle total+partial commitment overflows

In this commit, we’ve moved away from the internal queryHandler within
the packetQueue entirely. We now use an internal queueLen variable
internally to allow callers to sample the queue’s size, and also for
synchronization purposes internally.

This commit also introduces a chan struct{} (freeSlots) that is used
internally as a semaphore. The current value of freeSlots reflects the
number of available slots within the commitment transaction. Within the
link, after an HTLC has been removed/modified, then a “slot” is freed
up. The main packetConsumer then interprets these messages as a signal
to attempt to free up a new slot within the queue itself by dumping off
to the commitment transaction.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
kiwiirc/kiwiirc,9412581a70dcdbddbc4473a373a2607a663315e8,"Align channel topic on ModernLayout with other messages. (#821)

* UPDATE: The topic on modernLayout is now inline with the rest of the Messages, looks much cleaner.

* - Add margin to the top of the topic message
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,7398cee4c3e6aea1ba07a6449e5533ecd0b92cdd,"scsi: mac_scsi: Increase PIO/PDMA transfer length threshold

Some targets introduce delays when handshaking the response to certain
commands. For example, a disk may send a 96-byte response to an INQUIRY
command (or a 24-byte response to a MODE SENSE command) too slowly.

Apparently the first 12 or 14 bytes are handshaked okay but then the system
bus error timeout is reached while transferring the next word.

Since the scsi bus phase hasn't changed, the driver then sets the target
borken flag to prevent further PDMA transfers. The driver also logs the
warning, ""switching to slow handshake"".

Raise the PDMA threshold to 512 bytes so that PIO transfers will be used
for these commands. This default is sufficiently low that PDMA will still
be used for READ and WRITE commands.

The existing threshold (16 bytes) was chosen more or less at random.
However, best performance requires the threshold to be as low as possible.
Those systems that don't need the PIO workaround at all may benefit from
mac_scsi.setup_use_pdma=1

Cc: Michael Schmitz <97e8977054260fa518c667d4811a6cf7e8fa98da@gmail.com>
Cc: 4fbacc2fa0ffdbb11bf1ad6925b886ebd08dd15f@vger.kernel.org # v4.14+
Fixes: 3a0f64bfa907 (""mac_scsi: Fix pseudo DMA implementation"")
Signed-off-by: Finn Thain <94052abb058aed443995dc4f8d236e022112765d@telegraphics.com.au>
Tested-by: Stan Johnson <be26d5748f1a7aa78e1ed4f6d8c4f5984892e11a@yahoo.com>
Tested-by: Michael Schmitz <97e8977054260fa518c667d4811a6cf7e8fa98da@gmail.com>
Signed-off-by: Martin K. Petersen <0384aaef27f06874adbdb09a807bb339f4aff9fd@oracle.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/spark,9c4405e8e801cbab3a5c78c9f4334775925dfcc4,"[SPARK-19453][PYTHON][SQL][DOC] Correct and extend DataFrame.replace docstring

## What changes were proposed in this pull request?

- Provides correct description of the semantics of a `dict` argument passed as `to_replace`.
- Describes type requirements for collection arguments.
- Describes behavior with `to_replace: List[T]` and `value: T`

## How was this patch tested?

Manual testing, documentation build.

Author: zero323 <zero323@users.noreply.github.com>

Closes #16792 from zero323/SPARK-19453.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
2factorauth/twofactorauth,018c54e4decb9f2d698e7266d9b99c1e8161d4a1,"Update Github.com (#4910)

Updated Github to reflect it supports u2f. https://docs.github.com/en/github/authenticating-to-github/configuring-two-factor-authentication#configuring-two-factor-authentication-using-a-security-key",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,9a5dcb82457fe09cea7e2fe2ef6d4ec7458767e9,"Prevent more script-observable cases of HTMLMediaElement GC

This is intended to cover all cases where Gecko prevents GC:
https://www.w3.org/Bugs/Public/show_bug.cgi?id=26515#c5

Additionally, change the behavior for MediaSource so that an
HTMLMediaElement attached to a MediaSource is never collected. Since the
reverse is also true (see MediaSource::hasPendingActivity) a connected
media element + media source pair will now live as long as the document.

LayoutTests for the new cases in HTMLMediaElement::hasPendingActivity()
were added:

media/gc-while-delaying-the-load-event.html (was timeout)
http/tests/media/gc-while-network-loading.html (was timeout)
media/gc-while-playing.html (was pass)
media/gc-while-seeking.html (was timeout)
http/tests/media/media-source/mediasource-htmlmediaelement-lifetime.html (was failure)

BUG=400659

Review URL: https://codereview.chromium.org/552303006

git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@182247 bbb929c8-8fbe-4397-9dbb-9b2b20218538
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
uwdata/vega-lite,27dbedf693d84ee23a748228c075d764cbae4201,"[Example] Add sort-by-encoding example to the main gallery + reorder gallery examples (#4832)

* [Example] Add sort-by-encoding example to the main gallery + reorder gallery examples

* [Travis] Update examples (build: 22759)
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,4c143b4aef90e6b5e476f7b61e1c172ede2cffd5,"Read later: Add menu close button.

Screenshot can be found in bug.

Bug: 1146024
Change-Id: If5d7977068051b8c96e4c36104655580d6bde29e
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2510410
Reviewed-by: Thomas Lukaszewicz <ea26dc871ab1e4202aebdce52dc1ca37ecad9146@chromium.org>
Reviewed-by: Connie Wan <09c92670731b6b87580ba10a2891e667813b1978@chromium.org>
Reviewed-by: Alex Gough <fc946f225e4ea3b6c3a3cc54088b700b423197bd@chromium.org>
Reviewed-by: dpapad <5fc99dc5a589535ee93f374a9f7df4a885d5f265@chromium.org>
Commit-Queue: Caroline Rising <92ceaf6705f53f769c3c0beb05153c7f4ca59477@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#824641}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
quintel/etengine,d996df78b8f3067e28127dd4ba99a92f30a2483a,"Optimize AggregateCurve#aggregate

In the event that a profile share is zero, skip adding its values to the
aggregate since the result will be no different than the input.

Speeds up the default EV curve (which has 100% of EV curve 1) by about
70%.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
jonnybarnes/jonnybarnes.uk,309864ba76b8bfc91f163df3feb72fd3dc9879da,"Squashed commit of the following:

commit f02ac2b94326054a842a65ed5a2b851351c1d533
Author: Jonny Barnes <jonny@jonnybarnes.uk>
Date:   Sat Sep 16 18:44:52 2017 +0100

    update changelog

commit 2e77668cae03246189d8ce931f9ab29d2531d522
Author: Jonny Barnes <jonny@jonnybarnes.uk>
Date:   Sat Sep 16 18:44:45 2017 +0100

    Add a middleware for adding AS2.0 header links

commit 931ba1fe5dd2eacf32e4da3eefec081173dee8de
Author: Jonny Barnes <jonny@jonnybarnes.uk>
Date:   Sat Sep 16 18:44:16 2017 +0100

    remove references to AS2.0 links
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
os-autoinst/openQA,c3c4b87874467e04fe17af91a8c9aaacc3a88ea4,"Add id to comments over API to allow referencing

For example for deleting comments over API it makes sense if they identify
themselves on retrieval. Let's say we retrieve comments on a job and we want
to delete a comment on the job. For that we need the id of the comment.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
zephyrproject-rtos/zephyr,18d96436a0ae8abd2994881a5a199d9c06436b1c,"compiler: clang: Include missing target

Adding baremetal target when using clang/llvm.

Signed-off-by: Flavio Ceolin <979b9165500b0741b9d0500e2efd74fc1547bff7@intel.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
evercam/evercam-server,54d656e86fd0e10fe96652940940a7acc2bc3217,"Added rake task for adding the missing logs. (#723)

* Added rake task for adding the missing logs.

* Set offline date time to last_online_at time.

* Removed unused variables.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
Homebrew/homebrew-core,366b93269069b42570b942dcd3419f350cbe9010,"agda 2.5.1

* Updates Agda to 2.5.1 and the Agda standard library to 0.12.

* Removes temporary maintenance patches.

* Renames the ""without-malonzo"" option to ""without-ghc"", following
  upstream change:
  https://github.com/agda/agda/issues/1859

* Removes functionality relating to the removed FFI package:
  https://github.com/agda/agda-stdlib/commit/86b4fe4beec5ac7ea3b38cdacfd335ef5f82cdd9

* Updates caveats for clarification following recent changes:
  https://github.com/agda/agda/blob/master/CHANGELOG#L52-121

* Updates and improves tests to test one feature at a time.

Closes #440.

Signed-off-by: Mike McQuaid <a17fed27eaa842282862ff7c1b9c8395a26ac320@mikemcquaid.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
KDE/kdev-php,7f18db6484215521cb8eef36e4adf7b67fea9f93,"do code completion for language constructs.

TODO: currently they are sometimes lost in the wealth of php functions that start similar
TODO: we might need to add some documentation to some of the constructs

BUG: 188132
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
Didero/DideRobot,47a2815a46af72ac854b0c8959d35d3c4532aeb6,"[Gen] Convert chance dict keys to ints

But only the first time we encounter the dict, and store that we've converted the keys
Also add some explanatory comments
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/llvm-propeller,2ee686da27abaf723c4d6c5c43a35a103176bd16,"[WebAssembly] Arbitrary BUILD_VECTOR and remove i64x2.mul

Summary:
This CL adds support for arbitrary BUILD_VECTORS, i.e. not splats and
not consts. This is the last feature needed to properly lower v2i64
multiplies without a i64x2.mul instruction (which is not in the spec),
so i64x2.mul is removed as well.

Reviewers: aheejin, dschuff

Subscribers: sbc100, jgravelle-google, sunfish, llvm-commits

Differential Revision: https://reviews.llvm.org/D51082

Remove unnecessary condition and fix whitespace

llvm-svn: 340472
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
andrewgregory/pacman,d3dc2002634637bd3635c460c68885bdd755292a,"makepkg: fix find_lib{depends, provides} results

Neither function was checking for the existence of actual results before
calling printf, resulting in them returning a list with a single empty
value if there were no depends/provides.

Signed-off-by: Andrew Gregory <13115e38efea9b5bf08524f6765f5bb44291d47f@gmail.com>
Signed-off-by: Allan McRae <3467d2f86b976ae9f474f73a80f3bfe04b85d8af@archlinux.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,66323a04bb2eda8522cbeed5b2d1429f14303951,"More unittests of ntp_snippets_fetcher that depend on trial param value.

This CL recovers tests temporarily removed by CL 2041783002. It also
updates the code to use the extended variation::testing API for
changing values of variation parameters.

Review-Url: https://codereview.chromium.org/2146863002
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#406556}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
Martchus/cpp-utilities,79855f285d2c7704aac411ff7a80b688ef04b677,"Improve pkg-config file generation

* Don't refer to bundles libraries via its imported location
* Add dependencies of imported targets
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nusmodifications/nusmods,7bec42284ece211f01c45e97f8dfb4182612cea8,"Port Apps page to v3 (#482)

* Implement Apps page

Port basic functionality of Apps page to V3.

* Add link to Apps page

* Display app tags

* Remove unused .heading SCSS class

* Fix comments on PR

* Pull AppInfo from AppEntryProps into its own data structure
* Remove redundant key on section in AppEntry
* Add `target=""_blank""` and `rel=""noopener noreferrer""` to `a` tags
linking to the apps
* Add `a` tag around app name
* Replace extra span tag with class with margin-right CSS property
* Add missing `key` prop to tag spans
* Remove constructor from AppsContainer
* Remove manual conversion of JSONP to JSON

* Left align app description and tags
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
openwrt/packages,177e699ada4a38e98fbe6e5517d0b7cb08d76645,"json-glib: bump to 1.6.0

Version bump. New stable branch.

ABI_VERSION added. Tests can now be disabled directly.

The python3 check is now disabled, as it causes problems with the new
Github Action tests.

Signed-off-by: Sebastian Kemper <3a4b5ee1b268004463fb286f5abe712deb5f9da7@gmx.net>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
vinriviere/m68k-atari-mint-binutils-gdb,bebf4942b083027860539b7c5e0649714b92e401,"ld -r doesn't need plugin for slim lto object

Plugin isn't required on slim lto object for relocatable link.

	PR ld/19317
	* symtab.cc (Symbol_table::add_from_relobj): Don't complain
	plugin needed to handle slim lto object for relocatable link.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
catmaid/CATMAID,21380422b6f7eeb16cf00b18e5d27636da310e39,"SVG overlay: fix events on skeleton join

When joining skeletons, the skeleton of the target (to) treenode is
deleted, while the skeleton of the source (from) treenode is updated.
Make the events emitted by overlay reflect this.

Fixes a bug where skeletons disappear from the 3D viewer when joining.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
AndroidX/androidx,c4f136a68934c9140ce0eeef09963e76b8300aae,"Introduce TextDirectionHeuristics

TextDirectionHeuristics is used for determining paragraph direction
based on the text.

Bug: 139205351
Bug: 122478092
Test: ./gradlew test
Test: ./gradlew :ui:ui-framework:connectedAndroidTest
Test: ./gradlew :ui:ui-text:connectedAndroidTest
Change-Id: If8c0c7bf8c2410c888101a2c4f35308bc297ceeb
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
dcrdata/dcrdata,5b942e0a7824b6e915440d1c4c4adcb5a3658166,"Block verbose and block-by-hash (#69)

* Add getBlockHashSQL, getBlockHeightSQL queries to sqlite.go

* Add GetBlockVerbose endpoints.  TODO: non-verbose tx.

* Add verboseTx bool to GetBlockVerbose, and use verboseTx=false for API.

* Add RetrieveBestBlockHash and RetrieveBestBlockHeight to Sqlite

* Build API up to accept hash as URL parameter.

Add endpoints: /api/block/hash/{blockhash}/...

Add .../hash to the routers on: /api/block/best and /api/block/{idx}.

Update APIDataSource to get several values by hash in addition to existing by-height functions.

Update context helpers in apiroutes.go (e.g. etBlockHeightCtx, getBlockHashCtx) to make URL parsing for height and hash more robust and less painful.

Update sql queries to support these changes.

(c *appContext).BlockHashPathAndIndexCtx requires {blockhash} in the path, and it sets both hash and height request context values.

Add GetBlockVerboseByHash to rpcutils package.

* This should not be an error or a warning since it may be expected to fail when called from getBlockHashCtx

* Add transactions-for-block via .../tx endpoints, and apitypes.BlockTransactions.

Add GetTransactionsForBlock and GetTransactionsForBlockByHash.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
home-assistant/home-assistant,b57da2f86277ce2eb9fff7da955addc5cf1fce0d,"Axis - Improve tests based on feedback (#30430)

* Use MockConfigEntry, add_to_hass and hass.config_entries.async_setup

* Mock method instead of handling paths
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
facebook/jest,afb4bf5817781c333acb389e123f15d8ae6c6de2,"Add a serializer for jest.fn to jest-snapshot (#4668)

* Add a serializer for jest.fn to jest-snapshot

* Add link to PR in changelog

* Don't depend on jest-mock

* Remove instances from the snapshots

They don't seem as useful as I though
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
erudit/zenon,c925e21280553b3a43165b46afb020a20f8494f5,"cache: serializing and deserializing

Some Fedora datastreams cannot be directly cached. For those
cases, provide serializers that will prepare them to be
cached and deserializers to restore them to their original format.

ref #2072
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
coreboot/coreboot,d61b5404dcdad67238904bebef60a392fbcd48fc,"southbridge/amd: update for amdfwtool size on command line

amdfwtool was getting the ROM size as a #define when it was built.
It has been updated to pass it in as a command line parameter, so
now it can be built just once for abuild as a shared tool.

Update the calls to amdfwtool to pass the ROM size.

All platforms using amdfwtool had the output verified using
a binary compare.

This reverts commit 0529236ed22f1a28d29f2054674004c4f7a056e7
(Makefile.inc: Don't share amdfwtool between platforms)

Change-Id: I188b34e08249f2d00bd48957ced750b21f1ec348
Signed-off-by: Martin Roth <79230511ccf79da3f7e9e82dbcc9c1ec2f734fa0@chromium.org>
Reviewed-on: https://review.coreboot.org/17327
Tested-by: build bot (Jenkins)
Reviewed-by: Marshall Dawson <7e1f03060580a936245d826517caa1807214ea35@gmail.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/airflow,66a95d02cb7eb0421a5f19bd5de4da3fab16c538,"[AIRFLOW-1384] Add to README.md CaDC/ARGO

added to  currently **officially** using Airflow:

[California Data Collaborative](http://californiad
atacollaborative.org) powered by [ARGO
Labs](http://www.argolabs.org)

Dear Airflow maintainers,

Please accept this PR. I understand that it will
not be reviewed until I have checked off all the
steps below!

- [x] My PR addresses the following [Airflow JIRA]
**https://issues.apache.org/jira/browse/AIRFLOW-13
84**

- The California Data Collaborative is a unique
coalition of forward thinking municipal water
managers in California who along with ARGO, a
startup non-profit that builds, operates, and
maintains data infrastructures, are pioneering new
standards of collaborating around and
administering water data for millions
Californians.

ARGO has deployed a hosted version of Airflow on
AWS and it is used to orchestrate data pipelines
to parse water use data from participating
utilities to power analytics. Furthermore, ARGO
also uses Airflow to power a data infrastructure
for citywide street maintenance via
https://github.com/ARGO-SQUID

- [x] My PR adds the following unit tests __OR__
does not need testing for this extremely good
reason:
Change to README.md does not require unit testing.

- [x] My commits all reference JIRA issues in
their subject lines, and I have squashed multiple
commits if they address the same issue. In
addition, my commits follow the guidelines from
""[How to write a good git commit
message](http://chris.beams.io/posts/git-
commit/)"":
    1. Subject is separated from body by a blank line
    2. Subject is limited to 50 characters
    3. Subject does not end with a period
    4. Subject uses the imperative mood (""add"", not
""adding"")
    5. Body wraps at 72 characters
    6. Body explains ""what"" and ""why"", not ""how""

Update README.md

added to  currently **officially** using Airflow
section of README.md

[California Data Collaborative](https://github.com
/California-Data-Collaborative) powered by [ARGO
Labs](http://www.argolabs.org)

Added CaDC/ARGO Labs to README.md

Please consider adding [Argo
Labs](www.argolabs.org) to the Airflow users
section.
**Context**
- The California Data Collaborative is a unique
coalition of forward thinking municipal water
managers in California who along with ARGO, a
startup non-profit that builds, operates, and
maintains data infrastructures, are pioneering new
standards of collaborating around and
administering water data for millions
Californians.

- ARGO has deployed a hosted version of Airflow on
AWS and it is used to orchestrate data pipelines
to parse water use data from participating
utilities to power analytics. Furthermore, ARGO
also uses Airflow to power a data infrastructure
for citywide street maintenance via
https://github.com/ARGO-SQUID

Closes #2421 from vr00n/patch-3
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
AndroidX/androidx,5c8a63aaeb9d24efa819a200fbfdf50279c13462,"Import translations. DO NOT MERGE

Change-Id: I24499731da1c4e5c67567f26c36c7d4295ac4b10
Auto-generated-cl: translation import
Exempt-From-Owner-Approval: translation import
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
strapdata/elassandra,6c19bf96cb757ca84f48eae082093ed147ac539e,"Update testing docs to reflect Gradle wrapper

This commit updates the testing docs to reflect the usage of the Gradle
wrapper.

Relates #28107

",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
openstack/cinder,576007aaa6b8a3ea1592578df2f22d15cc057d14,"[api-ref]Fix API Doc error in creating backup

Now api doc for creating backup has an issue that
container and description should be optional.

Change-Id: I42a9918e98963f72fb6d057d457869df1a9315c3
Closes-Bug: #1704690
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
NixOS/nix,e012c126dbfac37f8f832d1ccbaf469d62e5d1c3,"Revert ""add the manpath to the installer""

This reverts commit 76f985b92d95fef967c1f3193d05244ced15420b. We
shouldn't mess with $MANPATH, because on some ""man"" implementations
(like NixOS'), the default value on $MANPATH is derived from $PATH. So
if you set $MANPATH, you lose the default locations.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
rhinstaller/anaconda,e4cdd028bf9b0ccfd9ed3e6a760dceb8243d1ddf,"Unify displayed columns in custom spoke dialogs. (#1289577)

""Selected disks"", ""configure mountpoint"", and ""configure volume group""
now show all the same information. Was ""ID"" ever a useful column to show
in ""configure volume group""? It seems like enough useful info to distinguish
devices can be found from just device description, etc.

So removed ""ID"" column from ""configure volume group"" and added ""Name""
column.  Also changed ""Disk"" -> ""Description"" (since that's what is shown).
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
ubuntu/ubuntu-make,302d07a60b2f1b17cb1a9b7d8ad4adfd482feb57,"Ensure that category options can't be mistyped

* If we don't provide a framework option, we could have mistyped it.
  For instance udtc android eclipse--adt would try to install the android
  studio framework (default as not framework was found) into the eclipse--adt
  relative directory. We force now that path (if no default framework provided)
  to contain a path separator.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
eProsima/Fast-RTPS,b7f417f4109e58ca1474a9bf0ad089d9210aa345,"Make sure that default values are enforced when parsing a Duration_t xml tag (#1028)

* Make sure that default values are enforced when parsing a Duration_t element.

* Schema and sources update to prevent empty Duration_t config xml.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
cgeo/cgeo,8987674ab4882f7684c773fc181f5a3fac5f8f12,"refactoring: introduce PseudoList to handle non concrete lists

* should make adding a history list entry easier
* includes some non null annotations
* moved list code into separate package",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
koreader/koreader,dd7251e66d7c7d3862f617785fb85a45bbdd678f,"Menu order and separators

* Add separators to navigation menu
* Move speed reading to ""typeset"" (reading experience) menu
* Move Goodreads over to search

See https://github.com/koreader/koreader/issues/2562#issuecomment-290379241
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
qpdf/qpdf,3dd3169a1c8e25fed738a5e7beb8b3d352ef0546,"Travis: adding missing dependency

I don't use the travis build since I get more functionality on Azure
pipelines. I should remove it.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,9947e98a76455cec4a64aef536d375fa37cbfc32,"V4L/DVB: dw2102: Select tda10023 frontend, not tda10021

Update the Kconfig selections to match the code.

Signed-off-by: Ben Hutchings <73675debcd8a436be48ec22211dcf44fe0df0a64@decadent.org.uk>
Signed-off-by: Mauro Carvalho Chehab <ad86ba2154032c9f55743a190faa2459a9d61d42@redhat.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
GNOME/nautilus,247559c2f73891552cd48e079be35715a03556e4,"Final arlification touches. Make the footer item's left and right bumpers

	* components/services/nautilus-dependent-shared/eazel-services-footer.c:
	(footer_destroy), (label_enter_event), (label_leave_event),
	(image_enter_event), (image_leave_event),
	(prelight_data_free_callback), (image_add_prelighting),
	(label_add_prelighting), (footer_item_new):
	Final arlification touches.  Make the footer item's left and right
	bumpers prelight as well.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
gem/oq-engine,7cfa574a2f311e3bb97edff059957a7d320030b2,"Added drouet_alpes_2015 to the documentation


Former-commit-id: ea79d1417959fc494e883971bcd5d04c9cd364be [formerly 1f109672f8906bdbb969ab1355016c156f10dda7]
Former-commit-id: bd1eb9aaaa99e33a68127c2a90ccae75b9eacaf4",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/llvm-propeller,8855c2ca19d4f5198305ff83a48d9925e5c6aa7e,"Fix bug #28898
lldb: libedit produces garbled, unusable input on Linux

Apply patch from Christos Zoulas, upstream libedit developer.
It has been tested on NetBSD/amd64.

New code supports combination of wide libedit and disabled
LLDB_EDITLINE_USE_WCHAR, which was the popular case on Linux
systems.

llvm-svn: 303907
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
concourse/concourse,1c38def87a115eb5e42f09d88892a0699a9f9978,"bump fly

[finishes #108688552]

Submodule src/github.com/concourse/fly 2d39657..756caaa:
  > pad dates and add timezone information to builds
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,d71be2b6c0e19180b5f80a6d42039cc074a693a2,"arm64: cpufeature: Detect SSBS and advertise to userspace

Armv8.5 introduces a new PSTATE bit known as Speculative Store Bypass
Safe (SSBS) which can be used as a mitigation against Spectre variant 4.

Additionally, a CPU may provide instructions to manipulate PSTATE.SSBS
directly, so that userspace can toggle the SSBS control without trapping
to the kernel.

This patch probes for the existence of SSBS and advertise the new instructions
to userspace if they exist.

Reviewed-by: Suzuki K Poulose <25f0e69a3d23ed1d9a060214a9ff1a9504ba3f49@arm.com>
Signed-off-by: Will Deacon <b913f13ef92ac157955c954ccaaff7be065faba4@arm.com>
Signed-off-by: Catalin Marinas <15ce75b290ebaf27c3f9fd73ab848685ed3d8261@arm.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
colinsc/koha,a4dab23a41fe63855806a5c95d6bf08d23556aa0,"Bug3916 : Batch Modify tool overwrites branches fields

This was owed to the Item modification construction and the change in GetBranchesLoop behaviour which selects the user branch by default.
Adding a void branch selected
Changing default value to """"

Signed-off-by: Galen Charlton <cbad4aa536c39e963e89269af6cd5196eac32048@gmail.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
danigb/tonal,c1d40c6800e3a6cf0ae52452adeb7f0a9ac8d834,"add chord symbols from ireal pro (#202)

This commit adds chord symbols in the style of the widely used [ireal pro](https://irealpro.com/dwkb/chord-symbols/). Mainly, it adds a ""-"" variant to all minor chords and a ""^"" variant to all major chords. Additionally, I added some missing chords. With these changes, [parsed ireal links](https://felixroos.github.io/blog/ireal-changes/) could be used directly with tonal.",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
guix-mirror/guix,087602b687e28483923643b89490c2fd3b4d908b,"Fix the order of environment variables in `derivation'.

* guix/derivations.scm (derivation)[env-vars-with-empty-outputs]:
  Prepend new environment variables (as expected by Nix), and add them
  to E.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
mitmproxy/mitmproxy,b0b3b19ad644afeb353cf6e02bd4aac61f2774c8,"Extract console dump functionality into an addon

This removes all the code that deals with printing flows to screen from dump.py
into a self-contained addon.

- This fixes a bug - by moving dumping into an
addon, we now dump flows AFTER addon transformation, so we can see the changes
made.
- We get dumping ""for free"" in other places by simply adding the addon. It's
now easy to add dumping to console to mitmweb for debugging and development.
The same goes for external projects that derive from master.
- We also get major benefits in clarity for a frankly hairy part of our
project. Mitmdump is much clearer, and all the hairyness is now isolated for
further refactoring.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,8b0c6d9652a69ebe9d23b4a77abd5da5fc714289,"LayoutTests:

        Updating results for fix:
        http://bugzilla.opendarwin.org/show_bug.cgi?id=6812
        Missing focus ring on new text fields

        * fast/forms/input-appearance-focus-expected.checksum:
        * fast/forms/input-appearance-focus-expected.png:

WebCore:

        Reviewed by Darin.

        - Fixed http://bugzilla.opendarwin.org/show_bug.cgi?id=6812
        Missing focus ring on new text fields

        Tests:
        * fast/forms/input-appearance-focus.html: Updated.

        * rendering/render_object.cpp: (WebCore::RenderObject::paintOutline): 
         call supportsFocusRing instead of checking the appearance.
        * rendering/render_theme.cpp: (khtml::RenderTheme::supportsFocusRing): Added. 
         Checks appearance.  Theme will draw focus ring if there's an appearance, but not for the new text fields.
        * rendering/render_theme.h:



git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@12855 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
onedata/oneclient,97af04125cb605f00cf371cfcb8c03aecea76a10,"Merge pull request #278 in VFS/oneclient from feature/VFS-1657-add-system-update-to-release-dockers to develop

# By Krzysztof Trzepla
# Via Krzysztof Trzepla
* commit '982579665979956911dc99c37475cd7b4981751e':
  VFS-1657 Add system update to release dockers.
  Remove gflags from package build requirements.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/closure-compiler,502c7d86817035b003e0c9d92a48934648138eee,"Move nonstandard performance externs into a separate file.

Expose PerformanceNavigation constants on the type as well as the instance.

Add missing type field on PerformanceObserverInit.

Closes https://github.com/google/closure-compiler/pull/3347.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=246195655
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,a8ad3eb498b368e455955dbdd97c5d2665ce5d78,"Roll src/third_party/angle 21e5e85a4976..c1551dc2a7dc (1 commits)

https://chromium.googlesource.com/angle/angle.git/+log/21e5e85a4976..c1551dc2a7dc


git log 21e5e85a4976..c1551dc2a7dc --date=short --no-merges --format='%ad %ae %s'
2018-08-15 till.rathmann@gmx.de D3D11 fix: Mipmapping was used although disabled via Sampler


Created with:
  gclient setdep -r src/third_party/angle@c1551dc2a7dc

The AutoRoll server is located here: https://angle-chromium-roll.skia.org

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+/master/autoroll/README.md

If the roll is causing failures, please contact the current sheriff, who should
be CC'd on the roll, and stop the roller if necessary.

CQ_INCLUDE_TRYBOTS=luci.chromium.try:android_optional_gpu_tests_rel;luci.chromium.try:linux_optional_gpu_tests_rel;luci.chromium.try:mac_optional_gpu_tests_rel;luci.chromium.try:win_optional_gpu_tests_rel
TBR=ynovikov@chromium.org

Change-Id: I39589a080b39acdeab50d2a7a07a38b9c1f0e2e7
Reviewed-on: https://chromium-review.googlesource.com/1176241
Reviewed-by: angle-chromium-autoroll <dd7a9d8d36e24d2d37b8a18d4b5ec66e315b0bf3@skia-buildbots.google.com.iam.gserviceaccount.com>
Commit-Queue: angle-chromium-autoroll <dd7a9d8d36e24d2d37b8a18d4b5ec66e315b0bf3@skia-buildbots.google.com.iam.gserviceaccount.com>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#583409}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/flink,53ed6adac8cbe6b5dcb692dc9b94970f3ec5887c,"[FLINK-4379] [checkpoints] Introduce rescalable operator state

This introduces the Operator State Backend, which stores state that is not partitioned
by a key. It replaces the 'Checkpointed' interface.

Additionally, this introduces CheckpointStateHandles as container for all checkpoint related state handles

This closes #2512
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
dart-lang/sdk,c9e9c1d8e9a187ce3a47adcc1a929479796b97b5,"Remove dart:isolate runtime support in DDC

This disables most runtime features of dart:isolate, similar to dart:io.

For now, this supports `new ReceivePort()` and `ReceivePort.close` as
those are used by async tests to keep the Dart VM alive. Those are
no-ops in DDC. Also removes most of dart:_isolate_helper, except for
the JS API that's used to bootstrap DDC `main()`.

Change-Id: I84eab6cd39d05a70a6afe982e952076ddaaa8c0f
Reviewed-on: https://dart-review.googlesource.com/45754
Commit-Queue: Jenny Messerly <6285f43aa2dd0931180012d62b847adf2c37a418@google.com>
Reviewed-by: Vijay Menon <671ecbb18d31a1c038875027dcfe976af959ea9f@google.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
jon-turney/cygwin-setup,be8736e4bf8e88c24367e6487351fe3e636bc49c,"2006-12-26  Max Bowsher  <maxb1@ukf.net>

	Add a shell script that documents/centralizes the standard configure
	command line.

	* doconfigure: New file.
	* Makefile.am (EXTRA_DIST): Add doconfigure.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,97218a1499391b174ea95e05b7a40fbb73e79813,"[SCSI] libosd: Fix NULL dereference BUG when target is not OSD conformant

Very old OSC's Target had a BUG in the Get/Set attributes where
it was looking in the wrong places for attribute lists length.
If used with the open-osd initiator, the initiator would dereference
a NULL pointer when retrieving system_information attributes.

Checks are added that retrieval of each attribute is successful
before accessing its value.

Signed-off-by: Boaz Harrosh <c7aa24d52dd751aba44a7843602dc14649cc8bce@panasas.com>
Signed-off-by: James Bottomley <407b36959ca09543ccda8f8e06721c791bc53435@HansenPartnership.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
qtproject/qt3d,c6fecd32f8dfe4d72a7f059f83d69e61d5ded64d,"Revert ""Allow for when a Scene3D item switches screens""

This reverts commit 648b7459e8a6ce8ce1f115a14da63d546b743439.

Reason for revert: Introduces QTBUG-82275

Change-Id: I5514ad58707c086eaaab3203773614c939e461e8
Reviewed-by: Mike Krus <cb644b3d7cd7ba3ea0d9c53d7851e41a1e5f9806@kdab.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/jmeter,bba959a66cc7e1804b5d6d21425f37cb8bf5a0f3,"Bug 55597 View Results Tree: Add a search feature to search in recorded samplers
Search feature does not search in response due to problem
Bugzilla Id: 55597

git-svn-id: https://svn.apache.org/repos/asf/jmeter/trunk@1739523 13f79535-47bb-0310-9956-ffa450edef68

Former-commit-id: f7251ce624eba915ac4a511acff704eea14c11d4",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,c78ef2d87fc4f97b31e45891fa1ff84abad77e21,"WebUI: Explicitly support commented out HTML imports in polymer.py.

polymer_modulizer() will process a commented out HTML import
statement and convert it to a non-commented JS import statement.
For example:

<!-- <link rel=""import"" href=""bar.html""> -->
will become
import './bar.m.js';

Note this CL is only adding new test cases, as the feature itself
was already (accidentally) working.

This feature is meant to be leveraged in cases where an HTML import
does not actually exist in the Polymer2 version of the code, which is
happening for some files in FilesApp's case.

Fixed: 1152687
Change-Id: Id3a38a1753bdb4a0e7edbfb8d4deacc542d1c489
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2560805
Reviewed-by: Rebekah Potter <d3fa462b5af7bedecb31c9641c08373f0b7e8c42@chromium.org>
Reviewed-by: Luciano Pacheco <b1faf28ae0b62d7b493b12f473a3c33b236f9db4@chromium.org>
Auto-Submit: dpapad <5fc99dc5a589535ee93f374a9f7df4a885d5f265@chromium.org>
Commit-Queue: dpapad <5fc99dc5a589535ee93f374a9f7df4a885d5f265@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#832292}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
zynaddsubfx/zynaddsubfx,6883c6b40296752abb19d23508c95381d7039e5d,"Integrate cxxtest into cmake. Implement a test for adnote
Squashed commit of the following:

commit 5f4bd5ea3a438449eb1ba4fdb84d84c5ce9b1413
Merge: f47e1a1... 8ed16ff...
Author: Harald Hvaal <harald.hvaal@gmail.com>
Date:   Tue Jul 21 08:56:05 2009 +0900

    Merge branch 'cxxTesting' of ssh://metellius@zynaddsubfx.git.sourceforge.net/gitroot/zynaddsubfx into cxxTesting

commit 8ed16ff6440d72dff059b41e9a65e460c026bb2d
Author: fundamental <mark.d.mccurry@gmail.com>
Date:   Mon Jul 20 19:20:35 2009 -0400

    Fixed linker errors with CTest

commit f14902e22d437c76bdd66bdc75b517ed112c038f
Merge: 3820540... b44d7e0...
Author: fundamental <mark.d.mccurry@gmail.com>
Date:   Mon Jul 20 18:30:53 2009 -0400

    Merge branch 'experimental' into cxxTesting

    Conflicts:
    	src/Synth/CMakeLists.txt

commit f47e1a1f49f7ba789473291e7d947f9a578464c2
Author: Harald Hvaal <harald.hvaal@gmail.com>
Date:   Mon Jul 20 23:19:27 2009 +0900

    expanding the adnotetest to work

commit 382054046d9a6a37e14f70b8675b7e6de247439d
Author: Harald Hvaal <harald.hvaal@gmail.com>
Date:   Sun Jul 19 12:41:27 2009 +0900

    Adding cxx testing. still a few linker errors. help me out here, mark?
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,1d3ac27801e51ca919ba78350d0b0079ceb1a39b,"media: staging: rkisp1: replace the call to v4l2_async_notifier_parse_fwnode_endpoints_by_port

don't call 'v4l2_async_notifier_parse_fwnode_endpoints_by_port'
in order to register async subdevices. Instead call
'v4l2_fwnode_endpoint_parse' to parse the remote endpoints
and then register each async subdev with
'v4l2_async_notifier_add_fwnode_remote_subdev'

Also remove the relevant item in the TODO file

Signed-off-by: Dafna Hirschfeld <b09fe6344c0877602cc28a794e93b7f85fa60384@collabora.com>
Acked-by: Helen Koike <fd1649cbce608ce0dd0f1c51d26981f9078d5c6c@collabora.com>
Signed-off-by: Hans Verkuil <042df2488f7f408699dbee1cc515f981d5eacdd0@xs4all.nl>
Signed-off-by: Mauro Carvalho Chehab <f2ebe58a0c53ffe67b24ee0fd0a21780efdbc03e@kernel.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
AndroidX/androidx,ce41ced42a387137689d6b12c9c1132645243105,"Implement Focus Manager

FocusManager/FocusNode/FocusScopeNode provides an abstract focus tree
and it's management.

Bug: 113819017
Test: ./gradlew ui-port:test
Change-Id: I118b40da72636a25e17a0eb663b2897b1b5b1579
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,a94584c2899d3ae8266f8c264ab4fd1b12c578b5,"Update user manager icons to SVG

BUG=505953

Review URL: https://codereview.chromium.org/1234103003

Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#339157}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
jepler/linuxcnc-mirror,75d4948653c7249960a272684b6f6484a3d0e7c3,"Give HAL interfaces to all IO pins, not just the full GPIOs.  IO pins
used by active module instances have restricted interfaces.

Improved IO Port handling.  Support open-drain pins.

Updated README to reflect reality.

Report firmware timestamp when loading.

Improved config string parsing.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
guix-mirror/guix,f0bb2662bb05625042094e124521197c5f43505e,"guix import stackage: Default to LTS version that matches GHC.

In particular, this means that 'guix lint' won't warn to update to
versions that won't necessarily fit our package set well.

* guix/import/stackage.scm (%stackage-url): Change to ""https"",
avoiding redirect log messages.
(%default-lts-version): New variable.
(stackage-lts-info-fetch, stackage->guix-package,
latest-lts-release): Use it.
(lts-info-ghc-version): Remove unused procedure.

Signed-off-by: Timothy Sample <d9bb79717395b455040e758016534403ffbb7e86@ngyro.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
Peergos/Peergos,6ea618daf5e87b669f94b712bd3f9ab225136e85,"Restore reproducible builds

This add a Java util to canonicalise timestamps in a jar, which is run
directly as a single Java source file
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
consulo/consulo,ac487ed43d78fc75e42d9a02c60bd7e1a324a12d,"[vcs] IDEA-97913 ""Cherry-pick -> Create patch task doesn't end""

The bug was because the CommitResultHandler was called only for the
default commit dialog action (commit), but not for custom executors.

Notify the CommitResultHandler after CommitExecutor completes.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
facebook/buck,fc018038fbe576e318a215be714c6da898903aaf,"Add example of how to use query macro

Summary:
- Add an example of using the `$(query_targets ...)` macro.
- Remove non-working examples.
- Link to our cross-platform code sample at GitHub, which I modified to come up with this example.

Reviewed By: styurin

fbshipit-source-id: f81f5a5843
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
symfony/Translation,3ef56b2427a3d96ed5488d6c8066b58aaf632053,"feature #30909 [Translator] Add comments when dumping po files (deguif)

This PR was merged into the 4.3-dev branch.

Discussion
----------

[Translator] Add comments when dumping po files

| Q             | A
| ------------- | ---
| Branch?       | master
| Bug fix?      | no
| New feature?  | yes
| BC breaks?    | no
| Deprecations? | no
| Tests pass?   | ?    <!-- please add some, will be required by reviewers -->
| Fixed tickets | #29962
| License       | MIT
| Doc PR        |

This code
```php
$catalogue = new MessageCatalogue('fr');
$dumper = new PoFileDumper();

$catalogue->set('key.one', 'First key', 'custom');
$catalogue->setMetadata('key.one', ['sources' => 'src/file_1', 'comments' => 'Comment', 'flags' => 'fuzzy'], 'custom');

$catalogue->set('key.second', 'Second key', 'custom');
$catalogue->setMetadata('key.second', ['sources' => ['src/file_1', 'src/file_2'], 'comments' => ['Comment 1', 'Comment 2'], 'flags' => ['fuzzy', 'another']], 'custom');

$dumper->dump($catalogue, [
    'path' => 'xxx',
]);
```

Will produces this output:
```
msgid """"
msgstr """"
""Content-Type: text/plain; charset=UTF-8\n""
""Content-Transfer-Encoding: 8bit\n""
""Language: fr\n""

# Comment
#, fuzzy
#: src/file_1
msgid ""key.one""
msgstr ""First key""

# Comment 1
# Comment 2
#, fuzzy,another
#: src/file_1 src/file_2
msgid ""key.second""
msgstr ""Second key""
```

Commits
-------

31b3a55787 Add comments when dumping po files
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
systemd/systemd-stable,ef8a2bf6484bb0f82248ceb10a55509a93d82c6b,"udev: static nodes - fix default permissions if no rules is given

<falconindy> kay: just curious -- it looks like nodes created by udev from
  modules.devname all have 000 perms, and there's nothing in udev that attempts
  to change this. is it intended?
<falconindy> c---------   1 root root     10, 223 Jul  1 23:10 uinput
<kay> falconindy: we might miss the default of 0600
<falconindy> seems like it
<kay> falconindy: stuff that has a rule works i guess
<kay> falconindy: i'll add the 0600 now
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/llvm-propeller,7faa60c406e501d4b78f1355a89de68023d78381,"llvm-lto2: Move the LTO::run() action behind a subcommand.

Move LTO::run() to a ""run"" subcommand so that we can introduce new subcommands
for testing different parts of the LTO implementation.

This doesn't use llvm::cl subcommands because it doesn't appear to be currently
possible to pass an argument not associated with a subcommand to a subcommand
(e.g. -lto-use-new-pm, -mcpu=yonah).

Differential Revision: https://reviews.llvm.org/D31410

llvm-svn: 299967
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
sio2project/oioioi,3d8092b8c391f55a62778272151a5ecdcf791fd3,"SIO-2281 Remove module prizes

Change Version to 40.
Add info to UPGRADING.rst.

Change-Id: I339ad6b81e5afaa350efed2fb88826fa70f61189
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
openstack/magnum,faa9e90402bcf78acdd166198fff9612fa8be81c,"[k8s] allow enabling kubernetes cert manager api

Add a new label 'cert_manager_api' to kubernetes clusters controlling the
enable/disable of the kubernetes certificate manager api.

The same cluster cert/key pair is used by this api. The heat agent is used
to install the key in the master node(s), as this is required for kubernetes
to later sign new certificate requests.

The master template init order is changed so the heat agent is launched
previous to enabling the services - the controller manager requires the CA key
to be locally available before being launched.

Change-Id: Ibf85147316e3a194d8a3f92cbb4ae9ce8e16c98f
Partial-Bug: #1734318
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
GNOME/evince,4d52dc2a23a39d9a495b53d84a6ad1adabe3ba9c,"Updated Thai translation.

2009-02-17  Theppitak Karoonboonyanan  <thep@linux.thai.net>

	* th.po: Updated Thai translation.


svn path=/trunk/; revision=3475
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
facebookexperimental/eden,51d851c20a468698f12e9d5003e28f14bba61241,"dagop: handle wdir() in dagrange expressions

Summary:
Using `wdir()` in dagrange expressions (e.g. `master::wdir()`) causes Mercurial
to crash with `IndexError: head out of range`.  This is because the dagrange
operations can't use the wdir rev number as it is out of range for the
changelog.

Instead, modify the revisions that we are passing in to calculate the matching
revs, and add the wdirrev at the last moment if appropriate.

Reviewed By: ryanmce

Differential Revision: D8592129

fbshipit-source-id: 8742cb72c22d1ba26f5d03f9fcf56bfdb785c25a
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,3d3f1d048253c22f8f3b61b99294517215b07aea,"WebCore:

2009-04-03  Sam Weinig  <sam@webkit.org>

        Reviewed by Anders Carlsson.

        Fix for https://bugs.webkit.org/show_bug.cgi?id=22081
        <rdar://problem/6346030>
        Don't allow overriding the return value of window.location.

        Tests: fast/dom/Window/Location/location-override-toString-on-proto-using-defineGetter.html
               fast/dom/Window/Location/location-override-toString-on-proto-using-with.html
               fast/dom/Window/Location/location-override-toString-on-proto.html
               fast/dom/Window/Location/location-override-toString-using-defineGetter.html
               fast/dom/Window/Location/location-override-toString-using-with.html
               fast/dom/Window/Location/location-override-toString.html
               fast/dom/Window/Location/location-override-valueOf-on-proto-using-defineGetter.html
               fast/dom/Window/Location/location-override-valueOf-on-proto-using-with.html
               fast/dom/Window/Location/location-override-valueOf-on-proto.html
               fast/dom/Window/Location/location-override-valueOf-using-defineGetter.html
               fast/dom/Window/Location/location-override-valueOf-using-with.html
               fast/dom/Window/Location/location-override-valueOf.html
               fast/dom/Window/Location/window-override-location-using-defineGetter.html
               fast/dom/Window/Location/window-override-window-using-defineGetter.html
               fast/dom/Window/Location/window-shadow-location-using-js-object-with-toString.html
               fast/dom/Window/Location/window-shadow-location-using-string.html
               fast/dom/Window/Location/window-shadow-window-using-js-object-with-location-field.html

        * bindings/js/JSDOMWindowCustom.cpp:
        (WebCore::JSDOMWindow::defineGetter):
        * bindings/js/JSLocationCustom.cpp:
        (WebCore::JSLocation::customPut):
        (WebCore::JSLocation::defineGetter):
        (WebCore::JSLocationPrototype::customPut):
        (WebCore::JSLocationPrototype::defineGetter):
        * bindings/scripts/CodeGeneratorJS.pm:
        * page/Location.idl:

LayoutTests:

2009-04-03  Sam Weinig  <sam@webkit.org>

        Reviewed by Anders Carlsson.

        Tests for https://bugs.webkit.org/show_bug.cgi?id=22081
        <rdar://problem/6346030>
        Don't allow overriding the return value of window.location.

        * fast/dom/Window/Location: Added.
        * fast/dom/Window/Location/location-override-toString-expected.txt: Added.
        * fast/dom/Window/Location/location-override-toString-on-proto-expected.txt: Added.
        * fast/dom/Window/Location/location-override-toString-on-proto-using-defineGetter-expected.txt: Added.
        * fast/dom/Window/Location/location-override-toString-on-proto-using-defineGetter.html: Added.
        * fast/dom/Window/Location/location-override-toString-on-proto-using-with-expected.txt: Added.
        * fast/dom/Window/Location/location-override-toString-on-proto-using-with.html: Added.
        * fast/dom/Window/Location/location-override-toString-on-proto.html: Added.
        * fast/dom/Window/Location/location-override-toString-using-defineGetter-expected.txt: Added.
        * fast/dom/Window/Location/location-override-toString-using-defineGetter.html: Added.
        * fast/dom/Window/Location/location-override-toString-using-with-expected.txt: Added.
        * fast/dom/Window/Location/location-override-toString-using-with.html: Added.
        * fast/dom/Window/Location/location-override-toString.html: Added.
        * fast/dom/Window/Location/location-override-valueOf-expected.txt: Added.
        * fast/dom/Window/Location/location-override-valueOf-on-proto-expected.txt: Added.
        * fast/dom/Window/Location/location-override-valueOf-on-proto-using-defineGetter-expected.txt: Added.
        * fast/dom/Window/Location/location-override-valueOf-on-proto-using-defineGetter.html: Added.
        * fast/dom/Window/Location/location-override-valueOf-on-proto-using-with-expected.txt: Added.
        * fast/dom/Window/Location/location-override-valueOf-on-proto-using-with.html: Added.
        * fast/dom/Window/Location/location-override-valueOf-on-proto.html: Added.
        * fast/dom/Window/Location/location-override-valueOf-using-defineGetter-expected.txt: Added.
        * fast/dom/Window/Location/location-override-valueOf-using-defineGetter.html: Added.
        * fast/dom/Window/Location/location-override-valueOf-using-with-expected.txt: Added.
        * fast/dom/Window/Location/location-override-valueOf-using-with.html: Added.
        * fast/dom/Window/Location/location-override-valueOf.html: Added.
        * fast/dom/Window/Location/resources: Added.
        * fast/dom/Window/Location/resources/location-tests-functions.js: Added.
        (normalizeURL):
        * fast/dom/Window/Location/resources/pass.html: Added.
        * fast/dom/Window/Location/resources/window-shadow-location-using-js-object-with-toString-iframe.html: Added.
        * fast/dom/Window/Location/resources/window-shadow-location-using-string-iframe.html: Added.
        * fast/dom/Window/Location/window-override-location-using-defineGetter-expected.txt: Added.
        * fast/dom/Window/Location/window-override-location-using-defineGetter.html: Added.
        * fast/dom/Window/Location/window-override-window-using-defineGetter-expected.txt: Added.
        * fast/dom/Window/Location/window-override-window-using-defineGetter.html: Added.
        * fast/dom/Window/Location/window-shadow-location-using-js-object-with-toString-expected.txt: Added.
        * fast/dom/Window/Location/window-shadow-location-using-js-object-with-toString.html: Added.
        * fast/dom/Window/Location/window-shadow-location-using-string-expected.txt: Added.
        * fast/dom/Window/Location/window-shadow-location-using-string.html: Added.
        * fast/dom/Window/Location/window-shadow-window-using-js-object-with-location-field-expected.txt: Added.
        * fast/dom/Window/Location/window-shadow-window-using-js-object-with-location-field.html: Added.
        * http/tests/security/cross-frame-access-location-put-expected.txt:



git-svn-id: bf5cd6ccde378db821296732a091cfbcf5285fbd@42218 bbb929c8-8fbe-4397-9dbb-9b2b20218538",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/knative-gcp,15e3f17835393ef088f6c78bdcd327f70218a16b,"Update docs for enabling Workload Identity on an existing cluster (#903)

* update configure

* Revert ""update configure""

This reverts commit fa4c9bb3

* doc update

* updates

* updates

* updates

* updates",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
google/CodeCity,fc626e460a71fb479c2297b5631331a64459c094,"Factor loading code out of CodeCity.startup

Create CodeCity.loadCheckpoint to handle creating an Interpreter from a .city checkpoint, and CodeCity.loadStartup to handle creating an Interpreter instance pre-loaded with a directory of .js startup scripts.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,d518b2b48a9c11fc381b179709f5321bce1f3b39,"USB: xpad: additional USB id's added

Adding additional USB vendor/product ID's for XBOX pads provided by the
XBOX Linux team.

Signed-off-by: Dominic Cerquetti <c221e171ad1251c256a1c3f586d4a1e750b65d92@yahoo.com>
Signed-off-by: Andrew Morton <5c1e68b099950c134891f0b6e179498a8ebe9cf9@osdl.org>
Signed-off-by: Greg Kroah-Hartman <4645f7897fd33786a2ee1264d590b3c400559d85@suse.de>

",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,68cfe9a286f3ee2371de00ab666b4949ff285196,"net: sis900: fix indentation issues, remove some spaces

There are several statements that contain extra spacing in
the indentation; clean this up by removing spaces. Also
add { } braces on if statement to keep to kernel coding
style.

Signed-off-by: Colin Ian King <d100aa70785e45ee8deab668147d941941915c21@canonical.com>
Signed-off-by: David S. Miller <fe08d3c717adf2ae63592e4c9aec6e3e404d8e3e@davemloft.net>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,d5ecdde2489a5f47f2cde7e7e2d84faa24393def,"Add enumeration tags to clientRenderingAPI metrics

The newly added clientRenderingAPI metrics is missing from ukm dashboard
Adding <enumeration/> tag should fix the issue.

Bug: 1147230
Change-Id: Ia9ee0ec673fec3db8daaacbdc6fa1ff1558fa121
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2527565
Reviewed-by: Kenneth Russell <1ebccd90c2bc76de65b6f830f2128a91ed69fdfb@chromium.org>
Reviewed-by: Jesse Doherty <0bdb7a3101d8b6a762f3301fcc51028162cd679b@chromium.org>
Commit-Queue: Shrek Shao <7ae796039b2f0529765a6c4b0ab8ce931d949d23@google.com>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#825884}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
asciidoctor/asciidoctor-chrome-extension,bca204d6090d66f165af13b9159e7115cc27656b,"⬆️ Bump asciidoctor-kroki from 0.4.0 to 0.7.0 (#341)

* :arrow_up: Bump asciidoctor-kroki from 0.4.0 to 0.7.0

Bumps [asciidoctor-kroki](https://github.com/Mogztter/asciidoctor-kroki) from 0.4.0 to 0.7.0.
- [Release notes](https://github.com/Mogztter/asciidoctor-kroki/releases)
- [Commits](https://github.com/Mogztter/asciidoctor-kroki/compare/v0.4.0...v0.7.0)

Signed-off-by: dependabot-preview[bot] <5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb@dependabot.com>

* Update dist

Co-authored-by: dependabot-preview[bot] <6a4c1c4838f800d1998274cd5234e1f65c55e90c@users.noreply.github.com>
Co-authored-by: Guillaume Grossetie <b9c33d7efece03e0b3a6bb4d39473c83a05f7862@gmail.com>",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
nwjs/chromium.src,068eac045cb65be73a109b03e7e28ce65cddf2ea,"Revert ""Add the about flags for the TabManager/RC features.""

This reverts commit 448f72d0803a96e428ea00f475d36b057758d3e4.

Reason for revert: This CL may trigger sizes failing on chromium/Mac, and the failure prevents builds on Mac. So let me try to revert this.

Bug: 854896

Original change's description:
> Add the about flags for the TabManager/RC features.
> 
> Change-Id: Id68cad067bb35f3b11bd8828806860110e8aaf79
> Reviewed-on: https://chromium-review.googlesource.com/1103304
> Commit-Queue: Sébastien Marchand <sebmarchand@chromium.org>
> Reviewed-by: François Doray <fdoray@chromium.org>
> Cr-Commit-Position: refs/heads/master@{#569094}

TBR=chrisha@chromium.org,fdoray@chromium.org,sebmarchand@chromium.org

Change-Id: I3aa871436e096af1fb4583634b338a139d32c31f
No-Presubmit: true
No-Tree-Checks: true
No-Try: true
Reviewed-on: https://chromium-review.googlesource.com/1109321
Reviewed-by: Hitoshi Yoshida <fde1f16ff7d3172e2d2a873a48e9dccaaa611add@chromium.org>
Commit-Queue: Hitoshi Yoshida <fde1f16ff7d3172e2d2a873a48e9dccaaa611add@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#569190}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
avocado-framework/avocado-vt,508d31b483d20c38b47b021676debeee617e5685,"virttest.utils_libguestfs: Add cmd_result() in GuestfishRemote

1. Want keep consistent with the original code.
add method cmd_result() in class GuestfishRemote(), cmd_result is
called by inner_cmd()

2. add a func blockdev_rereadpt()
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
CTSRD-CHERI/u-boot,a139ac58a7aad3110a4188ed1770ceb0f70f37d8,"doc: dt-bindings: tsec: Correct the Ethernet port compatible string

Change the compatible string to ""fsl,etsec2"" for the Ethernet ports,
which is used in the current driver's match table.

Fixes: 69a00875e3db (""doc: dt-bindings: Describe Freescale TSEC ethernet controller"")
Signed-off-by: Hou Zhiqiang <6c0c8902386def638715cb5c29c831cf16ec8aa4@nxp.com>
Acked-by: Vladimir Oltean <6ef50fec496bca30294ed8eff4f157ee91f2dc55@nxp.com>
Reviewed-by: Priyanka Jain <b3fdb9f35a058e372896381ae5ce9bcd066647ce@nxp.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
HPC-buildtest/buildtest-framework,25902b9ad812ac0cb6d671c6d4f26868e9a5e29a,"migrating documentation from buildtest repo to buildtest-framework.

Recreate sphinx project and enable autodoc and this will generate the
API docs that can be run via make rst
Also add target ""view"" which will open a firefox session at index.html
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
electron/electron,3349b8e6c7bf7c827b308ab96cccb58cbaa23e02,"linux: Remove all the X and GTK+ related implementations.

Now we only uses GTK+ for app indicator and status icon, also notice the
in Chrome35 the Gtk2StatusIcon class doesn't exist yet so we shipp
related files under chromium_src, remember to delete them after upgraded
to Chrome36.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,df9766ca9da5d9c1f2bb4eea9c9f16a2e7e8e1a5,"target: Only reset specific dynamic entries during lun_group creation

This patch changes core_tpg_add_node_to_devs() to avoid unnecessarly
resetting every se_dev_entry in se_node_acl->tpg_lun_hlist when the
operation is driven by an explicit configfs se_lun->lun_group creation
via core_dev_add_lun() to only update a single se_lun.

Otherwise for the second core_tpg_check_initiator_node_acl() case, go
ahead and continue to scan the full set of currently active se_lun in
se_portal_group->tpg_lun_hlist.

Reviewed-by: Hannes Reinecke <b0d1e9e4a4e27620745ff49be9000da3174a4cc6@suse.de>
Cc: Christoph Hellwig <923f7720577207a44b32e59bbfbea59d27f1ae8e@lst.de>
Cc: Sagi Grimberg <380ce2a82d3d08e67ab163b51dc6d30288ad3f13@mellanox.com>
Signed-off-by: Nicholas Bellinger <978acd1567d5598152161fdf8bf3ca568f950c9b@linux-iscsi.org>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
TimothyGu/libilbc,062e14e8e6e4c8cd1c51b45fd64f6787ddbc8787,"Roll chromium_revision bb7899a..c8eec9a (360504:360565)

Change log: https://chromium.googlesource.com/chromium/src/+log/bb7899a..c8eec9a
Full diff: https://chromium.googlesource.com/chromium/src/+/bb7899a..c8eec9a

Changed dependencies:
* src/third_party/boringssl/src: https://boringssl.googlesource.com/boringssl.git/+log/d7421eb..3ac32b1
* src/tools/swarming_client: https://chromium.googlesource.com/external/swarming.client.git/+log/8fce796..05e1787
DEPS diff: https://chromium.googlesource.com/chromium/src/+/bb7899a..c8eec9a/DEPS

No update to Clang.

TBR=
CQ_EXTRA_TRYBOTS=tryserver.webrtc:win_baremetal,mac_baremetal,linux_baremetal

Review URL: https://codereview.webrtc.org/1457303002

Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#10713}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
qtproject/qtqa-gerrit,cf6c35942d2ca452cd6875e7e9c5cde58ddddce5,"Add ssh command to list groups.

Change-Id: Iaae73ec644e4f1ca631e8be1d90f7334ae5bd8c7
Signed-off-by: Edwin Kempin <b444e279ad95fdef4fbdd82c813b624595df204a@sap.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
tprrt/linux-stable,cd19154608610ab4cdd6c039e9214b8dd281845c,"drm/i915: Adjust CDCLK accordingly to our DBuf bw needs

According to BSpec max BW per slice is calculated using formula
Max BW = CDCLK * 64. Currently when calculating min CDCLK we
account only per plane requirements, however in order to avoid
FIFO underruns we need to estimate accumulated BW consumed by
all planes(ddb entries basically) residing on that particular
DBuf slice. This will allow us to put CDCLK lower and save power
when we don't need that much bandwidth or gain additional
performance once plane consumption grows.

v2: - Fix long line warning
    - Limited new DBuf bw checks to only gens >= 11

v3: - Lets track used Dbuf bw per slice and per crtc in bw state
      (or may be in DBuf state in future), that way we don't need
      to have all crtcs in state and those only if we detect if
      are actually going to change cdclk, just same way as we
      do with other stuff, i.e intel_atomic_serialize_global_state
      and co. Just as per Ville's paradigm.
    - Made dbuf bw calculation procedure look nicer by introducing
      for_each_dbuf_slice_in_mask - we often will now need to iterate
      slices using mask.
    - According to experimental results CDCLK * 64 accounts for
      overall bandwidth across all dbufs, not per dbuf.

v4: - Fixed missing const(Ville)
    - Removed spurious whitespaces(Ville)
    - Fixed local variable init(reduced scope where not needed)
    - Added some comments about data rate for planar formats
    - Changed struct intel_crtc_bw to intel_dbuf_bw
    - Moved dbuf bw calculation to intel_compute_min_cdclk(Ville)

v5: - Removed unneeded macro

v6: - Prevent too frequent CDCLK switching back and forth:
      Always switch to higher CDCLK when needed to prevent bandwidth
      issues, however don't switch to lower CDCLK earlier than once
      in 30 minutes in order to prevent constant modeset blinking.
      We could of course not switch back at all, however this is
      bad from power consumption point of view.

v7: - Fixed to track cdclk using bw_state, modeset will be now
      triggered only when CDCLK change is really needed.

v8: - Lock global state if bw_state->min_cdclk is changed.
    - Try getting bw_state only if there are crtcs in the commit
      (need to have read-locked global state)

v9: - Do not do Dbuf bw check for gens < 9 - triggers WARN
      as ddb_size is 0.

v10: - Lock global state for older gens as well.

v11: - Define new bw_calc_min_cdclk hook, instead of using
       a condition(Manasi Navare)

v12: - Fixed rebase conflict

v13: - Added spaces after declarations to make checkpatch happy.

Signed-off-by: Stanislav Lisovskiy <910af5f57236361085be29d498ea825f40072ca0@intel.com>
Reviewed-by: Manasi Navare <f124e76fbe500bf1335279627793be517809ba5a@intel.com>
Signed-off-by: Manasi Navare <f124e76fbe500bf1335279627793be517809ba5a@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20200520150058.16123-1-910af5f57236361085be29d498ea825f40072ca0@intel.com
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
vinriviere/m68k-atari-mint-binutils-gdb,4930751aaeebf663e6ce45c683b1653b2c60a68b,"* TODO: Note abstraction layer violation where ""ocd reset"" command
must invalidate the dcache, and how this might be fixed.

* monitor.c (#include ""dcache.h""): Removed.
(remote_dcache): Removed.
(monitor_open): Removed code that created local dcache.
(flush_monitor_dcache): Removed (unused function).
(monitor_resume): Removed call to dcache_invd().
(monitor_load): Likewise.
(monitor_xfer_memory): Changed to call monitor_write_memory(),
monitor_write_memory_block(), and monitor_read_memory() instead
of dcache_xfer_memory().
* monitor.h (flush_monitor_dcache): Removed (unused function).
* ocd.c (#include ""dcache.h""): Removed.
(ocd_dcache): Removed.
(ocd_open): Removed code that created local dcache.
(ocd_resume): Removed call to dcache_invd().
(ocd_xfer_memory): Changed to call ocd_write_bytes() and
ocd_read_bytes() instead of dcache_xfer_memory().
(bdm_reset_command): Invalidate target dcache.
* remote-bug.c (bug_load): Remove call to dcache_invd().
(bug_resume): Likewise.
(bug_settings): Remove dcache, readfunc, and writefunc fields
from initializer.
(bug_xfer_memory): Changed to call bug_read_memory() and
bug_write_memory() instead of dcache_xfer_memory().
* remote-nindy.c (#include ""dcache.h""): Removed.
(nindy_dcache): Removed.
(nindy_open): Removed code that created local dcache.
(nindy_resume): Removed call to dcache_invd().
(nindy_load): Likewise.
(nindy_xfer_inferior_memory): Changed to call ninMemPut() and
ninMemGet() instead of dcache_xfer_memory().
* remote-sds.c (#include ""dcache.h""): Removed.
(sds_dcache): Removed.
(sds_open): Removed code that created local dcache.
(sds_resume): Removed call to dcache_invd().
(sds_xfer_memory): Changed to call sds_write_bytes() and
sds_read_bytes() instead of dcache_xfer_memory().
* remote-utils.c (gr_open): Removed code that created local dcache.
* remote-utils.h (#include ""dcache.h""): Removed.
(struct gr_settings): Removed dcache, readfunc, and writefunc fields.
(gr_get_dcache, gr_set_dcache): Removed macro definitions.
* remote.c (#include ""dcache.h""): Removed.
(remote_dcache): Removed.
(remote_open_1): Removed code that created local dcache.
(remote_async_open_1): Likewise.
(remote_resume): Removed call to dcache_invd().
(remote_async_resume): Likewise.
(remote_xfer_memory): Changed to call remote_write_bytes() and
remote_read_bytes() instead of dcache_xfer_memory().
* wince.c (#include ""dcache.h""): Removed.
(remote_dcache): Removed.
(child_create_inferior): Removed code that created local dcache.
(child_xfer_memory): Changed to call remote_write_bytes() and
remote_read_bytes() instead of dcache_xfer_memory().
(child_resume): Removed call to dcache_invd().

* target.c (target_dcache): Added.
(target_load): Invalidate target_dcache.
(do_xfer_memory): New function.
(target_xfer_memory): Reimplement in terms of dcache_xfer_memory().
(target_xfer_memory_partial): Likewise.
(initialize_targets): Create target_dcache.
* target.h (#include ""dcache.h""): Added.
(target_open): Invalidate target_dcache.
(target_resume): Likewise.
(do_xfer_memory): New declaration.

* dcache.c (dcache_init): Removed reading and writing arguments.
(dcache_struct): Removed read_memory and write_memory fields.
(dcache_write_line): Call do_xfer_memory.
(dcache_read_line): Likewise.
(dcache_xfer_memory): Likewise.
(dcache_invalidate): Renamed from dcache_invd.
(dcache_init): Updated.
(dcache_xfer_memory): Updated.
* dcache.h (memxferfunc): Removed definition.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
mbedmicro/mbed,7275ee862636e6a13d32bc3efa3fe865162aa1e5,"[Nuvoton] Fix SPI DMA transfer

1. Disable unnecessary TX/RX threshold interrupts to avoid potential trap in DMA transfer
2. Start TX/RX DMA transfer simultaneously to fit H/W spec and avoid potential RX FIFO overflow issue
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
rakudo/rakudo,5a4963faadef2a7918e4bb75b514bea2082091a1,"Re-instate Iterator.countr|bool-only with a twist

I too didn't like the removal of .count-only and .bool-only last
week.  Then I realized it could still work *if* the methods would
only be called if they could produce the info *without* generating
any values.  So now, an Iterator *can* provide these methods for
efficiency: if they're not there, then the normal cause of action
(generating the values and cache them, then return its result) will
be used.  If they *do* exist, then they're supposed to return the
info *without* generating any values.

This breaks one test in t/spec/S02-names/pseudo.t because MVMContext
does not know how to provide nqp::elems.  This should be fixed one
way or another in the near future.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
GNOME/eog,433d30747cd4e7c44ea5a86e852dfdff9cf35d93,"Updated German translation, fix #369519.

2006-11-03  Hendrik Richter  <hendrikr@gnome.org>

	* de.po: Updated German translation, fix #369519.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
colinsc/koha,790b365831c0c883853a4f4c2b7755f03d1d9dd6,"Bug 20581: Unit tests for status_alias

This patch adds unit tests for the specific status_alias functionality
added in this bug

- Creation of the ILLSTATUS authorised value
- Illrequest->statusalias accessor
- Illrequest->status overloading to reset status_alias

To test:
1) Apply this patch
2) prove t/db_dependent/Illrequests.t

Signed-off-by: Niamh.Walker-Headon@it-tallaght.ie

Signed-off-by: Katrin Fischer <katrin.fischer.83@web.de>

Signed-off-by: Katrin Fischer <katrin.fischer.83@web.de>

Signed-off-by: Nick Clemens <75ef9faee755c70589550b513ad881e5a603182c@bywatersolutions.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
SAP/openui5,e4c626f29ad5cf6217504da47d45c20e815ccc7f,"[INTERNAL] sap.ui.core.sample.odata.v4.SalesOrders.Component: mock data for OData error responses

TEST:
see MIT.SalesOrderMessageHandling.html
-> ""Error messages in Sales Orders application""

PS1: introduce payload matchers in TestUtils
PS2: TestUtils refactoring; first steps regarding $batch change set processing
PS3: rebased
PS4: setupODataV4Server test only w/o realOData, switch off change set processing in general
PS5: package-lock.json deleted
PS6: provide OPA tests, MIT, remove coding regarding $batch change set support in TestUtils.js
PS7: ABC
PS8: Comments TCH
PS9: rebased because of failed voter + LTL
PS10: refactored TestUtils: unified direct and batch; added unit tests
PS11: review comments
PS12: rebased
PS13: corrected messages; removed language dependencies
PS14-15: review comments
PS16: comments PKS
PS17: tws
PS18: comments PKS, SBE
PS19: comment SBE
PS20: comments TCH

Change-Id: I80805028c5c6a3cf3b8c7dcd358845fd6c26838c
JIRA: CPOUI5UISERVICESV3-1463
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
opendaylight/ovsdb,029c614aaa152aad5961e0da09c379a12bef2cc8,"Bug 2045 - Egress / Ingress ACL swap broke the pipeline

Introduced by the fix for Bug 1752

Change-Id: Ibb4b23561871a6b076fe440b622842738076a930
Signed-off-by: Madhu Venugopal <6404e8a5ce9efaa49ed4dd7275f04a3e9d16a721@gmail.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,340f7c1413b444145ae252c5075e9be976865f78,"Add navigation_url_loader as an user traffic NTA

Bug: 952435
Change-Id: I9568cc51d467feba3f20b82b60cd465d5bf3d09d
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1574655
Reviewed-by: Tarun Bansal <84e77af7cdb6c576a39643f2fe817e9f91a687e9@chromium.org>
Commit-Queue: rajendrant <bcc2a44435071d12da63be217c132f7557c83a4b@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#652732}",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
chromium/chromium,89fd2788585c6dce032b3da2b9c6dcff21c001bb,"Update icon effect for non launchable apps

Blocked and paused app icons are greyed out and have
relevant badges applied.
Only one badge can be applied at the time. The order is following:
1. Blocked badge
2. Paused badge
3. Chrome badge

Bug: 1019833
Test: ChromeAppIconTest
Change-Id: Ia6f947e01bd97cd3ced6a858988d2226e448391f
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1990086
Commit-Queue: Aga Wronska <6d2abbe3a0ddd2ca21444e7e2eaf1912b6aff7e5@chromium.org>
Reviewed-by: David Bertoni <2e902df12e98e58afe41b3cf84f5bc3a45ea3e48@chromium.org>
Reviewed-by: Xiyuan Xia <db97f61d07c31fd69698b8602ab9b0e934f96b23@chromium.org>
Reviewed-by: James Cook <3741fd56a17d4d5fef7af0902a2401859b0cd435@chromium.org>
Reviewed-by: Nancy Wang <f7ebbc01cc2423fe06100cc0a0860514557ec157@chromium.org>
Cr-Commit-Position: 972c6d2dc6dd5efdad1377c0d224e03eb8f276f7@{#731557}
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
aws/aws-sdk-go,c7d34a368b19f9d8ab9022b92aec55f297baf574,"aws/request: Fix Pagination handling of empty string NextToken (#1733)

Fixes the SDK's handling of a Pagination NextToken's value being an
empty string compared to a nil value. The SDK was expecting NextToken's
to always be unset (nil) and treating any non-nil value as a valid
value. This was not the case in MediaLive's List APIs. As those APIs
return a empty string value instead of null or not setting the field at
all.

V1 SDK port of aws/aws-sdk-go-v2#94",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/spark,0d35f9ea3a73efd858f9e1a70fd13813ffaa344d,"[SPARK-24484][MLLIB] Power Iteration Clustering is giving incorrect clustering results when there are mutiple leading eigen values.

## What changes were proposed in this pull request?
![image](https://user-images.githubusercontent.com/23054875/41823325-e83e1d34-781b-11e8-8c34-fc6e7a042f3f.png)

![image](https://user-images.githubusercontent.com/23054875/41823367-733c9ba4-781c-11e8-8da2-b26460c2af63.png)
![image](https://user-images.githubusercontent.com/23054875/41823409-179dd910-781d-11e8-8d8c-9865156fad15.png)

**Method to determine if the top eigen values has same magnitude but opposite signs**
The vector is written as a linear combination of the eigen vectors at iteration k.
![image](https://user-images.githubusercontent.com/23054875/41822941-f8b13d4c-7814-11e8-8091-54c02721c1c5.png)
![image](https://user-images.githubusercontent.com/23054875/41822982-b80a6fc4-7815-11e8-9129-ed96a14f037f.png)
![image](https://user-images.githubusercontent.com/23054875/41823022-5b69e906-7816-11e8-847a-8fa5f0b6200e.png)

![image](https://user-images.githubusercontent.com/23054875/41823087-54311398-7817-11e8-90bf-e1be2bbff323.png)
![image](https://user-images.githubusercontent.com/23054875/41823121-e0b78324-7817-11e8-9596-379bd2e518af.png)
![image](https://user-images.githubusercontent.com/23054875/41823151-965319d2-7818-11e8-8b91-10f6276ace62.png)
![image](https://user-images.githubusercontent.com/23054875/41823182-75cdbad6-7819-11e8-912f-23c66a8359de.png)
![image](https://user-images.githubusercontent.com/23054875/41823221-1ca77a36-781a-11e8-9a40-48bd165797cc.png)
![image](https://user-images.githubusercontent.com/23054875/41823272-f6962b2a-781a-11e8-9978-1b2dc0dc8b2c.png)
![image](https://user-images.githubusercontent.com/23054875/41823303-75b296f0-781b-11e8-8501-6133b04769c8.png)

**So, we need to check if the reileigh coefficient at the convergence is lesser than the norm of the estimated eigen vector before normalizing**

(Please fill in changes proposed in this fix)
Added a UT

Please review http://spark.apache.org/contributing.html before opening a pull request.

Closes #21627 from shahidki31/picConvergence.

Authored-by: Shahid <070b5ca21fe5eb8476ce952ff6038906d630039b@gmail.com>
Signed-off-by: Sean Owen <3f9d48d7c3f24f7009479c5fa630bd1131ffc724@databricks.com>
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1
apache/spark,8fff0f92a4aca90b62c6e272eabcbb0257ba38d5,"[HOT-FIX][SQL][ML] Fix compile error from use of DataFrame in Java MaxAbsScaler example

## What changes were proposed in this pull request?

Fix build failure introduced in #11392 (change `DataFrame` -> `Dataset<Row>`).

## How was this patch tested?

Existing build/unit tests

Author: Nick Pentreath <nick.pentreath@gmail.com>

Closes #11653 from MLnick/java-maxabs-example-fix.
",,,,,,12_may_2021_mp_not_adaptive_commits_batch_1